{
  "address": "0x2fa9e338CFe579Ff4575BeD2e1Ea407e811F35bc",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newBuyTax",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newSellTax",
          "type": "uint8"
        }
      ],
      "name": "TaxRateChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTaxWallet",
          "type": "address"
        }
      ],
      "name": "TaxWalletChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalWallets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalTokens",
          "type": "uint256"
        }
      ],
      "name": "TokensAirdropped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burnedByWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "TokensBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "newBuyTax",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "newSellTax",
          "type": "uint8"
        }
      ],
      "name": "adjustTaxRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "airdrop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "antiBotEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isEnabled",
          "type": "bool"
        }
      ],
      "name": "enableAntiBot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableTrading",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isExcluded",
          "type": "bool"
        }
      ],
      "name": "excludeFromAntiBot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isExcluded",
          "type": "bool"
        }
      ],
      "name": "excludeFromFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "excludedFromAntiBot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "excludedFromFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "faucet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initLP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newTaxWallet",
          "type": "address"
        }
      ],
      "name": "setTaxWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxEthSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxRateBuy",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxRateSell",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxSwapMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxSwapMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "minValue",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "minDivider",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "maxValue",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "maxDivider",
          "type": "uint32"
        }
      ],
      "name": "taxSwapSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxTokensSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tradingOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8510ba43d21339fdc2fc557f14a304b8bcdac84b81be83abc486af8337145610",
  "receipt": {
    "to": null,
    "from": "0x9767a2B120614F526e923DAAF89843EC7C2292d7",
    "contractAddress": "0x2fa9e338CFe579Ff4575BeD2e1Ea407e811F35bc",
    "transactionIndex": 9,
    "gasUsed": "2856536",
    "logsBloom": "0x
    "blockHash": "0x3c8a7cd83758e006330ec7aae2832e1ff82c19bf05529c807c56d05e1e72fcfc",
    "transactionHash": "0x8510ba43d21339fdc2fc557f14a304b8bcdac84b81be83abc486af8337145610",
    "logs": [],
    "blockNumber": 3419485,
    "cumulativeGasUsed": "4114687",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "15027f3bb2f9c43daba32c013602e670",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newBuyTax\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newSellTax\",\"type\":\"uint8\"}],\"name\":\"TaxRateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTaxWallet\",\"type\":\"address\"}],\"name\":\"TaxWalletChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWallets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalTokens\",\"type\":\"uint256\"}],\"name\":\"TokensAirdropped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burnedByWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"newBuyTax\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"newSellTax\",\"type\":\"uint8\"}],\"name\":\"adjustTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"airdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiBotEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"enableAntiBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"excludeFromAntiBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isExcluded\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"excludedFromAntiBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"excludedFromFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initLP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTaxWallet\",\"type\":\"address\"}],\"name\":\"setTaxWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxEthSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRateBuy\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRateSell\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxSwapMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxSwapMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"minValue\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"minDivider\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxValue\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maxDivider\",\"type\":\"uint32\"}],\"name\":\"taxSwapSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxTokensSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KNDX_ERC20.sol\":\"KNDX\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"contracts/KNDX_ERC20.sol\":{\"content\":\"//SPDX-License-Identifier: MIT \\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"hardhat/console.sol\\\";\\r\\n\\r\\ninterface IERC20 {\\r\\n\\tfunction totalSupply() external view returns (uint256);\\r\\n\\tfunction decimals() external view returns (uint8);\\r\\n\\tfunction symbol() external view returns (string memory);\\r\\n\\tfunction name() external view returns (string memory);\\r\\n\\tfunction getOwner() external view returns (address);\\r\\n\\tfunction balanceOf(address account) external view returns (uint256);\\r\\n\\tfunction transfer(address recipient, uint256 amount) external returns (bool);\\r\\n\\tfunction allowance(address _owner, address spender) external view returns (uint256);\\r\\n\\tfunction approve(address spender, uint256 amount) external returns (bool);\\r\\n\\tfunction transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\r\\n\\tevent Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\tevent Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\\r\\nabstract contract Auth {\\r\\n\\taddress internal owner;\\r\\n\\tconstructor(address _owner) { owner = _owner; }\\r\\n\\tmodifier onlyOwner() { require(msg.sender == owner, \\\"Only contract owner can call this function\\\"); _; }\\r\\n\\tfunction transferOwnership(address payable newOwner) external onlyOwner { owner = newOwner; emit OwnershipTransferred(newOwner); }\\r\\n\\tevent OwnershipTransferred(address owner);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Factory { function createPair(address tokenA, address tokenB) external returns (address pair); }\\r\\ninterface IUniswapV2Router02 {\\r\\n\\tfunction swapExactTokensForETHSupportingFeeOnTransferTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external;\\r\\n\\tfunction WETH() external pure returns (address);\\r\\n\\tfunction factory() external pure returns (address);\\r\\n\\tfunction addLiquidityETH(address token, uint amountTokenDesired, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external payable returns (uint amountToken, uint amountETH, uint liquidity);\\r\\n}\\r\\n\\r\\ncontract KNDX is IERC20, Auth {\\r\\n\\tstring constant _name = \\\"Kondux\\\";\\r\\n\\tstring constant _symbol = \\\"KNDX\\\";\\r\\n\\tuint8 constant _decimals = 9;\\r\\n\\tuint256 constant _totalSupply = 1_000_000_000 * 10**_decimals;\\r\\n\\tmapping (address => uint256) _balances;\\r\\n\\tmapping (address => mapping (address => uint256)) _allowances;\\r\\n\\tmapping (address => bool) public excludedFromFees;\\r\\n\\tbool public tradingOpen;\\r\\n\\tuint256 public taxSwapMin; uint256 public taxSwapMax;\\r\\n\\tmapping (address => bool) private _isLiqPool;\\r\\n\\tuint8 constant _maxTaxRate = 5; \\r\\n\\tuint8 public taxRateBuy; uint8 public taxRateSell;\\r\\n\\r\\n\\tbool public antiBotEnabled;\\r\\n\\tmapping (address => bool) public excludedFromAntiBot;\\r\\n\\tmapping (address => uint256) private _lastSwapBlock;\\r\\n\\r\\n\\taddress payable private taxWallet = payable(0x79BD02b5936FFdC5915cB7Cd58156E3169F4F569);\\r\\n\\r\\n\\tbool private _inTaxSwap = false;\\r\\n\\taddress private constant _uniswapV2RouterAddress = address(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);\\r\\n\\tIUniswapV2Router02 private _uniswapV2Router;\\r\\n\\tmodifier lockTaxSwap { _inTaxSwap = true; _; _inTaxSwap = false; }\\r\\n\\r\\n\\tevent TokensAirdropped(uint256 totalWallets, uint256 totalTokens);\\r\\n\\tevent TokensBurned(address indexed burnedByWallet, uint256 tokenAmount);\\r\\n\\tevent TaxWalletChanged(address newTaxWallet);\\r\\n\\tevent TaxRateChanged(uint8 newBuyTax, uint8 newSellTax);\\r\\n\\r\\n\\tconstructor () Auth(msg.sender) {      \\r\\n\\t\\ttaxSwapMin = _totalSupply * 10 / 10000;\\r\\n\\t\\ttaxSwapMax = _totalSupply * 50 / 10000;\\r\\n\\t\\t_uniswapV2Router = IUniswapV2Router02(_uniswapV2RouterAddress);\\r\\n\\t\\texcludedFromFees[_uniswapV2RouterAddress] = true;\\r\\n\\r\\n\\t\\texcludedFromAntiBot[owner] = true;\\r\\n\\t\\texcludedFromAntiBot[address(this)] = true;\\r\\n\\r\\n\\t\\texcludedFromFees[owner] = true;\\r\\n\\t\\texcludedFromFees[address(this)] = true;\\r\\n\\t\\texcludedFromFees[taxWallet] = true;\\r\\n\\t}\\r\\n\\r\\n\\treceive() external payable {}\\r\\n\\t\\r\\n\\tfunction totalSupply() external pure override returns (uint256) { return _totalSupply; }\\r\\n\\tfunction decimals() external pure override returns (uint8) { return _decimals; }\\r\\n\\tfunction symbol() external pure override returns (string memory) { return _symbol; }\\r\\n\\tfunction name() external pure override returns (string memory) { return _name; }\\r\\n\\tfunction getOwner() external view override returns (address) { return owner; }\\r\\n\\tfunction balanceOf(address account) public view override returns (uint256) { return _balances[account]; }\\r\\n\\tfunction allowance(address holder, address spender) external view override returns (uint256) { return _allowances[holder][spender]; }\\r\\n\\r\\n\\tfunction approve(address spender, uint256 amount) public override returns (bool) {\\r\\n\\t\\t_allowances[msg.sender][spender] = amount;\\r\\n\\t\\temit Approval(msg.sender, spender, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction transfer(address recipient, uint256 amount) external override returns (bool) {\\r\\n\\t\\trequire(_checkTradingOpen(), \\\"Trading not open\\\");\\r\\n\\t\\treturn _transferFrom(msg.sender, recipient, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\\r\\n\\t\\trequire(_checkTradingOpen(), \\\"Trading not open\\\");\\r\\n\\t\\tif (_allowances[sender][msg.sender] != type(uint256).max){\\r\\n\\t\\t\\t_allowances[sender][msg.sender] = _allowances[sender][msg.sender] - amount;\\r\\n\\t\\t}\\r\\n\\t\\treturn _transferFrom(sender, recipient, amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _distributeInitialBalances() internal {\\r\\n\\t\\t//holder airdrops 27.965%, 1556 wallets\\r\\n\\t\\tuint256 airdropTokensAmount = 279_646_010 * 10**_decimals;\\r\\n\\t\\t_balances[owner] = airdropTokensAmount;\\r\\n\\t\\temit Transfer(address(0), owner, airdropTokensAmount ); \\r\\n\\r\\n\\t\\t// Treasury 25%: 0x1D0A105F0cED39b207AE444957cc70483c04C767\\r\\n\\t\\tuint256 treasuryAmount = 250_000_000 * 10**_decimals;\\r\\n\\t\\t_balances[address(0x1D0A105F0cED39b207AE444957cc70483c04C767)] = treasuryAmount;\\r\\n\\t\\temit Transfer(address(0), address(0x1D0A105F0cED39b207AE444957cc70483c04C767), treasuryAmount );\\r\\n\\r\\n\\t\\t// Dev Fund 19.462% : 0xac5c6FDd4F32977eec56C48978bAe86CE08968e0 \\r\\n\\t\\tuint256 devFundAmount = 194_620_743 * 10**_decimals;\\r\\n\\t\\t_balances[address(0xac5c6FDd4F32977eec56C48978bAe86CE08968e0)] = devFundAmount;\\r\\n\\t\\temit Transfer(address(0), address(0xac5c6FDd4F32977eec56C48978bAe86CE08968e0), devFundAmount );\\r\\n\\r\\n\\t\\t// Rewards pool 15%: 0x94baCbCceE5c16520Ab8545c35e89eCE7017a34D \\r\\n\\t\\tuint256 rewardsPoolAmount = 150_000_000 * 10**_decimals;\\r\\n\\t\\t_balances[address(0x94baCbCceE5c16520Ab8545c35e89eCE7017a34D)] = rewardsPoolAmount;\\r\\n\\t\\temit Transfer(address(0), address(0x94baCbCceE5c16520Ab8545c35e89eCE7017a34D), rewardsPoolAmount );\\r\\n\\r\\n\\t\\t// Marketing 44076978.428271124 : 0xCbE59E5967B80Ad18764d49c9184E6249aFe2D28 \\r\\n\\t\\tuint256 marketingAmount = 44_076_978 * 10**_decimals;\\r\\n\\t\\t_balances[address(0xCbE59E5967B80Ad18764d49c9184E6249aFe2D28)] = marketingAmount;\\r\\n\\t\\temit Transfer(address(0), address(0xCbE59E5967B80Ad18764d49c9184E6249aFe2D28), marketingAmount );\\r\\n\\r\\n\\t\\t//liquidity pool is 2.507%\\r\\n\\t\\tuint256 liquidityPoolAmount = 25_066_478 * 10**_decimals; \\r\\n\\t\\t_balances[address(this)] = liquidityPoolAmount;\\r\\n\\t\\temit Transfer(address(0), address(this), liquidityPoolAmount );\\r\\n\\r\\n\\t\\t// Burn amount (diff between total supply and the above, ~ 5.659%\\r\\n\\t\\tuint256 burnAmount = _totalSupply - (airdropTokensAmount+treasuryAmount+devFundAmount+rewardsPoolAmount+marketingAmount+liquidityPoolAmount);\\r\\n\\t\\t_balances[address(0)] = burnAmount;\\r\\n\\t\\temit Transfer(address(0), address(0), burnAmount );\\r\\n\\t\\temit TokensBurned(address(0), burnAmount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction initLP() external onlyOwner {\\r\\n\\t\\trequire(!tradingOpen, \\\"trading already open\\\");\\r\\n\\r\\n\\t\\t_distributeInitialBalances();\\r\\n\\r\\n\\t\\tuint256 _contractETHBalance = address(this).balance;\\r\\n\\t\\trequire(_contractETHBalance > 0, \\\"no eth in contract\\\");\\r\\n\\t\\tuint256 _contractTokenBalance = balanceOf(address(this));\\r\\n\\t\\trequire(_contractTokenBalance > 0, \\\"no tokens\\\");\\r\\n\\t\\taddress _uniLpAddr = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\\r\\n\\t\\t_isLiqPool[_uniLpAddr] = true;\\r\\n\\r\\n\\t\\t_approveRouter(_contractTokenBalance);\\r\\n\\t\\t_addLiquidity(_contractTokenBalance, _contractETHBalance, false);\\r\\n\\r\\n\\t\\t// _openTrading(); //trading will be open manually through enableTrading() function\\r\\n\\t}\\r\\n\\r\\n\\tfunction _approveRouter(uint256 _tokenAmount) internal {\\r\\n\\t\\tif ( _allowances[address(this)][_uniswapV2RouterAddress] < _tokenAmount ) {\\r\\n\\t\\t\\t_allowances[address(this)][_uniswapV2RouterAddress] = type(uint256).max;\\r\\n\\t\\t\\temit Approval(address(this), _uniswapV2RouterAddress, type(uint256).max);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction _addLiquidity(uint256 _tokenAmount, uint256 _ethAmountWei, bool autoburn) internal {\\r\\n\\t\\taddress lpTokenRecipient = address(0);\\r\\n\\t\\tif ( !autoburn ) { lpTokenRecipient = owner; }\\r\\n\\t\\t_uniswapV2Router.addLiquidityETH{value: _ethAmountWei} ( address(this), _tokenAmount, 0, 0, lpTokenRecipient, block.timestamp );\\r\\n\\t}\\r\\n\\r\\n    function enableTrading() external onlyOwner {\\r\\n        _openTrading();\\r\\n    }\\r\\n\\r\\n\\tfunction _openTrading() internal {\\r\\n        require(!tradingOpen, \\\"trading already open\\\");\\r\\n\\t\\ttaxRateBuy = 3;\\r\\n\\t\\ttaxRateSell = 3;\\r\\n\\t\\ttradingOpen = true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _transferFrom(address sender, address recipient, uint256 amount) internal returns (bool) {\\r\\n\\t\\trequire(sender != address(0) || recipient != address(0), \\\"Zero wallet cannot do transfers.\\\");\\r\\n\\t\\tif ( tradingOpen ) {\\r\\n\\t\\t\\tconsole.log(\\\"trading open\\\");\\r\\n\\t\\t\\tif ( antiBotEnabled ) { checkAntiBot(sender, recipient); }\\r\\n\\t\\t\\tif ( !_inTaxSwap && _isLiqPool[recipient] ) { _swapTaxAndDistributeEth(); }\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tuint256 _taxAmount = _calculateTax(sender, recipient, amount);\\r\\n\\t\\tconsole.log(\\\"tax amount: %s\\\", _taxAmount);\\r\\n\\t\\tuint256 _transferAmount = amount - _taxAmount;\\r\\n\\t\\tconsole.log(\\\"transfer amount: %s\\\", _transferAmount);\\r\\n\\t\\tconsole.log(\\\"sender balance: %s\\\", _balances[sender]);\\r\\n\\t\\tconsole.log(\\\"amount: %s\\\", amount);\\r\\n\\t\\t_balances[sender] = _balances[sender] - amount;\\r\\n\\t\\tconsole.log(\\\"sender balance: %s\\\", _balances[sender]);\\r\\n\\t\\tif ( _taxAmount > 0 ) { _balances[address(this)] = _balances[address(this)] + _taxAmount; }\\r\\n\\t\\t_balances[recipient] = _balances[recipient] + _transferAmount;\\r\\n\\t\\temit Transfer(sender, recipient, amount);\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _checkTradingOpen() private view returns (bool){\\r\\n\\t\\tbool checkResult = false;\\r\\n\\t\\tif ( tradingOpen ) { checkResult = true; } \\r\\n\\t\\telse if ( tx.origin == owner ) { checkResult = true; } \\r\\n\\t\\treturn checkResult;\\r\\n\\t}\\r\\n\\r\\n\\tfunction _calculateTax(address sender, address recipient, uint256 amount) internal view returns (uint256) {\\r\\n\\t\\tuint256 taxAmount;\\r\\n\\t\\tif ( !tradingOpen || excludedFromFees[sender] || excludedFromFees[recipient] ) { taxAmount = 0; }\\r\\n\\t\\telse if ( _isLiqPool[sender] ) { taxAmount = amount * taxRateBuy / 100; }\\r\\n\\t\\telse if ( _isLiqPool[recipient] ) { taxAmount = amount * taxRateSell / 100; }\\r\\n\\t\\telse { taxAmount = 0; }\\r\\n\\t\\treturn taxAmount;\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction burnTokens(uint256 amount) external {\\r\\n\\t\\t//burns tokens from the msg.sender's wallet\\r\\n\\t\\tuint256 _tokensAvailable = balanceOf(msg.sender);\\r\\n\\t\\trequire(amount <= _tokensAvailable, \\\"Token balance too low\\\");\\r\\n\\t\\t_balances[msg.sender] -= amount;\\r\\n\\t\\t_balances[address(0)] += amount;\\r\\n\\t\\temit Transfer(msg.sender,address(0), amount);\\r\\n\\t\\temit TokensBurned(msg.sender, amount);\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\tfunction checkAntiBot(address sender, address recipient) internal {\\r\\n\\t\\tif ( _isLiqPool[sender] && !excludedFromAntiBot[recipient] ) { //buy transactions\\r\\n\\t\\t\\trequire(_lastSwapBlock[recipient] < block.number, \\\"AntiBot triggered\\\");\\r\\n\\t\\t\\t_lastSwapBlock[recipient] = block.number;\\r\\n\\t\\t} else if ( _isLiqPool[recipient] && !excludedFromAntiBot[sender] ) { //sell transactions\\r\\n\\t\\t\\trequire(_lastSwapBlock[sender] < block.number, \\\"AntiBot triggered\\\");\\r\\n\\t\\t\\t_lastSwapBlock[sender] = block.number;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction enableAntiBot(bool isEnabled) external onlyOwner {\\r\\n\\t\\tantiBotEnabled = isEnabled;\\r\\n\\t}\\r\\n\\r\\n\\tfunction excludeFromAntiBot(address wallet, bool isExcluded) external onlyOwner {\\r\\n\\t\\tif (!isExcluded) { require(wallet != address(this) && wallet != owner, \\\"This address must be excluded\\\" ); }\\r\\n\\t\\texcludedFromAntiBot[wallet] = isExcluded;\\r\\n\\t}\\r\\n\\r\\n\\tfunction excludeFromFees(address wallet, bool isExcluded) external onlyOwner {\\r\\n\\t\\tif (isExcluded) { require(wallet != address(this) && wallet != owner, \\\"Cannot enforce fees for this address\\\"); }\\r\\n\\t\\texcludedFromFees[wallet] = isExcluded;\\r\\n\\t}\\r\\n\\r\\n\\tfunction adjustTaxRate(uint8 newBuyTax, uint8 newSellTax) external onlyOwner {\\r\\n\\t\\trequire(newBuyTax <= _maxTaxRate && newSellTax <= _maxTaxRate, \\\"Tax too high\\\");\\r\\n\\t\\t//set new tax rate percentage - cannot be higher than the default rate 5%\\r\\n\\t\\ttaxRateBuy = newBuyTax;\\r\\n\\t\\ttaxRateSell = newSellTax;\\r\\n\\t\\temit TaxRateChanged(newBuyTax, newSellTax);\\r\\n\\t}\\r\\n  \\r\\n\\tfunction setTaxWallet(address newTaxWallet) external onlyOwner {\\r\\n\\t\\ttaxWallet = payable(newTaxWallet);\\r\\n\\t\\texcludedFromFees[newTaxWallet] = true;\\r\\n\\t\\temit TaxWalletChanged(newTaxWallet);\\r\\n\\t}\\r\\n\\r\\n\\tfunction taxSwapSettings(uint32 minValue, uint32 minDivider, uint32 maxValue, uint32 maxDivider) external onlyOwner {\\r\\n\\t\\ttaxSwapMin = _totalSupply * minValue / minDivider;\\r\\n\\t\\ttaxSwapMax = _totalSupply * maxValue / maxDivider;\\r\\n\\t\\trequire(taxSwapMax>=taxSwapMin, \\\"MinMax error\\\");\\r\\n\\t\\trequire(taxSwapMax>_totalSupply / 10000, \\\"Upper threshold too low\\\");\\r\\n\\t\\trequire(taxSwapMax<_totalSupply * 2 / 100, \\\"Upper threshold too high\\\");\\r\\n\\t}\\r\\n\\r\\n\\tfunction _swapTaxAndDistributeEth() private lockTaxSwap {\\r\\n\\t\\tuint256 _taxTokensAvailable = balanceOf(address(this));\\r\\n\\t\\tif ( _taxTokensAvailable >= taxSwapMin && tradingOpen ) {\\r\\n\\t\\t\\tif ( _taxTokensAvailable >= taxSwapMax ) { _taxTokensAvailable = taxSwapMax; }\\r\\n\\t\\t\\tif ( _taxTokensAvailable > 10**_decimals) {\\r\\n\\t\\t\\t\\t_swapTaxTokensForEth(_taxTokensAvailable);\\r\\n\\t\\t\\t\\tuint256 _contractETHBalance = address(this).balance;\\r\\n\\t\\t\\t\\tif (_contractETHBalance > 0) { _distributeTaxEth(_contractETHBalance); }\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction _swapTaxTokensForEth(uint256 _tokenAmount) private {\\r\\n\\t\\t_approveRouter(_tokenAmount);\\r\\n\\t\\taddress[] memory path = new address[](2);\\r\\n\\t\\tpath[0] = address(this);\\r\\n\\t\\tpath[1] = _uniswapV2Router.WETH();\\r\\n\\t\\t_uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(_tokenAmount,0,path,address(this),block.timestamp);\\r\\n\\t}\\r\\n\\r\\n\\tfunction _distributeTaxEth(uint256 _amount) private {\\r\\n\\t\\ttaxWallet.transfer(_amount);\\r\\n\\t}\\r\\n\\r\\n\\tfunction taxTokensSwap() external onlyOwner {\\r\\n\\t\\tuint256 taxTokenBalance = balanceOf(address(this));\\r\\n\\t\\trequire(taxTokenBalance > 0, \\\"No tokens\\\");\\r\\n\\t\\t_swapTaxTokensForEth(taxTokenBalance);\\r\\n\\t}\\r\\n\\r\\n\\tfunction taxEthSend() external onlyOwner { \\r\\n\\t\\tuint256 _contractEthBalance = address(this).balance;\\r\\n\\t\\trequire(_contractEthBalance > 0, \\\"No ETH in contract to distribute\\\");\\r\\n\\t\\t_distributeTaxEth(_contractEthBalance); \\r\\n\\t}\\r\\n\\r\\n\\tfunction airdrop(address[] calldata addresses, uint256[] calldata tokenAmounts) external onlyOwner {\\r\\n        require(addresses.length <= 250,\\\"Wallet count over 250 (gas risk)\\\");\\r\\n        require(addresses.length == tokenAmounts.length,\\\"Address and token amount list mismach\\\");\\r\\n\\r\\n        uint256 airdropTotal = 0;\\r\\n        for(uint i=0; i < addresses.length; i++){\\r\\n            airdropTotal += (tokenAmounts[i] * 10**_decimals);\\r\\n        }\\r\\n        require(_balances[msg.sender] >= airdropTotal, \\\"Token balance lower than airdrop total\\\");\\r\\n\\r\\n        for(uint i=0; i < addresses.length; i++){\\r\\n            _balances[msg.sender] -= (tokenAmounts[i] * 10**_decimals);\\r\\n            _balances[addresses[i]] += (tokenAmounts[i] * 10**_decimals);\\r\\n\\t\\t\\temit Transfer(msg.sender, addresses[i], (tokenAmounts[i] * 10**_decimals) );       \\r\\n        }\\r\\n\\r\\n        emit TokensAirdropped(addresses.length, airdropTotal);\\r\\n    }\\r\\n\\r\\n    // for Testing\\r\\n    function faucet() public {\\r\\n\\t\\tuint _amount = 10 ** 29;\\r\\n        _balances[msg.sender] += _amount; \\r\\n        emit Transfer(address(0), msg.sender, _amount); \\r\\n    }\\r\\n}\",\"keccak256\":\"0x1d5f035778edf026611cdd71a848ff6a81ec042f77f025867165a7a323e412a0\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600b80546001600160a81b0319167379bd02b5936ffdc5915cb7cd58156e3169f4f5691790553480156200003757600080fd5b50600080546001600160a01b031916331790556127106200005b6009600a620002a2565b6200006b90633b9aca00620002ba565b6200007890600a620002ba565b620000849190620002d4565b600555612710620000986009600a620002a2565b620000a890633b9aca00620002ba565b620000b5906032620002ba565b620000c19190620002d4565b600655600c80546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d1790557ffb19a963956c9cb662dd3ae48988c4b90766df71ea130109840abe0a1b23dba8805460ff199081166001908117909255600080546001600160a01b0390811682526009602090815260408084208054861687179055308085528185208054871688179055845484168552600390925280842080548616871790559083528083208054851686179055600b549091168252902080549091169091179055620002f7565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620001e4578160001904821115620001c857620001c86200018d565b80851615620001d657918102915b93841c9390800290620001a8565b509250929050565b600082620001fd575060016200029c565b816200020c575060006200029c565b8160018114620002255760028114620002305762000250565b60019150506200029c565b60ff8411156200024457620002446200018d565b50506001821b6200029c565b5060208310610133831016604e8410600b841016171562000275575081810a6200029c565b620002818383620001a3565b80600019048211156200029857620002986200018d565b0290505b92915050565b6000620002b360ff841683620001ec565b9392505050565b80820281158282048414176200029c576200029c6200018d565b600082620002f257634e487b7160e01b600052601260045260246000fd5b500490565b612e2580620003076000396000f3fe6080604052600436106101e65760003560e01c806395d89b4111610102578063dbe66ca011610095578063ea414b2811610064578063ea414b28146105ea578063eb8199481461060a578063f2fde38b14610620578063ffb54a991461064057600080fd5b8063dbe66ca01461054a578063dca2a8b61461057a578063dd62ed3e1461058f578063de5f72fd146105d557600080fd5b8063cc18e05a116100d1578063cc18e05a146104d5578063cfc06e0b146104f4578063d8c6404b14610514578063db8615991461053457600080fd5b806395d89b4114610448578063a419117814610475578063a9059cbb14610495578063c0246668146104b557600080fd5b8063672434821161017a57806370a082311161014957806370a08231146103bb57806380781cf9146103f1578063893d20e81461040b5780638a8c523c1461043357600080fd5b806367243482146103465780636b7f8b90146103665780636d1b229d146103865780636e34e91d146103a657600080fd5b80631c939ee9116101b65780631c939ee9146102bf57806323b872dd146102d4578063313ce567146102f4578063388b4f171461031657600080fd5b8062fffc9d146101f257806306fdde0314610214578063095ea7b31461026c57806318160ddd1461029c57600080fd5b366101ed57005b600080fd5b3480156101fe57600080fd5b5061021261020d366004612872565b61065a565b005b34801561022057600080fd5b5060408051808201909152600681527f4b6f6e647578000000000000000000000000000000000000000000000000000060208201525b604051610263919061290c565b60405180910390f35b34801561027857600080fd5b5061028c610287366004612934565b610883565b6040519015158152602001610263565b3480156102a857600080fd5b506102b16108f0565b604051908152602001610263565b3480156102cb57600080fd5b50610212610911565b3480156102e057600080fd5b5061028c6102ef366004612960565b6109c6565b34801561030057600080fd5b5060095b60405160ff9091168152602001610263565b34801561032257600080fd5b5061028c6103313660046129a1565b60096020526000908152604090205460ff1681565b34801561035257600080fd5b50610212610361366004612a0a565b610aa2565b34801561037257600080fd5b50610212610381366004612a86565b610e63565b34801561039257600080fd5b506102126103a1366004612aa1565b610eda565b3480156103b257600080fd5b50610212610ffd565b3480156103c757600080fd5b506102b16103d63660046129a1565b6001600160a01b031660009081526001602052604090205490565b3480156103fd57600080fd5b506008546103049060ff1681565b34801561041757600080fd5b506000546040516001600160a01b039091168152602001610263565b34801561043f57600080fd5b5061021261131a565b34801561045457600080fd5b506040805180820190915260048152630969c88b60e31b6020820152610256565b34801561048157600080fd5b50610212610490366004612acb565b61137f565b3480156104a157600080fd5b5061028c6104b0366004612934565b61149b565b3480156104c157600080fd5b506102126104d0366004612afe565b6114f6565b3480156104e157600080fd5b5060085461030490610100900460ff1681565b34801561050057600080fd5b5061021261050f366004612afe565b611601565b34801561052057600080fd5b5060085461028c9062010000900460ff1681565b34801561054057600080fd5b506102b160065481565b34801561055657600080fd5b5061028c6105653660046129a1565b60036020526000908152604090205460ff1681565b34801561058657600080fd5b506102126116ff565b34801561059b57600080fd5b506102b16105aa366004612b2a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156105e157600080fd5b506102126117c0565b3480156105f657600080fd5b506102126106053660046129a1565b61181d565b34801561061657600080fd5b506102b160055481565b34801561062c57600080fd5b5061021261063b3660046129a1565b6118f3565b34801561064c57600080fd5b5060045461028c9060ff1681565b6000546001600160a01b031633146106ba5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084015b60405180910390fd5b63ffffffff8084169085166106d16009600a612c5d565b6106df90633b9aca00612c6c565b6106e99190612c6c565b6106f39190612c83565b60055563ffffffff80821690831661070d6009600a612c5d565b61071b90633b9aca00612c6c565b6107259190612c6c565b61072f9190612c83565b600681905560055411156107855760405162461bcd60e51b815260206004820152600c60248201527f4d696e4d6178206572726f72000000000000000000000000000000000000000060448201526064016106b1565b6127106107946009600a612c5d565b6107a290633b9aca00612c6c565b6107ac9190612c83565b600654116107fc5760405162461bcd60e51b815260206004820152601760248201527f5570706572207468726573686f6c6420746f6f206c6f7700000000000000000060448201526064016106b1565b606461080a6009600a612c5d565b61081890633b9aca00612c6c565b610823906002612c6c565b61082d9190612c83565b6006541061087d5760405162461bcd60e51b815260206004820152601860248201527f5570706572207468726573686f6c6420746f6f2068696768000000000000000060448201526064016106b1565b50505050565b3360008181526002602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108de9086815260200190565b60405180910390a35060015b92915050565b60006108fe6009600a612c5d565b61090c90633b9aca00612c6c565b905090565b6000546001600160a01b0316331461096c5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b47806109ba5760405162461bcd60e51b815260206004820181905260248201527f4e6f2045544820696e20636f6e747261637420746f206469737472696275746560448201526064016106b1565b6109c3816119a9565b50565b60006109d06119e7565b610a0f5760405162461bcd60e51b815260206004820152601060248201526f2a3930b234b733903737ba1037b832b760811b60448201526064016106b1565b6001600160a01b038416600090815260026020908152604080832033845290915290205460001914610a8f576001600160a01b0384166000908152600260209081526040808320338452909152902054610a6a908390612ca5565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610a9a848484611a1a565b949350505050565b6000546001600160a01b03163314610afd5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b60fa831115610b4e5760405162461bcd60e51b815260206004820181905260248201527f57616c6c657420636f756e74206f766572203235302028676173207269736b2960448201526064016106b1565b828114610bc35760405162461bcd60e51b815260206004820152602560248201527f4164647265737320616e6420746f6b656e20616d6f756e74206c697374206d6960448201527f736d61636800000000000000000000000000000000000000000000000000000060648201526084016106b1565b6000805b84811015610c1c57610bdb6009600a612c5d565b848483818110610bed57610bed612cb8565b90506020020135610bfe9190612c6c565b610c089083612cce565b915080610c1481612ce1565b915050610bc7565b5033600090815260016020526040902054811115610ca25760405162461bcd60e51b815260206004820152602660248201527f546f6b656e2062616c616e6365206c6f776572207468616e2061697264726f7060448201527f20746f74616c000000000000000000000000000000000000000000000000000060648201526084016106b1565b60005b84811015610e2257610cb96009600a612c5d565b848483818110610ccb57610ccb612cb8565b90506020020135610cdc9190612c6c565b3360009081526001602052604081208054909190610cfb908490612ca5565b90915550610d0d90506009600a612c5d565b848483818110610d1f57610d1f612cb8565b90506020020135610d309190612c6c565b60016000888885818110610d4657610d46612cb8565b9050602002016020810190610d5b91906129a1565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d8a9190612cce565b909155508690508582818110610da257610da2612cb8565b9050602002016020810190610db791906129a1565b6001600160a01b031633600080516020612df9833981519152610ddc6009600a612c5d565b878786818110610dee57610dee612cb8565b90506020020135610dff9190612c6c565b60405190815260200160405180910390a380610e1a81612ce1565b915050610ca5565b5060408051858152602081018390527f71cc7095cc35ed4701c217a8efb440732eb0737da67f6548c008ac26fba95464910160405180910390a15050505050565b6000546001600160a01b03163314610ebe5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b60088054911515620100000262ff000019909216919091179055565b3360009081526001602052604090205480821115610f3a5760405162461bcd60e51b815260206004820152601560248201527f546f6b656e2062616c616e636520746f6f206c6f77000000000000000000000060448201526064016106b1565b3360009081526001602052604081208054849290610f59908490612ca5565b9091555050600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb498054849290610f99908490612cce565b90915550506040518281526000903390600080516020612df98339815191529060200160405180910390a360405182815233907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69060200160405180910390a25050565b6000546001600160a01b031633146110585760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b60045460ff16156110ab5760405162461bcd60e51b815260206004820152601460248201527f74726164696e6720616c7265616479206f70656e00000000000000000000000060448201526064016106b1565b6110b3611d96565b47806111015760405162461bcd60e51b815260206004820152601260248201527f6e6f2065746820696e20636f6e7472616374000000000000000000000000000060448201526064016106b1565b306000908152600160205260409020548061115e5760405162461bcd60e51b815260206004820152600960248201527f6e6f20746f6b656e73000000000000000000000000000000000000000000000060448201526064016106b1565b600c546040805163c45a015560e01b815290516000926001600160a01b03169163c45a01559160048083019260209291908290030181865afa1580156111a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cc9190612cfa565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561122e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112529190612cfa565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156112b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112db9190612cfa565b6001600160a01b0381166000908152600760205260409020805460ff1916600117905590506113098261217f565b6113158284600061221d565b505050565b6000546001600160a01b031633146113755760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b61137d6122ce565b565b6000546001600160a01b031633146113da5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b600560ff8316118015906113f25750600560ff821611155b61143e5760405162461bcd60e51b815260206004820152600c60248201527f54617820746f6f2068696768000000000000000000000000000000000000000060448201526064016106b1565b6008805460ff84811661ffff199092168217610100918516918202179092556040805191825260208201929092527f1dcee7b4b427ba2551f752d6f3ff03de326f6a4fca7432dda760ccff555f27f3910160405180910390a15050565b60006114a56119e7565b6114e45760405162461bcd60e51b815260206004820152601060248201526f2a3930b234b733903737ba1037b832b760811b60448201526064016106b1565b6114ef338484611a1a565b9392505050565b6000546001600160a01b031633146115515760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b80156115d6576001600160a01b038216301480159061157e57506000546001600160a01b03838116911614155b6115d65760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f7420656e666f726365206665657320666f722074686973206164646044820152637265737360e01b60648201526084016106b1565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b6000546001600160a01b0316331461165c5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b806116d4576001600160a01b038216301480159061168857506000546001600160a01b03838116911614155b6116d45760405162461bcd60e51b815260206004820152601d60248201527f546869732061646472657373206d757374206265206578636c7564656400000060448201526064016106b1565b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6000546001600160a01b0316331461175a5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b30600090815260016020526040902054806117b75760405162461bcd60e51b815260206004820152600960248201527f4e6f20746f6b656e73000000000000000000000000000000000000000000000060448201526064016106b1565b6109c38161233f565b33600090815260016020526040812080546c01431e0fae6d7217caa0000000928392916117ee908490612cce565b90915550506040518181523390600090600080516020612df9833981519152906020015b60405180910390a350565b6000546001600160a01b031633146118785760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316908117909155600081815260036020908152604091829020805460ff1916600117905590519182527ea263b61aab5ebdcff20c4c0c74c2589ea5ab52149abde19eca17ad5221789991015b60405180910390a150565b6000546001600160a01b0316331461194e5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163906020016118e8565b600b546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156119e3573d6000803e3d6000fd5b5050565b600454600090819060ff16156119ff57506001919050565b6000546001600160a01b03163203611a15575060015b919050565b60006001600160a01b038416151580611a3b57506001600160a01b03831615155b611a875760405162461bcd60e51b815260206004820181905260248201527f5a65726f2077616c6c65742063616e6e6f7420646f207472616e73666572732e60448201526064016106b1565b60045460ff1615611b2a57611ad06040518060400160405280600c81526020017f74726164696e67206f70656e0000000000000000000000000000000000000000815250612489565b60085462010000900460ff1615611aeb57611aeb84846124e1565b600b54600160a01b900460ff16158015611b1d57506001600160a01b03831660009081526007602052604090205460ff165b15611b2a57611b2a612675565b6000611b378585856126ff565b9050611b786040518060400160405280600e81526020017f74617820616d6f756e743a202573000000000000000000000000000000000000815250826127e7565b6000611b848285612ca5565b9050611bc56040518060400160405280601381526020017f7472616e7366657220616d6f756e743a20257300000000000000000000000000815250826127e7565b611c296040518060400160405280601281526020017f73656e6465722062616c616e63653a202573000000000000000000000000000081525060016000896001600160a01b03166001600160a01b03168152602001908152602001600020546127e7565b611c686040518060400160405280600a81526020017f616d6f756e743a20257300000000000000000000000000000000000000000000815250856127e7565b6001600160a01b038616600090815260016020526040902054611c8c908590612ca5565b6001600160a01b03871660008181526001602081815260408084208690558051808201909152601281527f73656e6465722062616c616e63653a202573000000000000000000000000000081830152939092529052611cea916127e7565b8115611d1c5730600090815260016020526040902054611d0b908390612cce565b306000908152600160205260409020555b6001600160a01b038516600090815260016020526040902054611d40908290612cce565b6001600160a01b038087166000818152600160205260409081902093909355915190881690600080516020612df983398151915290611d829088815260200190565b60405180910390a350600195945050505050565b6000611da46009600a612c5d565b611db2906310ab0f3a612c6c565b600080546001600160a01b03908116825260016020526040808320849055825490519394501691600080516020612df983398151915290611df69085815260200190565b60405180910390a36000611e0c6009600a612c5d565b611e1a90630ee6b280612c6c565b731d0a105f0ced39b207ae444957cc70483c04c767600081815260016020527f94917cf8f81138426f3d60f2b697339dc349182de65c20b61e7450734aa33b238390556040519293509091600080516020612df983398151915290611e829085815260200190565b60405180910390a36000611e986009600a612c5d565b611ea690630b99ad47612c6c565b73ac5c6fdd4f32977eec56c48978bae86ce08968e0600081815260016020527f2015e3cc24b6a6304e42562558fbc9cdd2bda8f24b7f88972f64db0c6f2bd8cd8390556040519293509091600080516020612df983398151915290611f0e9085815260200190565b60405180910390a36000611f246009600a612c5d565b611f32906308f0d180612c6c565b7394bacbccee5c16520ab8545c35e89ece7017a34d600081815260016020527f5615441033e961f93df0b1ef773335a295fd9eee70461345aa4bd6ab791b302a8390556040519293509091600080516020612df983398151915290611f9a9085815260200190565b60405180910390a36000611fb06009600a612c5d565b611fbe906302a08fb2612c6c565b73cbe59e5967b80ad18764d49c9184e6249afe2d28600081815260016020527f6e6b5fdb8858516ed47244d778b27d06aeaec0c8a598c876e3e840dc0de7ebfa8390556040519293509091600080516020612df9833981519152906120269085815260200190565b60405180910390a3600061203c6009600a612c5d565b61204a9063017e7bee612c6c565b30600081815260016020526040808220849055519293509091600080516020612df9833981519152906120809085815260200190565b60405180910390a36000818385876120988a8c612cce565b6120a29190612cce565b6120ac9190612cce565b6120b69190612cce565b6120c09190612cce565b6120cc6009600a612c5d565b6120da90633b9aca00612c6c565b6120e49190612ca5565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49829055604051919250908190600080516020612df9833981519152906121389085815260200190565b60405180910390a36040518181526000907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69060200160405180910390a250505050505050565b306000908152600260209081526040808320737a250d5630b4cf539739df2c5dacb4c659f2488d84529091529020548111156109c357306000818152600260209081526040808320737a250d5630b4cf539739df2c5dacb4c659f2488d808552908352928190206000199081905590519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101611812565b60008161223257506000546001600160a01b03165b600c5460405163f305d71960e01b81523060048201526024810186905260006044820181905260648201526001600160a01b0383811660848301524260a48301529091169063f305d71990859060c40160606040518083038185885af11580156122a0573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906122c59190612d17565b50505050505050565b60045460ff16156123215760405162461bcd60e51b815260206004820152601460248201527f74726164696e6720616c7265616479206f70656e00000000000000000000000060448201526064016106b1565b6008805461ffff19166103031790556004805460ff19166001179055565b6123488161217f565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061237d5761237d612cb8565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156123d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fa9190612cfa565b8160018151811061240d5761240d612cb8565b6001600160a01b039283166020918202929092010152600c5460405163791ac94760e01b815291169063791ac94790612453908590600090869030904290600401612d45565b600060405180830381600087803b15801561246d57600080fd5b505af1158015612481573d6000803e3d6000fd5b505050505050565b6109c38160405160240161249d919061290c565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663104c13eb60e21b17905261283d565b6001600160a01b03821660009081526007602052604090205460ff16801561252257506001600160a01b03811660009081526009602052604090205460ff16155b156125ab576001600160a01b0381166000908152600a6020526040902054431161258e5760405162461bcd60e51b815260206004820152601160248201527f416e7469426f742074726967676572656400000000000000000000000000000060448201526064016106b1565b6001600160a01b03166000908152600a6020526040902043905550565b6001600160a01b03811660009081526007602052604090205460ff1680156125ec57506001600160a01b03821660009081526009602052604090205460ff16155b156119e3576001600160a01b0382166000908152600a602052604090205443116126585760405162461bcd60e51b815260206004820152601160248201527f416e7469426f742074726967676572656400000000000000000000000000000060448201526064016106b1565b506001600160a01b03166000908152600a60205260409020439055565b600b805460ff60a01b1916600160a01b17905530600090815260016020526040812054905060055481101580156126ae575060045460ff165b156126ef5760065481106126c157506006545b6126cd6009600a612c5d565b8111156126ef576126dd8161233f565b4780156126ed576126ed816119a9565b505b50600b805460ff60a01b19169055565b600454600090819060ff16158061272e57506001600160a01b03851660009081526003602052604090205460ff165b8061275157506001600160a01b03841660009081526003602052604090205460ff165b1561275e57506000610a9a565b6001600160a01b03851660009081526007602052604090205460ff16156127a3576008546064906127929060ff1685612c6c565b61279c9190612c83565b9050610a9a565b6001600160a01b03841660009081526007602052604090205460ff16156127dc5760085460649061279290610100900460ff1685612c6c565b506000949350505050565b6119e382826040516024016127fd929190612db6565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632d839cb360e21b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b803563ffffffff81168114611a1557600080fd5b6000806000806080858703121561288857600080fd5b6128918561285e565b935061289f6020860161285e565b92506128ad6040860161285e565b91506128bb6060860161285e565b905092959194509250565b6000815180845260005b818110156128ec576020818501810151868301820152016128d0565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006114ef60208301846128c6565b6001600160a01b03811681146109c357600080fd5b6000806040838503121561294757600080fd5b82356129528161291f565b946020939093013593505050565b60008060006060848603121561297557600080fd5b83356129808161291f565b925060208401356129908161291f565b929592945050506040919091013590565b6000602082840312156129b357600080fd5b81356114ef8161291f565b60008083601f8401126129d057600080fd5b50813567ffffffffffffffff8111156129e857600080fd5b6020830191508360208260051b8501011115612a0357600080fd5b9250929050565b60008060008060408587031215612a2057600080fd5b843567ffffffffffffffff80821115612a3857600080fd5b612a44888389016129be565b90965094506020870135915080821115612a5d57600080fd5b50612a6a878288016129be565b95989497509550505050565b80358015158114611a1557600080fd5b600060208284031215612a9857600080fd5b6114ef82612a76565b600060208284031215612ab357600080fd5b5035919050565b803560ff81168114611a1557600080fd5b60008060408385031215612ade57600080fd5b612ae783612aba565b9150612af560208401612aba565b90509250929050565b60008060408385031215612b1157600080fd5b8235612b1c8161291f565b9150612af560208401612a76565b60008060408385031215612b3d57600080fd5b8235612b488161291f565b91506020830135612b588161291f565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115612bb4578160001904821115612b9a57612b9a612b63565b80851615612ba757918102915b93841c9390800290612b7e565b509250929050565b600082612bcb575060016108ea565b81612bd8575060006108ea565b8160018114612bee5760028114612bf857612c14565b60019150506108ea565b60ff841115612c0957612c09612b63565b50506001821b6108ea565b5060208310610133831016604e8410600b8410161715612c37575081810a6108ea565b612c418383612b79565b8060001904821115612c5557612c55612b63565b029392505050565b60006114ef60ff841683612bbc565b80820281158282048414176108ea576108ea612b63565b600082612ca057634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156108ea576108ea612b63565b634e487b7160e01b600052603260045260246000fd5b808201808211156108ea576108ea612b63565b600060018201612cf357612cf3612b63565b5060010190565b600060208284031215612d0c57600080fd5b81516114ef8161291f565b600080600060608486031215612d2c57600080fd5b8351925060208401519150604084015190509250925092565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015612d955784516001600160a01b031683529383019391830191600101612d70565b50506001600160a01b03969096166060850152505050608001529392505050565b604081526000612dc960408301856128c6565b9050826020830152939250505056fe4f6e6c7920636f6e7472616374206f776e65722063616e2063616c6c20746869ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c6343000811000a",
  "deployedBytecode": "0x6080604052600436106101e65760003560e01c806395d89b4111610102578063dbe66ca011610095578063ea414b2811610064578063ea414b28146105ea578063eb8199481461060a578063f2fde38b14610620578063ffb54a991461064057600080fd5b8063dbe66ca01461054a578063dca2a8b61461057a578063dd62ed3e1461058f578063de5f72fd146105d557600080fd5b8063cc18e05a116100d1578063cc18e05a146104d5578063cfc06e0b146104f4578063d8c6404b14610514578063db8615991461053457600080fd5b806395d89b4114610448578063a419117814610475578063a9059cbb14610495578063c0246668146104b557600080fd5b8063672434821161017a57806370a082311161014957806370a08231146103bb57806380781cf9146103f1578063893d20e81461040b5780638a8c523c1461043357600080fd5b806367243482146103465780636b7f8b90146103665780636d1b229d146103865780636e34e91d146103a657600080fd5b80631c939ee9116101b65780631c939ee9146102bf57806323b872dd146102d4578063313ce567146102f4578063388b4f171461031657600080fd5b8062fffc9d146101f257806306fdde0314610214578063095ea7b31461026c57806318160ddd1461029c57600080fd5b366101ed57005b600080fd5b3480156101fe57600080fd5b5061021261020d366004612872565b61065a565b005b34801561022057600080fd5b5060408051808201909152600681527f4b6f6e647578000000000000000000000000000000000000000000000000000060208201525b604051610263919061290c565b60405180910390f35b34801561027857600080fd5b5061028c610287366004612934565b610883565b6040519015158152602001610263565b3480156102a857600080fd5b506102b16108f0565b604051908152602001610263565b3480156102cb57600080fd5b50610212610911565b3480156102e057600080fd5b5061028c6102ef366004612960565b6109c6565b34801561030057600080fd5b5060095b60405160ff9091168152602001610263565b34801561032257600080fd5b5061028c6103313660046129a1565b60096020526000908152604090205460ff1681565b34801561035257600080fd5b50610212610361366004612a0a565b610aa2565b34801561037257600080fd5b50610212610381366004612a86565b610e63565b34801561039257600080fd5b506102126103a1366004612aa1565b610eda565b3480156103b257600080fd5b50610212610ffd565b3480156103c757600080fd5b506102b16103d63660046129a1565b6001600160a01b031660009081526001602052604090205490565b3480156103fd57600080fd5b506008546103049060ff1681565b34801561041757600080fd5b506000546040516001600160a01b039091168152602001610263565b34801561043f57600080fd5b5061021261131a565b34801561045457600080fd5b506040805180820190915260048152630969c88b60e31b6020820152610256565b34801561048157600080fd5b50610212610490366004612acb565b61137f565b3480156104a157600080fd5b5061028c6104b0366004612934565b61149b565b3480156104c157600080fd5b506102126104d0366004612afe565b6114f6565b3480156104e157600080fd5b5060085461030490610100900460ff1681565b34801561050057600080fd5b5061021261050f366004612afe565b611601565b34801561052057600080fd5b5060085461028c9062010000900460ff1681565b34801561054057600080fd5b506102b160065481565b34801561055657600080fd5b5061028c6105653660046129a1565b60036020526000908152604090205460ff1681565b34801561058657600080fd5b506102126116ff565b34801561059b57600080fd5b506102b16105aa366004612b2a565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3480156105e157600080fd5b506102126117c0565b3480156105f657600080fd5b506102126106053660046129a1565b61181d565b34801561061657600080fd5b506102b160055481565b34801561062c57600080fd5b5061021261063b3660046129a1565b6118f3565b34801561064c57600080fd5b5060045461028c9060ff1681565b6000546001600160a01b031633146106ba5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084015b60405180910390fd5b63ffffffff8084169085166106d16009600a612c5d565b6106df90633b9aca00612c6c565b6106e99190612c6c565b6106f39190612c83565b60055563ffffffff80821690831661070d6009600a612c5d565b61071b90633b9aca00612c6c565b6107259190612c6c565b61072f9190612c83565b600681905560055411156107855760405162461bcd60e51b815260206004820152600c60248201527f4d696e4d6178206572726f72000000000000000000000000000000000000000060448201526064016106b1565b6127106107946009600a612c5d565b6107a290633b9aca00612c6c565b6107ac9190612c83565b600654116107fc5760405162461bcd60e51b815260206004820152601760248201527f5570706572207468726573686f6c6420746f6f206c6f7700000000000000000060448201526064016106b1565b606461080a6009600a612c5d565b61081890633b9aca00612c6c565b610823906002612c6c565b61082d9190612c83565b6006541061087d5760405162461bcd60e51b815260206004820152601860248201527f5570706572207468726573686f6c6420746f6f2068696768000000000000000060448201526064016106b1565b50505050565b3360008181526002602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906108de9086815260200190565b60405180910390a35060015b92915050565b60006108fe6009600a612c5d565b61090c90633b9aca00612c6c565b905090565b6000546001600160a01b0316331461096c5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b47806109ba5760405162461bcd60e51b815260206004820181905260248201527f4e6f2045544820696e20636f6e747261637420746f206469737472696275746560448201526064016106b1565b6109c3816119a9565b50565b60006109d06119e7565b610a0f5760405162461bcd60e51b815260206004820152601060248201526f2a3930b234b733903737ba1037b832b760811b60448201526064016106b1565b6001600160a01b038416600090815260026020908152604080832033845290915290205460001914610a8f576001600160a01b0384166000908152600260209081526040808320338452909152902054610a6a908390612ca5565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610a9a848484611a1a565b949350505050565b6000546001600160a01b03163314610afd5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b60fa831115610b4e5760405162461bcd60e51b815260206004820181905260248201527f57616c6c657420636f756e74206f766572203235302028676173207269736b2960448201526064016106b1565b828114610bc35760405162461bcd60e51b815260206004820152602560248201527f4164647265737320616e6420746f6b656e20616d6f756e74206c697374206d6960448201527f736d61636800000000000000000000000000000000000000000000000000000060648201526084016106b1565b6000805b84811015610c1c57610bdb6009600a612c5d565b848483818110610bed57610bed612cb8565b90506020020135610bfe9190612c6c565b610c089083612cce565b915080610c1481612ce1565b915050610bc7565b5033600090815260016020526040902054811115610ca25760405162461bcd60e51b815260206004820152602660248201527f546f6b656e2062616c616e6365206c6f776572207468616e2061697264726f7060448201527f20746f74616c000000000000000000000000000000000000000000000000000060648201526084016106b1565b60005b84811015610e2257610cb96009600a612c5d565b848483818110610ccb57610ccb612cb8565b90506020020135610cdc9190612c6c565b3360009081526001602052604081208054909190610cfb908490612ca5565b90915550610d0d90506009600a612c5d565b848483818110610d1f57610d1f612cb8565b90506020020135610d309190612c6c565b60016000888885818110610d4657610d46612cb8565b9050602002016020810190610d5b91906129a1565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610d8a9190612cce565b909155508690508582818110610da257610da2612cb8565b9050602002016020810190610db791906129a1565b6001600160a01b031633600080516020612df9833981519152610ddc6009600a612c5d565b878786818110610dee57610dee612cb8565b90506020020135610dff9190612c6c565b60405190815260200160405180910390a380610e1a81612ce1565b915050610ca5565b5060408051858152602081018390527f71cc7095cc35ed4701c217a8efb440732eb0737da67f6548c008ac26fba95464910160405180910390a15050505050565b6000546001600160a01b03163314610ebe5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b60088054911515620100000262ff000019909216919091179055565b3360009081526001602052604090205480821115610f3a5760405162461bcd60e51b815260206004820152601560248201527f546f6b656e2062616c616e636520746f6f206c6f77000000000000000000000060448201526064016106b1565b3360009081526001602052604081208054849290610f59908490612ca5565b9091555050600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb498054849290610f99908490612cce565b90915550506040518281526000903390600080516020612df98339815191529060200160405180910390a360405182815233907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69060200160405180910390a25050565b6000546001600160a01b031633146110585760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b60045460ff16156110ab5760405162461bcd60e51b815260206004820152601460248201527f74726164696e6720616c7265616479206f70656e00000000000000000000000060448201526064016106b1565b6110b3611d96565b47806111015760405162461bcd60e51b815260206004820152601260248201527f6e6f2065746820696e20636f6e7472616374000000000000000000000000000060448201526064016106b1565b306000908152600160205260409020548061115e5760405162461bcd60e51b815260206004820152600960248201527f6e6f20746f6b656e73000000000000000000000000000000000000000000000060448201526064016106b1565b600c546040805163c45a015560e01b815290516000926001600160a01b03169163c45a01559160048083019260209291908290030181865afa1580156111a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cc9190612cfa565b6001600160a01b031663c9c6539630600c60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801561122e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112529190612cfa565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af11580156112b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112db9190612cfa565b6001600160a01b0381166000908152600760205260409020805460ff1916600117905590506113098261217f565b6113158284600061221d565b505050565b6000546001600160a01b031633146113755760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b61137d6122ce565b565b6000546001600160a01b031633146113da5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b600560ff8316118015906113f25750600560ff821611155b61143e5760405162461bcd60e51b815260206004820152600c60248201527f54617820746f6f2068696768000000000000000000000000000000000000000060448201526064016106b1565b6008805460ff84811661ffff199092168217610100918516918202179092556040805191825260208201929092527f1dcee7b4b427ba2551f752d6f3ff03de326f6a4fca7432dda760ccff555f27f3910160405180910390a15050565b60006114a56119e7565b6114e45760405162461bcd60e51b815260206004820152601060248201526f2a3930b234b733903737ba1037b832b760811b60448201526064016106b1565b6114ef338484611a1a565b9392505050565b6000546001600160a01b031633146115515760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b80156115d6576001600160a01b038216301480159061157e57506000546001600160a01b03838116911614155b6115d65760405162461bcd60e51b8152602060048201526024808201527f43616e6e6f7420656e666f726365206665657320666f722074686973206164646044820152637265737360e01b60648201526084016106b1565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b6000546001600160a01b0316331461165c5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b806116d4576001600160a01b038216301480159061168857506000546001600160a01b03838116911614155b6116d45760405162461bcd60e51b815260206004820152601d60248201527f546869732061646472657373206d757374206265206578636c7564656400000060448201526064016106b1565b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6000546001600160a01b0316331461175a5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b30600090815260016020526040902054806117b75760405162461bcd60e51b815260206004820152600960248201527f4e6f20746f6b656e73000000000000000000000000000000000000000000000060448201526064016106b1565b6109c38161233f565b33600090815260016020526040812080546c01431e0fae6d7217caa0000000928392916117ee908490612cce565b90915550506040518181523390600090600080516020612df9833981519152906020015b60405180910390a350565b6000546001600160a01b031633146118785760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316908117909155600081815260036020908152604091829020805460ff1916600117905590519182527ea263b61aab5ebdcff20c4c0c74c2589ea5ab52149abde19eca17ad5221789991015b60405180910390a150565b6000546001600160a01b0316331461194e5760405162461bcd60e51b815260206004820152602a6024820152600080516020612dd98339815191526044820152693990333ab731ba34b7b760b11b60648201526084016106b1565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163906020016118e8565b600b546040516001600160a01b039091169082156108fc029083906000818181858888f193505050501580156119e3573d6000803e3d6000fd5b5050565b600454600090819060ff16156119ff57506001919050565b6000546001600160a01b03163203611a15575060015b919050565b60006001600160a01b038416151580611a3b57506001600160a01b03831615155b611a875760405162461bcd60e51b815260206004820181905260248201527f5a65726f2077616c6c65742063616e6e6f7420646f207472616e73666572732e60448201526064016106b1565b60045460ff1615611b2a57611ad06040518060400160405280600c81526020017f74726164696e67206f70656e0000000000000000000000000000000000000000815250612489565b60085462010000900460ff1615611aeb57611aeb84846124e1565b600b54600160a01b900460ff16158015611b1d57506001600160a01b03831660009081526007602052604090205460ff165b15611b2a57611b2a612675565b6000611b378585856126ff565b9050611b786040518060400160405280600e81526020017f74617820616d6f756e743a202573000000000000000000000000000000000000815250826127e7565b6000611b848285612ca5565b9050611bc56040518060400160405280601381526020017f7472616e7366657220616d6f756e743a20257300000000000000000000000000815250826127e7565b611c296040518060400160405280601281526020017f73656e6465722062616c616e63653a202573000000000000000000000000000081525060016000896001600160a01b03166001600160a01b03168152602001908152602001600020546127e7565b611c686040518060400160405280600a81526020017f616d6f756e743a20257300000000000000000000000000000000000000000000815250856127e7565b6001600160a01b038616600090815260016020526040902054611c8c908590612ca5565b6001600160a01b03871660008181526001602081815260408084208690558051808201909152601281527f73656e6465722062616c616e63653a202573000000000000000000000000000081830152939092529052611cea916127e7565b8115611d1c5730600090815260016020526040902054611d0b908390612cce565b306000908152600160205260409020555b6001600160a01b038516600090815260016020526040902054611d40908290612cce565b6001600160a01b038087166000818152600160205260409081902093909355915190881690600080516020612df983398151915290611d829088815260200190565b60405180910390a350600195945050505050565b6000611da46009600a612c5d565b611db2906310ab0f3a612c6c565b600080546001600160a01b03908116825260016020526040808320849055825490519394501691600080516020612df983398151915290611df69085815260200190565b60405180910390a36000611e0c6009600a612c5d565b611e1a90630ee6b280612c6c565b731d0a105f0ced39b207ae444957cc70483c04c767600081815260016020527f94917cf8f81138426f3d60f2b697339dc349182de65c20b61e7450734aa33b238390556040519293509091600080516020612df983398151915290611e829085815260200190565b60405180910390a36000611e986009600a612c5d565b611ea690630b99ad47612c6c565b73ac5c6fdd4f32977eec56c48978bae86ce08968e0600081815260016020527f2015e3cc24b6a6304e42562558fbc9cdd2bda8f24b7f88972f64db0c6f2bd8cd8390556040519293509091600080516020612df983398151915290611f0e9085815260200190565b60405180910390a36000611f246009600a612c5d565b611f32906308f0d180612c6c565b7394bacbccee5c16520ab8545c35e89ece7017a34d600081815260016020527f5615441033e961f93df0b1ef773335a295fd9eee70461345aa4bd6ab791b302a8390556040519293509091600080516020612df983398151915290611f9a9085815260200190565b60405180910390a36000611fb06009600a612c5d565b611fbe906302a08fb2612c6c565b73cbe59e5967b80ad18764d49c9184e6249afe2d28600081815260016020527f6e6b5fdb8858516ed47244d778b27d06aeaec0c8a598c876e3e840dc0de7ebfa8390556040519293509091600080516020612df9833981519152906120269085815260200190565b60405180910390a3600061203c6009600a612c5d565b61204a9063017e7bee612c6c565b30600081815260016020526040808220849055519293509091600080516020612df9833981519152906120809085815260200190565b60405180910390a36000818385876120988a8c612cce565b6120a29190612cce565b6120ac9190612cce565b6120b69190612cce565b6120c09190612cce565b6120cc6009600a612c5d565b6120da90633b9aca00612c6c565b6120e49190612ca5565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49829055604051919250908190600080516020612df9833981519152906121389085815260200190565b60405180910390a36040518181526000907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69060200160405180910390a250505050505050565b306000908152600260209081526040808320737a250d5630b4cf539739df2c5dacb4c659f2488d84529091529020548111156109c357306000818152600260209081526040808320737a250d5630b4cf539739df2c5dacb4c659f2488d808552908352928190206000199081905590519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259101611812565b60008161223257506000546001600160a01b03165b600c5460405163f305d71960e01b81523060048201526024810186905260006044820181905260648201526001600160a01b0383811660848301524260a48301529091169063f305d71990859060c40160606040518083038185885af11580156122a0573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906122c59190612d17565b50505050505050565b60045460ff16156123215760405162461bcd60e51b815260206004820152601460248201527f74726164696e6720616c7265616479206f70656e00000000000000000000000060448201526064016106b1565b6008805461ffff19166103031790556004805460ff19166001179055565b6123488161217f565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061237d5761237d612cb8565b6001600160a01b03928316602091820292909201810191909152600c54604080516315ab88c960e31b81529051919093169263ad5c46489260048083019391928290030181865afa1580156123d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123fa9190612cfa565b8160018151811061240d5761240d612cb8565b6001600160a01b039283166020918202929092010152600c5460405163791ac94760e01b815291169063791ac94790612453908590600090869030904290600401612d45565b600060405180830381600087803b15801561246d57600080fd5b505af1158015612481573d6000803e3d6000fd5b505050505050565b6109c38160405160240161249d919061290c565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663104c13eb60e21b17905261283d565b6001600160a01b03821660009081526007602052604090205460ff16801561252257506001600160a01b03811660009081526009602052604090205460ff16155b156125ab576001600160a01b0381166000908152600a6020526040902054431161258e5760405162461bcd60e51b815260206004820152601160248201527f416e7469426f742074726967676572656400000000000000000000000000000060448201526064016106b1565b6001600160a01b03166000908152600a6020526040902043905550565b6001600160a01b03811660009081526007602052604090205460ff1680156125ec57506001600160a01b03821660009081526009602052604090205460ff16155b156119e3576001600160a01b0382166000908152600a602052604090205443116126585760405162461bcd60e51b815260206004820152601160248201527f416e7469426f742074726967676572656400000000000000000000000000000060448201526064016106b1565b506001600160a01b03166000908152600a60205260409020439055565b600b805460ff60a01b1916600160a01b17905530600090815260016020526040812054905060055481101580156126ae575060045460ff165b156126ef5760065481106126c157506006545b6126cd6009600a612c5d565b8111156126ef576126dd8161233f565b4780156126ed576126ed816119a9565b505b50600b805460ff60a01b19169055565b600454600090819060ff16158061272e57506001600160a01b03851660009081526003602052604090205460ff165b8061275157506001600160a01b03841660009081526003602052604090205460ff165b1561275e57506000610a9a565b6001600160a01b03851660009081526007602052604090205460ff16156127a3576008546064906127929060ff1685612c6c565b61279c9190612c83565b9050610a9a565b6001600160a01b03841660009081526007602052604090205460ff16156127dc5760085460649061279290610100900460ff1685612c6c565b506000949350505050565b6119e382826040516024016127fd929190612db6565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632d839cb360e21b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b803563ffffffff81168114611a1557600080fd5b6000806000806080858703121561288857600080fd5b6128918561285e565b935061289f6020860161285e565b92506128ad6040860161285e565b91506128bb6060860161285e565b905092959194509250565b6000815180845260005b818110156128ec576020818501810151868301820152016128d0565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006114ef60208301846128c6565b6001600160a01b03811681146109c357600080fd5b6000806040838503121561294757600080fd5b82356129528161291f565b946020939093013593505050565b60008060006060848603121561297557600080fd5b83356129808161291f565b925060208401356129908161291f565b929592945050506040919091013590565b6000602082840312156129b357600080fd5b81356114ef8161291f565b60008083601f8401126129d057600080fd5b50813567ffffffffffffffff8111156129e857600080fd5b6020830191508360208260051b8501011115612a0357600080fd5b9250929050565b60008060008060408587031215612a2057600080fd5b843567ffffffffffffffff80821115612a3857600080fd5b612a44888389016129be565b90965094506020870135915080821115612a5d57600080fd5b50612a6a878288016129be565b95989497509550505050565b80358015158114611a1557600080fd5b600060208284031215612a9857600080fd5b6114ef82612a76565b600060208284031215612ab357600080fd5b5035919050565b803560ff81168114611a1557600080fd5b60008060408385031215612ade57600080fd5b612ae783612aba565b9150612af560208401612aba565b90509250929050565b60008060408385031215612b1157600080fd5b8235612b1c8161291f565b9150612af560208401612a76565b60008060408385031215612b3d57600080fd5b8235612b488161291f565b91506020830135612b588161291f565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115612bb4578160001904821115612b9a57612b9a612b63565b80851615612ba757918102915b93841c9390800290612b7e565b509250929050565b600082612bcb575060016108ea565b81612bd8575060006108ea565b8160018114612bee5760028114612bf857612c14565b60019150506108ea565b60ff841115612c0957612c09612b63565b50506001821b6108ea565b5060208310610133831016604e8410600b8410161715612c37575081810a6108ea565b612c418383612b79565b8060001904821115612c5557612c55612b63565b029392505050565b60006114ef60ff841683612bbc565b80820281158282048414176108ea576108ea612b63565b600082612ca057634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156108ea576108ea612b63565b634e487b7160e01b600052603260045260246000fd5b808201808211156108ea576108ea612b63565b600060018201612cf357612cf3612b63565b5060010190565b600060208284031215612d0c57600080fd5b81516114ef8161291f565b600080600060608486031215612d2c57600080fd5b8351925060208401519150604084015190509250925092565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015612d955784516001600160a01b031683529383019391830191600101612d70565b50506001600160a01b03969096166060850152505050608001529392505050565b604081526000612dc960408301856128c6565b9050826020830152939250505056fe4f6e6c7920636f6e7472616374206f776e65722063616e2063616c6c20746869ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c6343000811000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 91,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 214,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 220,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 224,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "excludedFromFees",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 226,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "tradingOpen",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 228,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "taxSwapMin",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 230,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "taxSwapMax",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 234,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "_isLiqPool",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 239,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "taxRateBuy",
        "offset": 0,
        "slot": "8",
        "type": "t_uint8"
      },
      {
        "astId": 241,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "taxRateSell",
        "offset": 1,
        "slot": "8",
        "type": "t_uint8"
      },
      {
        "astId": 243,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "antiBotEnabled",
        "offset": 2,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 247,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "excludedFromAntiBot",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 251,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "_lastSwapBlock",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 257,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "taxWallet",
        "offset": 0,
        "slot": "11",
        "type": "t_address_payable"
      },
      {
        "astId": 260,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "_inTaxSwap",
        "offset": 20,
        "slot": "11",
        "type": "t_bool"
      },
      {
        "astId": 269,
        "contract": "contracts/KNDX_ERC20.sol:KNDX",
        "label": "_uniswapV2Router",
        "offset": 0,
        "slot": "12",
        "type": "t_contract(IUniswapV2Router02)190"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IUniswapV2Router02)190": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}