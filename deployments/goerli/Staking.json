{
  "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_konduxERC20",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_konduxERC721Founders",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_konduxERC721kNFT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_helixERC20",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Compound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "NewAuthorizedERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewCompoundFreq",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewFoundersRewardBoost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewFoundersRewardBoostDivisor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "helixERC20",
          "type": "address"
        }
      ],
      "name": "NewHelixERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewKNFTRewardBoost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewKNFTRewardBoostDivisor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "konduxERC721Founders",
          "type": "address"
        }
      ],
      "name": "NewKonduxERC721Founders",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "konduxERC721kNFT",
          "type": "address"
        }
      ],
      "name": "NewKonduxERC721kNFT",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewMinStake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewRewardsPerHour",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "treasury",
          "type": "address"
        }
      ],
      "name": "NewTreasury",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewWithdrawalFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "NewWithdrawalFeeDivisor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Reward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawAll",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsPerHour",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_compoundFreq",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawalFeeDivisor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_foundersRewardBoost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_foundersRewardBoostDivisor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kNFTRewardBoost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kNFTRewardBoostDivisor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ratio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minStake",
          "type": "uint256"
        }
      ],
      "name": "addNewStakingToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorizedERC20",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "calculateRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compoundFreqERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "compoundRewardsTimer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timer",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_timelock",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "foundersRewardBoostDivisorERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "foundersRewardBoostERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getDepositIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "getDepositInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_stake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "getFoundersRewardBoost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_foundersRewardBoost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "getFoundersRewardBoostDenominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_foundersRewardBoostDivisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "getKnftRewardBoostDenominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_kNFTRewardBoostDivisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "getMinStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_minStake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "getRewardsPerHour",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerHour",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "getStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_deposited",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "getTimeOfLastUpdate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timeOfLastUpdate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "getTimelock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_timelock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "getTimelockCategory",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "_timelockCategory",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "getWithdrawalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "getWithdrawalFeeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFeeDivisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "getkNFTRewardBoost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_kNFTRewardBoost",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "helixERC20",
      "outputs": [
        {
          "internalType": "contract IHelix",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "kNFTRewardBoostDivisorERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "kNFTRewardBoostERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "konduxERC721Founders",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "konduxERC721kNFT",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minStakeERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ratioERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardsPerHourERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_authorized",
          "type": "bool"
        }
      ],
      "name": "setAuthorizedERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_compoundFreq",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setCompFreq",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_compoundFreq",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setCompoundFreq",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_foundersRewardBoost",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setFoundersRewardBoost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_foundersRewardBoostDivisor",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setFoundersRewardBoostDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_helix",
          "type": "address"
        }
      ],
      "name": "setHelixERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_konduxERC721Founders",
          "type": "address"
        }
      ],
      "name": "setKonduxERC721Founders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_konduxERC721kNFT",
          "type": "address"
        }
      ],
      "name": "setKonduxERC721kNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minStake",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setMinStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ratio",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerHour",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardsPerHour",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setRewardsPerHour",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setWithdrawalFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalFeeDivisor",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setWithdrawalFeeDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_kNFTRewardBoost",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setkNFTRewardBoost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_kNFTRewardBoostDivisor",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        }
      ],
      "name": "setkNFTRewardBoostDivisor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "stakeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "contract ITreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userDeposits",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deposited",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "redeemed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeOfLastUpdate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastDepositTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unclaimedRewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timelock",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "timelockCategory",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userDepositsIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_depositId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalFeeDivisorERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalFeeERC20",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
  "receipt": {
    "to": null,
    "from": "0x9f5Ea5Af0368E1d6F685F07978c8A22b2Df7c78D",
    "contractAddress": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
    "transactionIndex": 51,
    "gasUsed": "3448119",
    "logsBloom": "0x000000000800000003000000004100000000001000020000001000000040000000600040000000000000400000000000000004000040000000000040000410000002000000000048000040800000000000000000000480c0000000000000000000020040000000000000000000010000100000000000000000000000010000000010002000000000000002010000000008010010000000001000000020040000000004000000000000000000000200020080800000000000000000002000000000000000000000000100100000000082100000000000000000000000000041002800000020000000800008001000020000000000000200000000000000000000",
    "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a",
    "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
    "logs": [
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad"
        ],
        "data": "0x000000000000000000000000348e88f388417cb86ce2359b4108692ce43c6d85",
        "logIndex": 186,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x3bdd25ee6c72097873ae6536b32d2c78439a093fa54f9091c324f0a2140a8802",
          "0x0000000000000000000000000000000000000000000000000000000000989680",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 187,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0xe0e7eacc628163b5a3362ddd2e66b5c7f729ed892e22b82931952c274f22a951",
          "0x0000000000000000000000000000000000000000000000000000000000989680",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 188,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x583cc649b350d69beed18d7047064d367c82831d16e65d08ff74b549dff2d0ec",
          "0x0000000000000000000000000000000000000000000000000000000000989680",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 189,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x5d5169bb1fbf418e612b1934f181b6ce300a1aad27fdb0e6f6aadbd96f50bb8f",
          "0x00000000000000000000000000000000000000000000000000000000000186a0",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 190,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x1677c34b69a09796446af7a4c75943a1bb36202c16eb82199ef7d37d0ee4b288",
          "0x0000000000000000000000000000000000000000000000000000000000a7d8c0",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 191,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x11ef1060a695a1277b08edcbb2c364d43d4eb52f1060daaabf0df445cb6cdfdf",
          "0x00000000000000000000000000000000000000000000000000000000000186a0",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 192,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0xef3cb734d88702dbb1c3bc381c52176876be95e70b66d3970d16653ee992a6c2",
          "0x0000000000000000000000000000000000000000000000000000000000989680",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 193,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x8803800ab9d24dc1e2a2ada0893efb7b8fc19c55fddd9512c239b276e7f532fd",
          "0x000000000000000000000000000000000000000000000000000000000000011d",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 194,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0xd0d3d840363c3a773f4578f92d7914f6b37985570c79ee2889d69d7d8f12c295",
          "0x0000000000000000000000000000000000000000000000000000000000015180",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 195,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x62b574cc62ed3db0ae736cb4349346a234832cc8b215c6423fd67505addc2ffa",
          "0x0000000000000000000000000000000000000000000000000000000000002710",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46"
        ],
        "data": "0x",
        "logIndex": 196,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      },
      {
        "transactionIndex": 51,
        "blockNumber": 8616554,
        "transactionHash": "0xdd44cd32c292cce7d070ea0e0c53dc316a4f60d5faaef37dba1f6a6b47ae684b",
        "address": "0xE3eAfa6605c039B0dc77dB98F6523b299A53bEE7",
        "topics": [
          "0x59261974a183535ca20bb33ae77db42c679a079844739a2e10f0b6ecb847379a",
          "0x000000000000000000000000a38be15583760ad08910d77dd36d7afc33686b46",
          "0x0000000000000000000000000000000000000000000000000000000000000001"
        ],
        "data": "0x",
        "logIndex": 197,
        "blockHash": "0xbfd61ae8b95d09625d7fdce96d3f748f9247164f6611fd458d863cd9f6ca712a"
      }
    ],
    "blockNumber": 8616554,
    "cumulativeGasUsed": "14840604",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x348e88f388417Cb86cE2359b4108692ce43c6D85",
    "0xa38be15583760ad08910d77dD36D7AfC33686B46",
    "0xefFDa63B1AF6B4033606368B7F3aA13E5BC91C26",
    "0xA9a8Df76f6843D21EbB91A788008827D63b164B6",
    "0xc7ab3c66F17F9736DD98E651aB524b436212d6Ff",
    "0x3E9f47633BBDAb63E886ABa5eA3a931D368580EF"
  ],
  "numDeployments": 11,
  "solcInputHash": "ed591f18ab0671eed3d8befba9fbe6af",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_konduxERC20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_konduxERC721Founders\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_konduxERC721kNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_helixERC20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Compound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"NewAuthorizedERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewCompoundFreq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewFoundersRewardBoost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewFoundersRewardBoostDivisor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"helixERC20\",\"type\":\"address\"}],\"name\":\"NewHelixERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewKNFTRewardBoost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewKNFTRewardBoostDivisor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"konduxERC721Founders\",\"type\":\"address\"}],\"name\":\"NewKonduxERC721Founders\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"konduxERC721kNFT\",\"type\":\"address\"}],\"name\":\"NewKonduxERC721kNFT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewMinStake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewRatio\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewRewardsPerHour\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"NewTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewWithdrawalFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"NewWithdrawalFeeDivisor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawAll\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_compoundFreq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawalFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawalFeeDivisor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_foundersRewardBoost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_foundersRewardBoostDivisor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kNFTRewardBoost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kNFTRewardBoostDivisor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minStake\",\"type\":\"uint256\"}],\"name\":\"addNewStakingToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedERC20\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compoundFreqERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"compoundRewardsTimer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timer\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_timelock\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"foundersRewardBoostDivisorERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"foundersRewardBoostERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getDepositIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"getFoundersRewardBoost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_foundersRewardBoost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"getFoundersRewardBoostDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_foundersRewardBoostDivisor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"getKnftRewardBoostDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_kNFTRewardBoostDivisor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"getMinStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_minStake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"getRewardsPerHour\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"getStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_deposited\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"getTimeOfLastUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeOfLastUpdate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"getTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_timelock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"getTimelockCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"_timelockCategory\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"getWithdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"getWithdrawalFeeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalFeeDivisor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"getkNFTRewardBoost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_kNFTRewardBoost\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"helixERC20\",\"outputs\":[{\"internalType\":\"contract IHelix\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"kNFTRewardBoostDivisorERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"kNFTRewardBoostERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"konduxERC721Founders\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"konduxERC721kNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minStakeERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ratioERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardsPerHourERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"}],\"name\":\"setAuthorizedERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_compoundFreq\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setCompFreq\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_compoundFreq\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setCompoundFreq\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_foundersRewardBoost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setFoundersRewardBoost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_foundersRewardBoostDivisor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setFoundersRewardBoostDivisor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_helix\",\"type\":\"address\"}],\"name\":\"setHelixERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_konduxERC721Founders\",\"type\":\"address\"}],\"name\":\"setKonduxERC721Founders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_konduxERC721kNFT\",\"type\":\"address\"}],\"name\":\"setKonduxERC721kNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setMinStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setRewardsPerHour\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setWithdrawalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalFeeDivisor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setWithdrawalFeeDivisor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_kNFTRewardBoost\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setkNFTRewardBoost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_kNFTRewardBoostDivisor\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"}],\"name\":\"setkNFTRewardBoostDivisor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"stakeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userDeposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deposited\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timelock\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"timelockCategory\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userDepositsIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalFeeDivisorERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalFeeERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.17;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\r\\nimport \\\"./interfaces/ITreasury.sol\\\";\\r\\nimport \\\"./interfaces/IHelix.sol\\\";\\r\\nimport \\\"./types/AccessControlled.sol\\\";\\r\\nimport \\\"hardhat/console.sol\\\";\\r\\n\\r\\ncontract Staking is AccessControlled {\\r\\n    using Counters for Counters.Counter;\\r\\n\\r\\n    Counters.Counter private _depositIds;\\r\\n\\r\\n    // Staker info\\r\\n    struct Staker {\\r\\n        // The address of the token\\r\\n        address token;\\r\\n        // The address of the Staker\\r\\n        address staker;\\r\\n        // The deposited tokens of the Staker\\r\\n        uint256 deposited;\\r\\n        uint256 redeemed;\\r\\n        // Last time of details update for Deposit\\r\\n        uint256 timeOfLastUpdate;\\r\\n        // Last deposit time\\r\\n        uint256 lastDepositTime;\\r\\n        // Calculated, but unclaimed rewards. These are calculated each time\\r\\n        // a user writes to the contract.\\r\\n        uint256 unclaimedRewards;\\r\\n        uint256 timelock;\\r\\n        uint8 timelockCategory;\\r\\n    }\\r\\n\\r\\n    enum LockingTimes {        \\r\\n        OneMonth,\\r\\n        ThreeMonths,\\r\\n        SixMonths,\\r\\n        OneYear,\\r\\n        Test\\r\\n    }\\r\\n\\r\\n    // Withdrawal fee in basis points\\r\\n    //uint256 public withdrawalFee = 100_000; // 1% fee on withdrawal or 100_000/10_000_000\\r\\n    //uint256 public withdrawalFeeDivisor = 10_000_000; // 10_000_000 basis points\\r\\n\\r\\n    // Founder's reward boost in basis points\\r\\n    //uint256 public foundersRewardBoost = 11_000_000; // 10% boost (=110%) on rewards or 1_000_000/10_000_000\\r\\n    //uint256 public foundersRewardBoostDivisor = 10_000_000; // 10_000_000 basis points\\r\\n\\r\\n    // kNFT reward boost in basis points\\r\\n    //uint256 public kNFTRewardBoost = 100_000; // 1% boost on rewards or 100_000/10_000_000\\r\\n    //uint256 public kNFTRewardBoostDivisor = 10_000_000; // 10_000_000 basis points\\r\\n\\r\\n    // Rewards per hour. A fraction calculated as x/10.000.000 to get the percentage\\r\\n    // https://www.buybitcoinbank.com/crypto-apy-staking-calculator\\r\\n    //uint256 public rewardsPerHour = 285; // 0.00285%/h or 25% APR\\r\\n\\r\\n    // Minimum amount to stake\\r\\n    //uint256 public minStake = 10_000_000; // 10,000,000 wei\\r\\n\\r\\n    // Compounding frequency limit in seconds\\r\\n    // uint256 public compoundFreq = 60 * 60 * 24; // 24 hours // PROD\\r\\n    //uint256 public compoundFreq = 60 * 60; // 1 hour\\r\\n    // uint256 public compoundFreq = 60; // 1 minute // gives bugs when unstaking\\r\\n\\r\\n    // Mapping of address to Staker info\\r\\n    //mapping(address => Staker) internal stakers;\\r\\n    mapping(address => uint) name;\\r\\n    mapping(address => uint[]) public userDepositsIds;\\r\\n    mapping(uint => Staker) public userDeposits;\\r\\n\\r\\n    // KonduxERC20 Contract\\r\\n    //IERC20 public konduxERC20;\\r\\n    mapping (address => bool) public authorizedERC20;\\r\\n    mapping (address => uint256) public minStakeERC20;\\r\\n    mapping (address => uint256) public compoundFreqERC20;\\r\\n    mapping (address => uint256) public rewardsPerHourERC20;\\r\\n    mapping (address => uint256) public withdrawalFeeERC20;\\r\\n    mapping (address => uint256) public withdrawalFeeDivisorERC20;\\r\\n    mapping (address => uint256) public foundersRewardBoostERC20;\\r\\n    mapping (address => uint256) public foundersRewardBoostDivisorERC20;\\r\\n    mapping (address => uint256) public kNFTRewardBoostERC20;\\r\\n    mapping (address => uint256) public kNFTRewardBoostDivisorERC20;\\r\\n    mapping (address => uint256) public ratioERC20;\\r\\n\\r\\n\\r\\n    IHelix public helixERC20;\\r\\n    IERC721 public konduxERC721Founders;\\r\\n    IERC721 public konduxERC721kNFT;\\r\\n\\r\\n    // Treasury Contract\\r\\n    ITreasury public treasury;\\r\\n\\r\\n    // Events\\r\\n    event Withdraw(address indexed staker, uint256 amount);\\r\\n    event WithdrawAll(address indexed staker, uint256 amount);\\r\\n    event Compound(address indexed staker, uint256 amount);\\r\\n    event Stake(uint indexed id, address indexed staker, address token, uint256 amount);\\r\\n    event Unstake(address indexed staker, uint256 amount); \\r\\n    event Reward(address indexed staker, uint256 amount);\\r\\n\\r\\n    event NewRewardsPerHour(uint256 indexed amount, address indexed token);\\r\\n    event NewMinStake(uint256 indexed amount, address indexed token);\\r\\n    event NewCompoundFreq(uint256 indexed amount, address indexed token);\\r\\n    event NewHelixERC20(address indexed helixERC20);\\r\\n    event NewKonduxERC721Founders(address indexed konduxERC721Founders);\\r\\n    event NewKonduxERC721kNFT(address indexed konduxERC721kNFT);\\r\\n    event NewTreasury(address indexed treasury);\\r\\n    event NewWithdrawalFee(uint256 indexed amount, address indexed token);\\r\\n    event NewWithdrawalFeeDivisor(uint256 indexed amount, address indexed token);\\r\\n    event NewFoundersRewardBoost(uint256 indexed amount, address indexed token);\\r\\n    event NewFoundersRewardBoostDivisor(uint256 indexed amount, address indexed token);\\r\\n    event NewKNFTRewardBoost(uint256 indexed amount, address indexed token);\\r\\n    event NewKNFTRewardBoostDivisor(uint256 indexed amount, address indexed token);\\r\\n    event NewAuthorizedERC20(address indexed token, bool indexed authorized);\\r\\n    event NewRatio(uint256 indexed amount, address indexed token);  \\r\\n\\r\\n    // Constructor function\\r\\n    constructor(address _authority, address _konduxERC20, address _treasury, address _konduxERC721Founders, address _konduxERC721kNFT, address _helixERC20)\\r\\n        AccessControlled(IAuthority(_authority)) {        \\r\\n            require(_konduxERC20 != address(0), \\\"Kondux ERC20 address is not set\\\");\\r\\n            require(_treasury != address(0), \\\"Treasury address is not set\\\");\\r\\n            \\r\\n            konduxERC721Founders = IERC721(_konduxERC721Founders);\\r\\n            konduxERC721kNFT = IERC721(_konduxERC721kNFT);\\r\\n            helixERC20 = IHelix(_helixERC20);\\r\\n            treasury = ITreasury(_treasury);\\r\\n\\r\\n            // Default Staking Token Setup\\r\\n            setWithdrawalFeeDivisor(10_000_000, _konduxERC20); // 10_000_000 basis points\\r\\n            setFoundersRewardBoostDivisor(10_000_000, _konduxERC20); // 10_000_000 basis points\\r\\n            setkNFTRewardBoostDivisor(10_000_000, _konduxERC20); // 10_000_000 basis points\\r\\n            setWithdrawalFee(100_000, _konduxERC20); // 1% fee on withdrawal or 100_000/10_000_000\\r\\n            setFoundersRewardBoost(11_000_000, _konduxERC20); // 10% boost (=110%) on rewards or 1_000_000/10_000_000\\r\\n            setkNFTRewardBoost(100_000, _konduxERC20); // 1% boost on rewards or 100_000/10_000_000 \\r\\n            setMinStake(10_000_000, _konduxERC20); // 10,000,000 wei\\r\\n            setRewardsPerHour(285, _konduxERC20); // 0.00285%/h or 25% APR            \\r\\n            setCompFreq(60 * 60 * 24, _konduxERC20); // 24 hours\\r\\n            setRatio(10_000, _konduxERC20); // 10_000:1 ratio\\r\\n            _setAuthorizedERC20(_konduxERC20, true);\\r\\n    }\\r\\n\\r\\n    // If address has no Staker struct, initiate one. If address already was a stake,\\r\\n    // calculate the rewards and add them to unclaimedRewards, reset the last time of\\r\\n    // deposit and then add _amount to the already deposited amount.\\r\\n    // Transfers the amount staked.\\r\\n    function deposit(uint256 _amount, uint8 _timelock, address _token) public returns (uint) {\\r\\n        require(authorizedERC20[_token], \\\"Token not authorized\\\");\\r\\n        require(_amount >= minStakeERC20[_token], \\\"Amount smaller than minimimum deposit\\\"); \\r\\n        IERC20 konduxERC20 = IERC20(_token);\\r\\n        require(konduxERC20.balanceOf(msg.sender) >= _amount, \\\"Can't stake more than you own\\\");\\r\\n        require(konduxERC20.allowance(msg.sender, address(this)) >= _amount, \\\"Allowance not set\\\");\\r\\n        require(_timelock >= 0 && _timelock <= 4, \\\"Invalid timelock\\\"); // PROD: 3\\r\\n        // // require(stakers[msg.sender].timelockCategory <= _timelock, \\\"Can't decrease timelock category\\\");\\r\\n\\r\\n        // console.log(konduxERC20.balanceOf(msg.sender)); \\r\\n        // console.log(_amount);\\r\\n        // console.log(konduxERC20.allowance(msg.sender, address(this))); \\r\\n\\r\\n        uint _id = _depositIds.current();\\r\\n\\r\\n        userDeposits[_id] = Staker({\\r\\n            token: _token,\\r\\n            staker: msg.sender,\\r\\n            deposited: _amount,\\r\\n            unclaimedRewards: 0,\\r\\n            timelock: 0,\\r\\n            timelockCategory: _timelock,\\r\\n            timeOfLastUpdate: block.timestamp,\\r\\n            lastDepositTime: block.timestamp,\\r\\n            redeemed: 0\\r\\n        });             \\r\\n        \\r\\n        if (_timelock == uint8(LockingTimes.OneMonth)) {\\r\\n            userDeposits[_id].timelock = block.timestamp + 30 days; // 1 month\\r\\n        } else if (_timelock == uint8(LockingTimes.ThreeMonths)) {\\r\\n            userDeposits[_id].timelock = block.timestamp + 90 days; // 3 months\\r\\n        } else if (_timelock == uint8(LockingTimes.SixMonths)) {\\r\\n            userDeposits[_id].timelock = block.timestamp + 180 days; // 6 months\\r\\n        } else if (_timelock == uint8(LockingTimes.OneYear)) {\\r\\n            userDeposits[_id].timelock = block.timestamp + 365 days; // 1 year \\r\\n        } else if (_timelock == uint8(LockingTimes.Test)) {\\r\\n            userDeposits[_id].timelock = block.timestamp + 2 minutes; // 2 minutes // TEST\\r\\n        }\\r\\n\\r\\n        userDepositsIds[msg.sender].push(_id);         \\r\\n\\r\\n        konduxERC20.transferFrom(msg.sender, authority.vault(), _amount);\\r\\n        helixERC20.mint(msg.sender, _amount * ratioERC20[_token]);\\r\\n        \\r\\n        _depositIds.increment(); \\r\\n\\r\\n        emit Stake(_id, msg.sender, _token, _amount * ratioERC20[_token]);\\r\\n\\r\\n        return _id;\\r\\n    }\\r\\n\\r\\n    // Compound the rewards and reset the last time of update for Deposit info\\r\\n    function stakeRewards(uint _depositId) public {\\r\\n        require(msg.sender == userDeposits[_depositId].staker, \\\"You are not the owner of this deposit\\\");\\r\\n        require(compoundRewardsTimer(_depositId) == 0, \\\"Tried to compound rewards too soon\\\"); // incluir depositId\\r\\n\\r\\n        uint256 rewards = calculateRewards(msg.sender, _depositId) + userDeposits[_depositId].unclaimedRewards; \\r\\n        userDeposits[_depositId].unclaimedRewards = 0; \\r\\n        userDeposits[_depositId].deposited += rewards;\\r\\n        userDeposits[_depositId].timeOfLastUpdate = block.timestamp; \\r\\n\\r\\n        helixERC20.mint(msg.sender, rewards);\\r\\n\\r\\n        emit Compound(msg.sender, rewards);\\r\\n    }\\r\\n\\r\\n    // Transfer rewards to msg.sender\\r\\n    function claimRewards(uint _depositId) public {\\r\\n        require(msg.sender == userDeposits[_depositId].staker, \\\"You are not the owner of this deposit\\\");\\r\\n        require(block.timestamp >= userDeposits[_depositId].timelock, \\\"Timelock not passed\\\");\\r\\n        // console.log(\\\"Claiming rewards\\\");\\r\\n        // console.log(\\\"staking contract address\\\", address(this));\\r\\n\\r\\n        uint256 rewards = calculateRewards(msg.sender, _depositId) + userDeposits[_depositId].unclaimedRewards; \\r\\n        // console.log(\\\"rewards: %s\\\", rewards);\\r\\n        // console.log(\\\"pre-claiming balance vault: %s\\\", konduxERC20.balanceOf(authority.vault()));\\r\\n        // console.log(\\\"ERC20 address: %s\\\", address(konduxERC20));\\r\\n        require(rewards > 0, \\\"You have no rewards\\\");\\r\\n        userDeposits[_depositId].unclaimedRewards = 0;\\r\\n        userDeposits[_depositId].timeOfLastUpdate = block.timestamp;\\r\\n        helixERC20.burn(msg.sender, rewards);\\r\\n        IERC20 konduxERC20 = IERC20(userDeposits[_depositId].token);\\r\\n        konduxERC20.transferFrom(authority.vault(), msg.sender, rewards / ratioERC20[userDeposits[_depositId].token]);\\r\\n        // console.logString(\\\"Rewards claimed\\\");\\r\\n        // console.log(konduxERC20.balanceOf(authority.vault()));\\r\\n        emit Reward(msg.sender, rewards);\\r\\n    }\\r\\n\\r\\n    // Withdraw specified amount of staked tokens\\r\\n    function withdraw(uint256 _amount, uint _depositId) public {\\r\\n        require(msg.sender == userDeposits[_depositId].staker, \\\"You are not the owner of this deposit\\\");\\r\\n        require(block.timestamp >= userDeposits[_depositId].timelock, \\\"Timelock not passed\\\");\\r\\n        require(userDeposits[_depositId].deposited >= _amount, \\\"Can't withdraw more than you have\\\");\\r\\n        require(_amount <= helixERC20.balanceOf(msg.sender), \\\"Can't withdraw more tokens than the collateral you have\\\");\\r\\n        // console.log(\\\"Withdrawing\\\");\\r\\n        // console.log(\\\"Amount to withdraw: %s\\\", _amount);\\r\\n        // console.log(\\\"Deposit ID: %s\\\", _depositId);\\r\\n        // console.log(\\\"Staker: %s\\\", userDeposits[_depositId].staker);\\r\\n        // console.log(\\\"Staker address: %s\\\", msg.sender);\\r\\n        // console.log(\\\"Staker balance: %s\\\", helixERC20.balanceOf(msg.sender)); \\r\\n        uint256 _rewards = calculateRewards(msg.sender, _depositId);\\r\\n        userDeposits[_depositId].deposited -= _amount;\\r\\n        userDeposits[_depositId].timeOfLastUpdate = block.timestamp;\\r\\n        userDeposits[_depositId].unclaimedRewards = _rewards;\\r\\n        // console.log(\\\"Rewards: %s\\\", _rewards);\\r\\n        // console.log(\\\"withdrawalFee: %s\\\", withdrawalFee);\\r\\n        // console.log(\\\"withdrawalFeeDivisor: %s\\\", withdrawalFeeDivisor);\\r\\n        uint256 _liquid = (_amount * (withdrawalFeeDivisorERC20[userDeposits[_depositId].token] - withdrawalFeeERC20[userDeposits[_depositId].token])) / withdrawalFeeDivisorERC20[userDeposits[_depositId].token];\\r\\n        // console.log(\\\"Liquid: %s\\\", _liquid);\\r\\n        helixERC20.burn(msg.sender, _amount);\\r\\n        IERC20 konduxERC20 = IERC20(userDeposits[_depositId].token);\\r\\n        konduxERC20.transferFrom(authority.vault(), msg.sender, _liquid);\\r\\n        emit Withdraw(msg.sender, _liquid);\\r\\n    }\\r\\n\\r\\n    // Function useful for fron-end that returns user stake and rewards by address\\r\\n    function getDepositInfo(address _staker, uint _depositId) public view returns (uint256 _stake, uint256 _rewards) {\\r\\n        _stake = userDeposits[_depositId].deposited;  \\r\\n        _rewards = calculateRewards(_staker, _depositId) + userDeposits[_depositId].unclaimedRewards;\\r\\n        return (_stake, _rewards); \\r\\n    }\\r\\n\\r\\n    // Utility function that returns the timer for restaking rewards\\r\\n    function compoundRewardsTimer(uint _depositId) public view returns (uint256 _timer) {\\r\\n        if (userDeposits[_depositId].timeOfLastUpdate + compoundFreqERC20[userDeposits[_depositId].token] <= block.timestamp) {\\r\\n            return 0;\\r\\n        } else {\\r\\n            return (userDeposits[_depositId].timeOfLastUpdate + compoundFreqERC20[userDeposits[_depositId].token]) - block.timestamp; \\r\\n        } \\r\\n    }\\r\\n\\r\\n    // Calculate the rewards since the last update on Deposit info\\r\\n    function calculateRewards(address _staker, uint _depositId) public view returns (uint256 rewards) {\\r\\n        // console.log(\\\"Calculating rewards\\\");\\r\\n        // console.log(\\\"stakers[_staker].timeOfLastUpdate: %s\\\", userDeposits[_depositId].timeOfLastUpdate);\\r\\n        // console.log(\\\"block.timestamp: %s\\\", block.timestamp);\\r\\n        // console.log(\\\"stakers[_staker].deposited: %s\\\", userDeposits[_depositId].deposited);\\r\\n        // console.log(\\\"rewardsPerHour: %s\\\", rewardsPerHour);\\r\\n        // console.log(\\\"((((block.timestamp - userDeposits[_depositId].timeOfLastUpdate) * userDeposits[_depositId].deposited) * rewardsPerHour) / 3600) / 10_000_000: %s\\\", ((((block.timestamp - userDeposits[_depositId].timeOfLastUpdate) * userDeposits[_depositId].deposited) * rewardsPerHour) / 3600) / 10_000_000);\\r\\n\\r\\n        uint256 _reward = (((((block.timestamp - userDeposits[_depositId].timeOfLastUpdate) * \\r\\n            userDeposits[_depositId].deposited) * rewardsPerHourERC20[userDeposits[_depositId].token]) / 3600) / 10_000_000); // blocks * staked * rewards/hour / 1h / 10^7\\r\\n\\r\\n        // console.log(\\\"reward: %s\\\", _reward);\\r\\n        \\r\\n        if (IERC721(konduxERC721Founders).balanceOf(_staker) > 0) {\\r\\n            _reward = (_reward * foundersRewardBoostERC20[userDeposits[_depositId].token]) / foundersRewardBoostDivisorERC20[userDeposits[_depositId].token];\\r\\n            // console.log(\\\"reward after founders: %s\\\", _reward);\\r\\n        }\\r\\n\\r\\n        if (IERC721(konduxERC721kNFT).balanceOf(_staker) > 0) {\\r\\n            uint256 _kNFTBalance = IERC721(konduxERC721kNFT).balanceOf(_staker);\\r\\n            if (_kNFTBalance > 5) {\\r\\n                _kNFTBalance = 5;\\r\\n            }\\r\\n            \\r\\n            //give 1% more for each kNFT owned using kNFTRewardBoost\\r\\n            _reward = (_reward * (kNFTRewardBoostDivisorERC20[userDeposits[_depositId].token] + (_kNFTBalance * kNFTRewardBoostERC20[userDeposits[_depositId].token]))) / kNFTRewardBoostDivisorERC20[userDeposits[_depositId].token];\\r\\n\\r\\n            // console.log(\\\"reward after kNFT: %s\\\", _reward);\\r\\n        }\\r\\n\\r\\n        // add 0% if reward category is 0; add 1% if reward category is 1; add 3% if reward category is 2; add 9% if reward category is 3;\\r\\n        if (userDeposits[_depositId].timelockCategory == 1) { \\r\\n            _reward = (_reward * 10100) / 10000;\\r\\n        } else if (userDeposits[_depositId].timelockCategory == 2) {\\r\\n            _reward = (_reward * 10300) / 10000;\\r\\n        } else if (userDeposits[_depositId].timelockCategory == 3) { \\r\\n            _reward = (_reward * 10900) / 10000; \\r\\n        }\\r\\n\\r\\n        return _reward;\\r\\n    }\\r\\n\\r\\n    // Functions for modifying  staking mechanism variables:\\r\\n\\r\\n    // Set rewards per hour as x/10.000.000 (Example: 100.000 = 1%)\\r\\n    function setRewards(uint256 _rewardsPerHour, address _tokenId) public onlyGovernor {\\r\\n        rewardsPerHourERC20[_tokenId] = _rewardsPerHour; \\r\\n        emit NewRewardsPerHour(_rewardsPerHour, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the minimum amount for staking in wei\\r\\n    function setMinStake(uint256 _minStake, address _tokenId) public onlyGovernor {\\r\\n        minStakeERC20[_tokenId] = _minStake;\\r\\n        emit NewMinStake(_minStake, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the Ratio of a ERC20\\r\\n    function setRatio(uint256 _ratio, address _tokenId) public onlyGovernor {\\r\\n        ratioERC20[_tokenId] = _ratio;\\r\\n        emit NewRatio(_ratio, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the minimum time that has to pass for a user to be able to restake rewards\\r\\n    function setCompFreq(uint256 _compoundFreq, address _tokenId) public onlyGovernor {\\r\\n        compoundFreqERC20[_tokenId] = _compoundFreq;\\r\\n        emit NewCompoundFreq(_compoundFreq, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the address of Helix Contract\\r\\n    function setHelixERC20(address _helix) public onlyGovernor {\\r\\n        require(_helix != address(0), \\\"Helix address cannot be 0x0\\\");\\r\\n        helixERC20 = IHelix(_helix);\\r\\n        emit NewHelixERC20(_helix);\\r\\n    }\\r\\n\\r\\n    // Set the address of konduxERC721Founders contract\\r\\n    function setKonduxERC721Founders(address _konduxERC721Founders) public onlyGovernor {\\r\\n        require(_konduxERC721Founders != address(0), \\\"Founders address cannot be 0x0\\\");\\r\\n        konduxERC721Founders = IERC721(_konduxERC721Founders);\\r\\n        emit NewKonduxERC721Founders(_konduxERC721Founders);\\r\\n    }\\r\\n\\r\\n    // Set the address of konduxERC721kNFT contract\\r\\n    function setKonduxERC721kNFT(address _konduxERC721kNFT) public onlyGovernor {\\r\\n        require(_konduxERC721kNFT != address(0), \\\"kNFT address cannot be 0x0\\\");\\r\\n        konduxERC721kNFT = IERC721(_konduxERC721kNFT);\\r\\n        emit NewKonduxERC721kNFT(_konduxERC721kNFT);\\r\\n    }\\r\\n\\r\\n    // Set the address of the Treasury contract\\r\\n    function setTreasury(address _treasury) public onlyGovernor {\\r\\n        require(_treasury != address(0), \\\"Treasury address cannot be 0x0\\\");\\r\\n        treasury = ITreasury(_treasury);\\r\\n        emit NewTreasury(_treasury);\\r\\n    }\\r\\n\\r\\n    // Set the withdrawal fee\\r\\n    function setWithdrawalFee(uint256 _withdrawalFee, address _tokenId) public onlyGovernor {\\r\\n        require(_withdrawalFee <= withdrawalFeeDivisorERC20[_tokenId], \\\"Withdrawal fee cannot be more than 100%\\\");\\r\\n        withdrawalFeeERC20[_tokenId] = _withdrawalFee;\\r\\n        emit NewWithdrawalFee(_withdrawalFee, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the withdrawal fee divisor\\r\\n    function setWithdrawalFeeDivisor(uint256 _withdrawalFeeDivisor, address _tokenId) public onlyGovernor {\\r\\n        withdrawalFeeDivisorERC20[_tokenId] = _withdrawalFeeDivisor;\\r\\n        emit NewWithdrawalFeeDivisor(_withdrawalFeeDivisor, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the founders reward boost\\r\\n    function setFoundersRewardBoost(uint256 _foundersRewardBoost, address _tokenId) public onlyGovernor {\\r\\n        foundersRewardBoostERC20[_tokenId] = _foundersRewardBoost;\\r\\n        emit NewFoundersRewardBoost(_foundersRewardBoost, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the founders reward boost divisor\\r\\n    function setFoundersRewardBoostDivisor(uint256 _foundersRewardBoostDivisor, address _tokenId) public onlyGovernor {\\r\\n        foundersRewardBoostDivisorERC20[_tokenId] = _foundersRewardBoostDivisor; \\r\\n        emit NewFoundersRewardBoostDivisor(_foundersRewardBoostDivisor, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the kNFT reward boost\\r\\n    function setkNFTRewardBoost(uint256 _kNFTRewardBoost, address _tokenId) public onlyGovernor {\\r\\n        kNFTRewardBoostERC20[_tokenId] = _kNFTRewardBoost;\\r\\n        emit NewKNFTRewardBoost(_kNFTRewardBoost, _tokenId); \\r\\n    }\\r\\n\\r\\n    // Set the kNFT reward boost divisor\\r\\n    function setkNFTRewardBoostDivisor(uint256 _kNFTRewardBoostDivisor, address _tokenId) public onlyGovernor {\\r\\n        kNFTRewardBoostDivisorERC20[_tokenId] = _kNFTRewardBoostDivisor;\\r\\n        emit NewKNFTRewardBoostDivisor(_kNFTRewardBoostDivisor, _tokenId);  \\r\\n    }\\r\\n\\r\\n    // Set the reward per hour\\r\\n    function setRewardsPerHour(uint256 _rewardsPerHour, address _tokenId) public onlyGovernor {\\r\\n        rewardsPerHourERC20[_tokenId] = _rewardsPerHour;\\r\\n        emit NewRewardsPerHour(_rewardsPerHour, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set the compound frequency\\r\\n    function setCompoundFreq(uint256 _compoundFreq, address _tokenId) public onlyGovernor {\\r\\n        compoundFreqERC20[_tokenId] = _compoundFreq;\\r\\n        emit NewCompoundFreq(_compoundFreq, _tokenId);\\r\\n    }\\r\\n\\r\\n    // Set true or false to enable or disable an ERC20 token as staking currency modifiying the map authorizedERC20 \\r\\n    function _setAuthorizedERC20(address _token, bool _authorized) internal {\\r\\n        require(_token != address(0), \\\"Token address cannot be 0x0\\\");\\r\\n        if (_authorized == true) {\\r\\n            require(rewardsPerHourERC20[_token] > 0, \\\"Rewards per hour must be greater than 0\\\");\\r\\n            require(compoundFreqERC20[_token] > 0, \\\"Compound frequency must be greater than 0\\\");\\r\\n            require(withdrawalFeeERC20[_token] > 0, \\\"Withdrawal fee must be greater than 0\\\");\\r\\n            require(withdrawalFeeDivisorERC20[_token] > 0, \\\"Withdrawal fee divisor must be greater than 0\\\");\\r\\n            require(foundersRewardBoostERC20[_token] > 0, \\\"Founders reward boost must be greater than 0\\\");\\r\\n            require(foundersRewardBoostDivisorERC20[_token] > 0, \\\"Founders reward boost divisor must be greater than 0\\\");\\r\\n            require(kNFTRewardBoostERC20[_token] > 0, \\\"kNFT reward boost must be greater than 0\\\");\\r\\n            require(kNFTRewardBoostDivisorERC20[_token] > 0, \\\"kNFT reward boost divisor must be greater than 0\\\");\\r\\n            require(ratioERC20[_token] > 0, \\\"Ratio must be greater than 0\\\");\\r\\n            require(minStakeERC20[_token] > 0, \\\"Minimum stake must be greater than 0\\\");  \\r\\n            require(IERC20(_token).totalSupply() > 0, \\\"Token total supply must be greater than 0\\\");\\r\\n        }\\r\\n        authorizedERC20[_token] = _authorized;\\r\\n        emit NewAuthorizedERC20(_token, _authorized);\\r\\n    }\\r\\n\\r\\n    function setAuthorizedERC20(address _token, bool _authorized) public onlyGovernor {\\r\\n        _setAuthorizedERC20(_token, _authorized);\\r\\n    }\\r\\n\\r\\n    function addNewStakingToken(address _token, uint256 _rewardsPerHour, uint256 _compoundFreq, uint256 _withdrawalFee, uint256 _withdrawalFeeDivisor, uint256 _foundersRewardBoost, uint256 _foundersRewardBoostDivisor, uint256 _kNFTRewardBoost, uint256 _kNFTRewardBoostDivisor, uint256 _ratio, uint256 _minStake) public onlyGovernor {\\r\\n        require(_token != address(0), \\\"Token address cannot be 0x0\\\");\\r\\n        require(_rewardsPerHour > 0, \\\"Rewards per hour must be greater than 0\\\");\\r\\n        require(_compoundFreq > 0, \\\"Compound frequency must be greater than 0\\\");\\r\\n        require(_withdrawalFee > 0, \\\"Withdrawal fee must be greater than 0\\\");\\r\\n        require(_withdrawalFeeDivisor > 0, \\\"Withdrawal fee divisor must be greater than 0\\\");\\r\\n        require(_foundersRewardBoost > 0, \\\"Founders reward boost must be greater than 0\\\");\\r\\n        require(_foundersRewardBoostDivisor > 0, \\\"Founders reward boost divisor must be greater than 0\\\");\\r\\n        require(_kNFTRewardBoost > 0, \\\"kNFT reward boost must be greater than 0\\\");\\r\\n        require(_kNFTRewardBoostDivisor > 0, \\\"kNFT reward boost divisor must be greater than 0\\\");\\r\\n        require(_ratio > 0, \\\"Ratio must be greater than 0\\\");\\r\\n        require(_minStake > 0, \\\"Minimum stake must be greater than 0\\\");\\r\\n        require(IERC20(_token).totalSupply() > 0, \\\"Token total supply must be greater than 0\\\");\\r\\n        setWithdrawalFeeDivisor(_withdrawalFeeDivisor, _token);\\r\\n        setFoundersRewardBoostDivisor(_foundersRewardBoostDivisor, _token); \\r\\n        setkNFTRewardBoostDivisor(_kNFTRewardBoostDivisor, _token);\\r\\n        setFoundersRewardBoost(_foundersRewardBoost, _token);\\r\\n        setkNFTRewardBoost(_kNFTRewardBoost, _token);\\r\\n        setRewardsPerHour(_rewardsPerHour, _token); \\r\\n        setRatio(_ratio, _token);\\r\\n        setWithdrawalFee(_withdrawalFee, _token);\\r\\n        setCompoundFreq(_compoundFreq, _token);\\r\\n        setMinStake(_minStake, _token); \\r\\n\\r\\n        _setAuthorizedERC20(_token, true);\\r\\n    }\\r\\n\\r\\n\\r\\n    // Functions for getting staking mechanism variables:\\r\\n\\r\\n    // Get staker's time of last update\\r\\n    function getTimeOfLastUpdate(uint _depositId) public view returns (uint256 _timeOfLastUpdate) {\\r\\n        return userDeposits[_depositId].timeOfLastUpdate;\\r\\n    }\\r\\n\\r\\n    // Get staker's deposited amount\\r\\n    function getStakedAmount(uint _depositId) public view returns (uint256 _deposited) {\\r\\n        return userDeposits[_depositId].deposited;\\r\\n    }\\r\\n\\r\\n    // Get rewards per hour\\r\\n    function getRewardsPerHour(address _tokenId) public view returns (uint256 _rewardsPerHour) {\\r\\n        return rewardsPerHourERC20[_tokenId];\\r\\n    }\\r\\n\\r\\n    // Get Founder's reward boost\\r\\n    function getFoundersRewardBoost(address _tokenId) public view returns (uint256 _foundersRewardBoost) {\\r\\n        return foundersRewardBoostERC20[_tokenId];\\r\\n    }\\r\\n\\r\\n    // Get Founder's reward boost divisor\\r\\n    function getFoundersRewardBoostDenominator(address _tokenId) public view returns (uint256 _foundersRewardBoostDivisor) {\\r\\n        return foundersRewardBoostDivisorERC20[_tokenId];\\r\\n    }\\r\\n\\r\\n    // Get kNFT reward boost\\r\\n    function getkNFTRewardBoost(address _tokenId) public view returns (uint256 _kNFTRewardBoost) {\\r\\n        return kNFTRewardBoostERC20[_tokenId];\\r\\n    }\\r\\n\\r\\n    // Get kNFT reward boost divisor\\r\\n    function getKnftRewardBoostDenominator(address _tokenId) public view returns (uint256 _kNFTRewardBoostDivisor) {\\r\\n        return kNFTRewardBoostDivisorERC20[_tokenId];\\r\\n    }\\r\\n\\r\\n    // Get minimum stake\\r\\n    function getMinStake(address _tokenId) public view returns (uint256 _minStake) {\\r\\n        return minStakeERC20[_tokenId];\\r\\n    }\\r\\n\\r\\n    function getTimelockCategory(uint _depositId) public view returns (uint8 _timelockCategory) {\\r\\n        return userDeposits[_depositId].timelockCategory;\\r\\n    }\\r\\n\\r\\n    function getTimelock(uint _depositId) public view returns (uint256 _timelock) {\\r\\n        return userDeposits[_depositId].timelock;\\r\\n    }\\r\\n\\r\\n    function getDepositIds(address _user) public view returns (uint256[] memory) {\\r\\n        return userDepositsIds[_user];\\r\\n    }\\r\\n\\r\\n    function getWithdrawalFeeDivisor(address _tokenId) public view returns (uint256 _withdrawalFeeDivisor) {\\r\\n        return withdrawalFeeDivisorERC20[_tokenId];\\r\\n    }\\r\\n\\r\\n    function getWithdrawalFee(address _tokenId) public view returns (uint256 _withdrawalFee) {\\r\\n        return withdrawalFeeERC20[_tokenId]; \\r\\n    }\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0xde535b685f2f9bfd35c0782a9451a2c96cd55311cb1d6bffc4937dae5b81f0bc\",\"license\":\"MIT\"},\"contracts/interfaces/IAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\r\\npragma solidity >=0.8.9;\\r\\n\\r\\ninterface IAuthority {\\r\\n    /* ========== EVENTS ========== */\\r\\n\\r\\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\r\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\r\\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\r\\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\r\\n    event RolePushed(address indexed account, bytes32 _role);\\r\\n\\r\\n    event GovernorPulled(address indexed from, address indexed to);\\r\\n    event GuardianPulled(address indexed from, address indexed to);\\r\\n    event PolicyPulled(address indexed from, address indexed to);\\r\\n    event VaultPulled(address indexed from, address indexed to);\\r\\n\\r\\n    /* ========== VIEW ========== */\\r\\n\\r\\n    function governor() external view returns (address);\\r\\n\\r\\n    function guardian() external view returns (address);\\r\\n\\r\\n    function policy() external view returns (address);\\r\\n\\r\\n    function vault() external view returns (address);\\r\\n\\r\\n    function roles(address _addr) external view returns (bytes32);\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x887a7eb2eeab95bba651b3d65b3d6a4695301acb16f27722524021afa1cf97d5\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IHelix.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ninterface IHelix is IERC20 {\\r\\n    function increaseAllowance(address spender, uint256 addedValue) external returns (bool);\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) external returns (bool);\\r\\n    function burn(address _to, uint256 _amount) external;\\r\\n    function mint(address _to, uint256 _amount) external;\\r\\n}\",\"keccak256\":\"0xe84d0c27c30de7ed7dec020efc3fcccaa55f3d54ebaaabb3ace6354d7cd00f84\",\"license\":\"MIT\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.9;\\r\\n\\r\\ninterface ITreasury {\\r\\n    function deposit(\\r\\n        uint256 _amount,\\r\\n        address _token\\r\\n    ) external;\\r\\n\\r\\n    function depositEther() external payable;\\r\\n\\r\\n    function withdraw(\\r\\n        uint256 _amount,\\r\\n        address _token\\r\\n    ) external;\\r\\n\\r\\n    function withdrawTo(\\r\\n        uint256 _amount,\\r\\n        address _token,\\r\\n        address _to\\r\\n    ) external;\\r\\n\\r\\n    function withdrawEther(\\r\\n        uint256 _amount\\r\\n    ) external;\\r\\n}\",\"keccak256\":\"0xf49bf308cba46e3ffe330f85fa0842c23ed5424eeda9055fa7cc6153f52ec10c\",\"license\":\"MIT\"},\"contracts/types/AccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"../interfaces/IAuthority.sol\\\";\\r\\n\\r\\n/// @dev Reasoning for this contract = modifiers literaly copy code\\r\\n/// instead of pointing towards the logic to execute. Over many\\r\\n/// functions this bloats contract size unnecessarily.\\r\\n/// imho modifiers are a meme.\\r\\nabstract contract AccessControlled {\\r\\n    /* ========== EVENTS ========== */\\r\\n\\r\\n    event AuthorityUpdated(IAuthority authority);\\r\\n\\r\\n    /* ========== STATE VARIABLES ========== */\\r\\n\\r\\n    IAuthority public authority;\\r\\n\\r\\n    /* ========== Constructor ========== */\\r\\n\\r\\n    constructor(IAuthority _authority) {\\r\\n        require(address(_authority) != address(0), \\\"Authority cannot be zero address\\\");\\r\\n        authority = _authority;\\r\\n        emit AuthorityUpdated(_authority);\\r\\n    }\\r\\n\\r\\n    /* ========== \\\"MODIFIERS\\\" ========== */\\r\\n\\r\\n    modifier onlyGovernor {\\r\\n        _onlyGovernor();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyGuardian {\\r\\n        _onlyGuardian();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyPolicy {\\r\\n        _onlyPolicy();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyVault {\\r\\n        _onlyVault();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyRole(bytes32 _role){\\r\\n        _onlyRole(_role);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /* ========== GOV ONLY ========== */\\r\\n\\r\\n    function initializeAuthority(IAuthority _newAuthority) internal {\\r\\n        require(authority == IAuthority(address(0)), \\\"AUTHORITY_INITIALIZED\\\");\\r\\n        authority = _newAuthority;\\r\\n        emit AuthorityUpdated(_newAuthority);\\r\\n    }\\r\\n\\r\\n    function setAuthority(IAuthority _newAuthority) external {\\r\\n        _onlyGovernor();\\r\\n        authority = _newAuthority;\\r\\n        emit AuthorityUpdated(_newAuthority);\\r\\n    }\\r\\n\\r\\n    /* ========== INTERNAL CHECKS ========== */\\r\\n\\r\\n    function _onlyGovernor() internal view {\\r\\n        require(msg.sender == authority.governor(), \\\"UNAUTHORIZED\\\");\\r\\n    }\\r\\n\\r\\n    function _onlyGuardian() internal view {\\r\\n        require(msg.sender == authority.guardian(), \\\"UNAUTHORIZED\\\");\\r\\n    }\\r\\n\\r\\n    function _onlyPolicy() internal view {\\r\\n        require(msg.sender == authority.policy(), \\\"UNAUTHORIZED\\\");        \\r\\n    }\\r\\n\\r\\n    function _onlyVault() internal view {\\r\\n        require(msg.sender == authority.vault(), \\\"UNAUTHORIZED\\\");                \\r\\n    }\\r\\n\\r\\n    function _onlyRole(bytes32 _role) internal view {\\r\\n        require(authority.roles(msg.sender) == _role, \\\"UNAUTHORIZED\\\");\\r\\n    }\\r\\n\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x69a30ff5614ccb42137005d86252f6a9009c36785ab7a3c25e2c49a24ba5af5e\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200435438038062004354833981016040819052620000349162000d48565b856001600160a01b038116620000915760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f206164647265737360448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b0385166200013b5760405162461bcd60e51b815260206004820152601f60248201527f4b6f6e6475782045524332302061646472657373206973206e6f742073657400604482015260640162000088565b6001600160a01b038416620001935760405162461bcd60e51b815260206004820152601b60248201527f54726561737572792061646472657373206973206e6f74207365740000000000604482015260640162000088565b601180546001600160a01b038086166001600160a01b03199283161790925560128054858416908316179055601080548484169083161790556013805492871692909116919091179055620001ec62989680866200028a565b620001fb6298968086620002da565b6200020a62989680866200032a565b62000219620186a0866200037a565b6200022862a7d8c08662000444565b62000237620186a08662000494565b620002466298968086620004e4565b6200025461011d8662000534565b62000263620151808662000584565b6200027161271086620005d4565b6200027e85600162000624565b50505050505062000e08565b6200029462000c60565b6001600160a01b0381166000818152600a60205260408082208590555184917f3bdd25ee6c72097873ae6536b32d2c78439a093fa54f9091c324f0a2140a880291a35050565b620002e462000c60565b6001600160a01b0381166000818152600c60205260408082208590555184917fe0e7eacc628163b5a3362ddd2e66b5c7f729ed892e22b82931952c274f22a95191a35050565b6200033462000c60565b6001600160a01b0381166000818152600e60205260408082208590555184917f583cc649b350d69beed18d7047064d367c82831d16e65d08ff74b549dff2d0ec91a35050565b6200038462000c60565b6001600160a01b0381166000908152600a6020526040902054821115620003fe5760405162461bcd60e51b815260206004820152602760248201527f5769746864726177616c206665652063616e6e6f74206265206d6f7265207468604482015266616e203130302560c81b606482015260840162000088565b6001600160a01b0381166000818152600960205260408082208590555184917f5d5169bb1fbf418e612b1934f181b6ce300a1aad27fdb0e6f6aadbd96f50bb8f91a35050565b6200044e62000c60565b6001600160a01b0381166000818152600b60205260408082208590555184917f1677c34b69a09796446af7a4c75943a1bb36202c16eb82199ef7d37d0ee4b28891a35050565b6200049e62000c60565b6001600160a01b0381166000818152600d60205260408082208590555184917f11ef1060a695a1277b08edcbb2c364d43d4eb52f1060daaabf0df445cb6cdfdf91a35050565b620004ee62000c60565b6001600160a01b0381166000818152600660205260408082208590555184917fef3cb734d88702dbb1c3bc381c52176876be95e70b66d3970d16653ee992a6c291a35050565b6200053e62000c60565b6001600160a01b0381166000818152600860205260408082208590555184917f8803800ab9d24dc1e2a2ada0893efb7b8fc19c55fddd9512c239b276e7f532fd91a35050565b6200058e62000c60565b6001600160a01b0381166000818152600760205260408082208590555184917fd0d3d840363c3a773f4578f92d7914f6b37985570c79ee2889d69d7d8f12c29591a35050565b620005de62000c60565b6001600160a01b0381166000818152600f60205260408082208590555184917f62b574cc62ed3db0ae736cb4349346a234832cc8b215c6423fd67505addc2ffa91a35050565b6001600160a01b0382166200067c5760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e20616464726573732063616e6e6f74206265203078300000000000604482015260640162000088565b80151560010362000c0c576001600160a01b038216600090815260086020526040902054620006fe5760405162461bcd60e51b815260206004820152602760248201527f526577617264732070657220686f7572206d75737420626520677265617465726044820152660207468616e20360cc1b606482015260840162000088565b6001600160a01b038216600090815260076020526040902054620007775760405162461bcd60e51b815260206004820152602960248201527f436f6d706f756e64206672657175656e6379206d75737420626520677265617460448201526806572207468616e20360bc1b606482015260840162000088565b6001600160a01b038216600090815260096020526040902054620007ec5760405162461bcd60e51b815260206004820152602560248201527f5769746864726177616c20666565206d75737420626520677265617465722074604482015264068616e20360dc1b606482015260840162000088565b6001600160a01b0382166000908152600a6020526040902054620008695760405162461bcd60e51b815260206004820152602d60248201527f5769746864726177616c206665652064697669736f72206d757374206265206760448201526c0726561746572207468616e203609c1b606482015260840162000088565b6001600160a01b0382166000908152600b6020526040902054620008e55760405162461bcd60e51b815260206004820152602c60248201527f466f756e646572732072657761726420626f6f7374206d75737420626520677260448201526b06561746572207468616e20360a41b606482015260840162000088565b6001600160a01b0382166000908152600c6020526040902054620009725760405162461bcd60e51b815260206004820152603460248201527f466f756e646572732072657761726420626f6f73742064697669736f72206d7560448201527f73742062652067726561746572207468616e2030000000000000000000000000606482015260840162000088565b6001600160a01b0382166000908152600d6020526040902054620009ea5760405162461bcd60e51b815260206004820152602860248201527f6b4e46542072657761726420626f6f7374206d75737420626520677265617465604482015267072207468616e20360c41b606482015260840162000088565b6001600160a01b0382166000908152600e602052604090205462000a6a5760405162461bcd60e51b815260206004820152603060248201527f6b4e46542072657761726420626f6f73742064697669736f72206d757374206260448201526f0652067726561746572207468616e20360841b606482015260840162000088565b6001600160a01b0382166000908152600f602052604090205462000ad15760405162461bcd60e51b815260206004820152601c60248201527f526174696f206d7573742062652067726561746572207468616e203000000000604482015260640162000088565b6001600160a01b03821660009081526006602052604090205462000b445760405162461bcd60e51b8152602060048201526024808201527f4d696e696d756d207374616b65206d75737420626520677265617465722074686044820152630616e20360e41b606482015260840162000088565b6000826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b85573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bab919062000dc9565b1162000c0c5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e20746f74616c20737570706c79206d75737420626520677265617460448201526806572207468616e20360bc1b606482015260840162000088565b6001600160a01b038216600081815260056020526040808220805460ff191685151590811790915590519092917f59261974a183535ca20bb33ae77db42c679a079844739a2e10f0b6ecb847379a91a35050565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000cb2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cd8919062000de3565b6001600160a01b0316336001600160a01b03161462000d295760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640162000088565b565b80516001600160a01b038116811462000d4357600080fd5b919050565b60008060008060008060c0878903121562000d6257600080fd5b62000d6d8762000d2b565b955062000d7d6020880162000d2b565b945062000d8d6040880162000d2b565b935062000d9d6060880162000d2b565b925062000dad6080880162000d2b565b915062000dbd60a0880162000d2b565b90509295509295509295565b60006020828403121562000ddc57600080fd5b5051919050565b60006020828403121562000df657600080fd5b62000e018262000d2b565b9392505050565b61353c8062000e186000396000f3fe608060405234801561001057600080fd5b50600436106103835760003560e01c806372aa9d91116101de578063c39ccf881161010f578063d9831a72116100ad578063ef3090d11161007c578063ef3090d1146108e9578063f0f4426014610945578063f16b41f414610958578063fa2176b614610a1357600080fd5b8063d9831a721461058a578063e37d47e4146108e9578063e519cf17146108fc578063ea425a6d1461092557600080fd5b8063cd5f5a39116100e9578063cd5f5a3914610887578063cf717c8c146108b0578063cfb656a5146108c3578063d55111c5146108d657600080fd5b8063c39ccf8814610815578063c4c3a83e1461083e578063c5ebc2f71461086757600080fd5b8063a9b294071161017c578063ba57714811610156578063ba577148146107c9578063beb8314c146107dc578063bf7e214f146107ef578063bf811fbc1461080257600080fd5b8063a9b2940714610783578063b54b9c8814610796578063b9c94b67146107b657600080fd5b80637bf7f3d3116101b85780637bf7f3d31461073757806396ca0b001461074a578063a13d50791461075d578063a55dfa1c1461077057600080fd5b806372aa9d91146106f157806378e2816b146107115780637a9e5e4b1461072457600080fd5b80634477c974116102b8578063580e26a11161025657806361316cb01161023057806361316cb01461068b57806361d027b31461069e5780636aa421b7146106b15780636f3a4988146106d157600080fd5b8063580e26a11461061157806359b0e590146106445780635a5392be1461066857600080fd5b80634cae76e5116102925780634cae76e51461058a5780635385689c1461059d578063546f2b66146105c85780635722dee0146105e857600080fd5b80634477c9741461053b5780634715f40c1461054e5780634774dc931461057757600080fd5b80631f6514db1161032557806338c26d18116102ff57806338c26d18146104bd5780633a46a46d146104f5578063404d221a14610515578063441a3e701461052857600080fd5b80631f6514db1461047757806328c964f61461048a57806331aab0f7146104aa57600080fd5b806310b184381161036157806310b18438146103f8578063171f9ce41461041b5780631d0345131461042e5780631e78e9a21461045757600080fd5b8063038182a0146103885780630930df6a146103bb5780630962ef79146103e3575b600080fd5b6103a861039636600461325a565b600a6020526000908152604090205481565b6040519081526020015b60405180910390f35b6103ce6103c9366004613277565b610a3c565b604080519283526020830191909152016103b2565b6103f66103f13660046132a3565b610a75565b005b6103a86104063660046132a3565b60009081526004602052604090206007015490565b6103f66104293660046132bc565b610db8565b6103a861043c36600461325a565b6001600160a01b031660009081526008602052604090205490565b6103a861046536600461325a565b600d6020526000908152604090205481565b6103f66104853660046132bc565b610e06565b6103a861049836600461325a565b600e6020526000908152604090205481565b6103f66104b83660046132ec565b610e54565b6104e36104cb3660046132a3565b60009081526004602052604090206008015460ff1690565b60405160ff90911681526020016103b2565b6103a861050336600461325a565b600f6020526000908152604090205481565b6103f66105233660046132bc565b6113c8565b6103f6610536366004613367565b611416565b6103f66105493660046132a3565b61186e565b6103a861055c36600461325a565b6001600160a01b03166000908152600b602052604090205490565b6103a8610585366004613389565b611a53565b6103f66105983660046132bc565b61210c565b6012546105b0906001600160a01b031681565b6040516001600160a01b0390911681526020016103b2565b6103a86105d636600461325a565b600b6020526000908152604090205481565b6103a86105f636600461325a565b6001600160a01b031660009081526009602052604090205490565b61063461061f36600461325a565b60056020526000908152604090205460ff1681565b60405190151581526020016103b2565b6103a86106523660046132a3565b6000908152600460208190526040909120015490565b6103a86106763660046132a3565b60009081526004602052604090206002015490565b6103f66106993660046132bc565b61215a565b6013546105b0906001600160a01b031681565b6103a86106bf36600461325a565b600c6020526000908152604090205481565b6103a86106df36600461325a565b60086020526000908152604090205481565b6103a86106ff36600461325a565b60066020526000908152604090205481565b6103f661071f36600461325a565b6121a8565b6103f661073236600461325a565b612250565b6103f66107453660046133df565b6122ac565b6103f66107583660046132bc565b6122c2565b6103f661076b3660046132bc565b612310565b6103a861077e3660046132a3565b61235e565b6010546105b0906001600160a01b031681565b6103a86107a436600461325a565b60096020526000908152604090205481565b6103f66107c43660046132bc565b6123f2565b6103a86107d7366004613277565b612440565b6103a86107ea366004613277565b612471565b6000546105b0906001600160a01b031681565b6103f661081036600461325a565b6127bd565b6103a861082336600461325a565b6001600160a01b031660009081526006602052604090205490565b6103a861084c36600461325a565b6001600160a01b03166000908152600c602052604090205490565b61087a61087536600461325a565b612865565b6040516103b2919061340d565b6103a861089536600461325a565b6001600160a01b03166000908152600a602052604090205490565b6103f66108be3660046132bc565b6128d1565b6103f66108d136600461325a565b6129ad565b6011546105b0906001600160a01b031681565b6103f66108f73660046132bc565b612a55565b6103a861090a36600461325a565b6001600160a01b03166000908152600d602052604090205490565b6103a861093336600461325a565b60076020526000908152604090205481565b6103f661095336600461325a565b612aa3565b6109c16109663660046132a3565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460078701546008909701546001600160a01b0396871698959096169693959293919290919060ff1689565b604080516001600160a01b039a8b1681529990981660208a0152968801959095526060870193909352608086019190915260a085015260c084015260e083015260ff16610100820152610120016103b2565b6103a8610a2136600461325a565b6001600160a01b03166000908152600e602052604090205490565b60008181526004602052604081206002810154600690910154909190610a628585612471565b610a6c9190613467565b90509250929050565b6000818152600460205260409020600101546001600160a01b03163314610af15760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732064656044820152641c1bdcda5d60da1b60648201526084015b60405180910390fd5b600081815260046020526040902060070154421015610b525760405162461bcd60e51b815260206004820152601360248201527f54696d656c6f636b206e6f7420706173736564000000000000000000000000006044820152606401610ae8565b600081815260046020526040812060060154610b6e3384612471565b610b789190613467565b905060008111610bca5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f2072657761726473000000000000000000000000006044820152606401610ae8565b6000828152600460208190526040808320600681019390935542928201929092556010549151632770a7eb60e21b81523391810191909152602481018390526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015610c3857600080fd5b505af1158015610c4c573d6000803e3d6000fd5b5050506000838152600460208181526040808420549354815163fbfa77cf60e01b815291516001600160a01b03958616965086956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa158015610cb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd4919061347a565b6000868152600460209081526040808320546001600160a01b03168352600f9091529020543390610d059087613497565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610d59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7d91906134b9565b5060405182815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc99060200160405180910390a2505050565b610dc0612b4b565b6001600160a01b0381166000818152600f60205260408082208590555184917f62b574cc62ed3db0ae736cb4349346a234832cc8b215c6423fd67505addc2ffa91a35050565b610e0e612b4b565b6001600160a01b0381166000818152600b60205260408082208590555184917f1677c34b69a09796446af7a4c75943a1bb36202c16eb82199ef7d37d0ee4b28891a35050565b610e5c612b4b565b6001600160a01b038b16610eb25760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e20616464726573732063616e6e6f742062652030783000000000006044820152606401610ae8565b60008a11610f125760405162461bcd60e51b815260206004820152602760248201527f526577617264732070657220686f7572206d75737420626520677265617465726044820152660207468616e20360cc1b6064820152608401610ae8565b60008911610f745760405162461bcd60e51b815260206004820152602960248201527f436f6d706f756e64206672657175656e6379206d75737420626520677265617460448201526806572207468616e20360bc1b6064820152608401610ae8565b60008811610fd25760405162461bcd60e51b815260206004820152602560248201527f5769746864726177616c20666565206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610ae8565b600087116110385760405162461bcd60e51b815260206004820152602d60248201527f5769746864726177616c206665652064697669736f72206d757374206265206760448201526c0726561746572207468616e203609c1b6064820152608401610ae8565b6000861161109d5760405162461bcd60e51b815260206004820152602c60248201527f466f756e646572732072657761726420626f6f7374206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608401610ae8565b600085116111135760405162461bcd60e51b815260206004820152603460248201527f466f756e646572732072657761726420626f6f73742064697669736f72206d7560448201527f73742062652067726561746572207468616e20300000000000000000000000006064820152608401610ae8565b600084116111745760405162461bcd60e51b815260206004820152602860248201527f6b4e46542072657761726420626f6f7374206d75737420626520677265617465604482015267072207468616e20360c41b6064820152608401610ae8565b600083116111dd5760405162461bcd60e51b815260206004820152603060248201527f6b4e46542072657761726420626f6f73742064697669736f72206d757374206260448201526f0652067726561746572207468616e20360841b6064820152608401610ae8565b6000821161122d5760405162461bcd60e51b815260206004820152601c60248201527f526174696f206d7573742062652067726561746572207468616e2030000000006044820152606401610ae8565b600081116112895760405162461bcd60e51b8152602060048201526024808201527f4d696e696d756d207374616b65206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608401610ae8565b60008b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ed91906134d6565b1161134c5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e20746f74616c20737570706c79206d75737420626520677265617460448201526806572207468616e20360bc1b6064820152608401610ae8565b611356878c61215a565b611360858c6123f2565b61136a838c6122c2565b611374868c610e06565b61137e848c612310565b6113888a8c61210c565b611392828c610db8565b61139c888c6128d1565b6113a6898c612a55565b6113b0818c6113c8565b6113bb8b6001612c22565b5050505050505050505050565b6113d0612b4b565b6001600160a01b0381166000818152600660205260408082208590555184917fef3cb734d88702dbb1c3bc381c52176876be95e70b66d3970d16653ee992a6c291a35050565b6000818152600460205260409020600101546001600160a01b0316331461148d5760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732064656044820152641c1bdcda5d60da1b6064820152608401610ae8565b6000818152600460205260409020600701544210156114ee5760405162461bcd60e51b815260206004820152601360248201527f54696d656c6f636b206e6f7420706173736564000000000000000000000000006044820152606401610ae8565b6000818152600460205260409020600201548211156115595760405162461bcd60e51b815260206004820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f75206861766044820152606560f81b6064820152608401610ae8565b6010546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c591906134d6565b82111561163a5760405162461bcd60e51b815260206004820152603760248201527f43616e2774207769746864726177206d6f726520746f6b656e73207468616e2060448201527f74686520636f6c6c61746572616c20796f7520686176650000000000000000006064820152608401610ae8565b60006116463383612471565b90508260046000848152602001908152602001600020600201600082825461166e91906134ef565b9091555050600082815260046020818152604080842042938101939093556006830185905591546001600160a01b03168352600a80825282842054600983529284205491526116bd90826134ef565b6116c79086613502565b6116d19190613497565b601054604051632770a7eb60e21b8152336004820152602481018790529192506001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561171e57600080fd5b505af1158015611732573d6000803e3d6000fd5b5050506000848152600460208181526040808420549354815163fbfa77cf60e01b815291516001600160a01b03958616965086956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba919061347a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018590526064016020604051808303816000875af115801561180d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183191906134b9565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050505050565b6000818152600460205260409020600101546001600160a01b031633146118e55760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732064656044820152641c1bdcda5d60da1b6064820152608401610ae8565b6118ee8161235e565b156119465760405162461bcd60e51b815260206004820152602260248201527f547269656420746f20636f6d706f756e64207265776172647320746f6f20736f60448201526137b760f11b6064820152608401610ae8565b6000818152600460205260408120600601546119623384612471565b61196c9190613467565b60008381526004602052604081206006810182905560020180549293508392909190611999908490613467565b9091555050600082815260046020819052604091829020429082015560105491516340c10f1960e01b81523391810191909152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015611a0257600080fd5b505af1158015611a16573d6000803e3d6000fd5b50506040518381523392507f169f1815ebdea059aac3bb00ec9a9594c7a5ffcb64a17e8392b5d84909a14556915060200160405180910390a25050565b6001600160a01b03811660009081526005602052604081205460ff16611abb5760405162461bcd60e51b815260206004820152601460248201527f546f6b656e206e6f7420617574686f72697a65640000000000000000000000006044820152606401610ae8565b6001600160a01b038216600090815260066020526040902054841015611b315760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420736d616c6c6572207468616e206d696e696d696d756d2064656044820152641c1bdcda5d60da1b6064820152608401610ae8565b6040516370a0823160e01b8152336004820152829085906001600160a01b038316906370a0823190602401602060405180830381865afa158015611b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9d91906134d6565b1015611beb5760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e0000006044820152606401610ae8565b604051636eb1769f60e11b815233600482015230602482015285906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa158015611c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5b91906134d6565b1015611ca95760405162461bcd60e51b815260206004820152601160248201527f416c6c6f77616e6365206e6f74207365740000000000000000000000000000006044820152606401610ae8565b60048460ff161115611cfd5760405162461bcd60e51b815260206004820152601060248201527f496e76616c69642074696d656c6f636b000000000000000000000000000000006044820152606401610ae8565b6000611d0860015490565b9050604051806101200160405280856001600160a01b03168152602001336001600160a01b031681526020018781526020016000815260200142815260200142815260200160008152602001600081526020018660ff168152506004600083815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff021916908360ff16021790555090505060006004811115611e4357611e43613519565b60ff168560ff1603611e7357611e5c4262278d00613467565b600082815260046020526040902060070155611ee9565b60001960ff861601611e8c57611e5c426276a700613467565b60011960ff861601611ea557611e5c4262ed4e00613467565b60021960ff861601611ebf57611e5c426301e13380613467565b60031960ff861601611ee957611ed6426078613467565b6000828152600460205260409020600701555b3360008181526003602090815260408083208054600181018255908452828420018590559154825163fbfa77cf60e01b815292516001600160a01b03878116956323b872dd959094939091169263fbfa77cf926004808401938290030181865afa158015611f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7f919061347a565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018990526064016020604051808303816000875af1158015611fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff791906134b9565b506010546001600160a01b038581166000908152600f60205260409020549116906340c10f1990339061202a908a613502565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561207057600080fd5b505af1158015612084573d6000803e3d6000fd5b50505050612096600180546001019055565b6001600160a01b0384166000908152600f6020526040902054339082907ff7373f56c201647feae85a62d3cf56286ed3a43d20c5eb7f9883d6ea690ef7c09087906120e1908b613502565b604080516001600160a01b03909316835260208301919091520160405180910390a395945050505050565b612114612b4b565b6001600160a01b0381166000818152600860205260408082208590555184917f8803800ab9d24dc1e2a2ada0893efb7b8fc19c55fddd9512c239b276e7f532fd91a35050565b612162612b4b565b6001600160a01b0381166000818152600a60205260408082208590555184917f3bdd25ee6c72097873ae6536b32d2c78439a093fa54f9091c324f0a2140a880291a35050565b6121b0612b4b565b6001600160a01b0381166122065760405162461bcd60e51b815260206004820152601e60248201527f466f756e6465727320616464726573732063616e6e6f742062652030783000006044820152606401610ae8565b601180546001600160a01b0319166001600160a01b0383169081179091556040517f23008753c65029d55e051a14341d50cf19b808653ba432a5faeb07bd7865e25b90600090a250565b612258612b4b565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6122b4612b4b565b6122be8282612c22565b5050565b6122ca612b4b565b6001600160a01b0381166000818152600e60205260408082208590555184917f583cc649b350d69beed18d7047064d367c82831d16e65d08ff74b549dff2d0ec91a35050565b612318612b4b565b6001600160a01b0381166000818152600d60205260408082208590555184917f11ef1060a695a1277b08edcbb2c364d43d4eb52f1060daaabf0df445cb6cdfdf91a35050565b600081815260046020818152604080842080546001600160a01b0316855260078352908420548585529183905290910154429161239a91613467565b116123a757506000919050565b600082815260046020818152604080842080546001600160a01b0316855260078352908420549386905290829052015442916123e291613467565b6123ec91906134ef565b92915050565b6123fa612b4b565b6001600160a01b0381166000818152600c60205260408082208590555184917fe0e7eacc628163b5a3362ddd2e66b5c7f729ed892e22b82931952c274f22a95191a35050565b6003602052816000526040600020818154811061245c57600080fd5b90600052602060002001600091509150505481565b600081815260046020818152604080842080546001600160a01b03168552600883529084205485855291839052600281015492015483926298968092610e10929091906124be90426134ef565b6124c89190613502565b6124d29190613502565b6124dc9190613497565b6124e69190613497565b6011546040516370a0823160e01b81526001600160a01b038781166004830152929350600092909116906370a0823190602401602060405180830381865afa158015612536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255a91906134d6565b11156125a5576000838152600460209081526040808320546001600160a01b03168352600c825280832054600b909252909120546125989083613502565b6125a29190613497565b90505b6012546040516370a0823160e01b81526001600160a01b03868116600483015260009216906370a0823190602401602060405180830381865afa1580156125f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261491906134d6565b1115612717576012546040516370a0823160e01b81526001600160a01b03868116600483015260009216906370a0823190602401602060405180830381865afa158015612665573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268991906134d6565b90506005811115612698575060055b6000848152600460209081526040808320546001600160a01b03168352600e825280832054600d909252909120546126d09083613502565b6000868152600460209081526040808320546001600160a01b03168352600e9091529020546126ff9190613467565b6127099084613502565b6127139190613497565b9150505b60008381526004602052604090206008015460ff166001036127535761271061274282612774613502565b61274c9190613497565b90506127b6565b60008381526004602052604090206008015460ff1660020361277e576127106127428261283c613502565b60008381526004602052604090206008015460ff166003036127b6576127106127a982612a94613502565b6127b39190613497565b90505b9392505050565b6127c5612b4b565b6001600160a01b03811661281b5760405162461bcd60e51b815260206004820152601a60248201527f6b4e465420616464726573732063616e6e6f74206265203078300000000000006044820152606401610ae8565b601280546001600160a01b0319166001600160a01b0383169081179091556040517fc8e08c5b2fa487609cdc92d5cfcc240f3c8fc73ac5e58fafc5d465d20aaaf31290600090a250565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156128c557602002820191906000526020600020905b8154815260200190600101908083116128b1575b50505050509050919050565b6128d9612b4b565b6001600160a01b0381166000908152600a60205260409020548211156129675760405162461bcd60e51b815260206004820152602760248201527f5769746864726177616c206665652063616e6e6f74206265206d6f726520746860448201527f616e2031303025000000000000000000000000000000000000000000000000006064820152608401610ae8565b6001600160a01b0381166000818152600960205260408082208590555184917f5d5169bb1fbf418e612b1934f181b6ce300a1aad27fdb0e6f6aadbd96f50bb8f91a35050565b6129b5612b4b565b6001600160a01b038116612a0b5760405162461bcd60e51b815260206004820152601b60248201527f48656c697820616464726573732063616e6e6f742062652030783000000000006044820152606401610ae8565b601080546001600160a01b0319166001600160a01b0383169081179091556040517fdcbeffeaf77a19486e34d4b5fc3809913d1e7125a43b8dcdb17944ab2c17579090600090a250565b612a5d612b4b565b6001600160a01b0381166000818152600760205260408082208590555184917fd0d3d840363c3a773f4578f92d7914f6b37985570c79ee2889d69d7d8f12c29591a35050565b612aab612b4b565b6001600160a01b038116612b015760405162461bcd60e51b815260206004820152601e60248201527f547265617375727920616464726573732063616e6e6f742062652030783000006044820152606401610ae8565b601380546001600160a01b0319166001600160a01b0383169081179091556040517fafa147634b29e2c7bd53ce194256b9f41cfb9ba3036f2b822fdd1d965beea08690600090a250565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bc0919061347a565b6001600160a01b0316336001600160a01b031614612c205760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610ae8565b565b6001600160a01b038216612c785760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e20616464726573732063616e6e6f742062652030783000000000006044820152606401610ae8565b8015156001036131ee576001600160a01b038216600090815260086020526040902054612cf75760405162461bcd60e51b815260206004820152602760248201527f526577617264732070657220686f7572206d75737420626520677265617465726044820152660207468616e20360cc1b6064820152608401610ae8565b6001600160a01b038216600090815260076020526040902054612d6e5760405162461bcd60e51b815260206004820152602960248201527f436f6d706f756e64206672657175656e6379206d75737420626520677265617460448201526806572207468616e20360bc1b6064820152608401610ae8565b6001600160a01b038216600090815260096020526040902054612de15760405162461bcd60e51b815260206004820152602560248201527f5769746864726177616c20666565206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610ae8565b6001600160a01b0382166000908152600a6020526040902054612e5c5760405162461bcd60e51b815260206004820152602d60248201527f5769746864726177616c206665652064697669736f72206d757374206265206760448201526c0726561746572207468616e203609c1b6064820152608401610ae8565b6001600160a01b0382166000908152600b6020526040902054612ed65760405162461bcd60e51b815260206004820152602c60248201527f466f756e646572732072657761726420626f6f7374206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608401610ae8565b6001600160a01b0382166000908152600c6020526040902054612f615760405162461bcd60e51b815260206004820152603460248201527f466f756e646572732072657761726420626f6f73742064697669736f72206d7560448201527f73742062652067726561746572207468616e20300000000000000000000000006064820152608401610ae8565b6001600160a01b0382166000908152600d6020526040902054612fd75760405162461bcd60e51b815260206004820152602860248201527f6b4e46542072657761726420626f6f7374206d75737420626520677265617465604482015267072207468616e20360c41b6064820152608401610ae8565b6001600160a01b0382166000908152600e60205260409020546130555760405162461bcd60e51b815260206004820152603060248201527f6b4e46542072657761726420626f6f73742064697669736f72206d757374206260448201526f0652067726561746572207468616e20360841b6064820152608401610ae8565b6001600160a01b0382166000908152600f60205260409020546130ba5760405162461bcd60e51b815260206004820152601c60248201527f526174696f206d7573742062652067726561746572207468616e2030000000006044820152606401610ae8565b6001600160a01b03821660009081526006602052604090205461312b5760405162461bcd60e51b8152602060048201526024808201527f4d696e696d756d207374616b65206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608401610ae8565b6000826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561316b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318f91906134d6565b116131ee5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e20746f74616c20737570706c79206d75737420626520677265617460448201526806572207468616e20360bc1b6064820152608401610ae8565b6001600160a01b038216600081815260056020526040808220805460ff191685151590811790915590519092917f59261974a183535ca20bb33ae77db42c679a079844739a2e10f0b6ecb847379a91a35050565b6001600160a01b038116811461325757600080fd5b50565b60006020828403121561326c57600080fd5b81356127b681613242565b6000806040838503121561328a57600080fd5b823561329581613242565b946020939093013593505050565b6000602082840312156132b557600080fd5b5035919050565b600080604083850312156132cf57600080fd5b8235915060208301356132e181613242565b809150509250929050565b60008060008060008060008060008060006101608c8e03121561330e57600080fd5b8b3561331981613242565b9d60208d01359d5060408d01359c60608101359c5060808101359b5060a08101359a5060c0810135995060e08101359850610100810135975061012081013596506101400135945092505050565b6000806040838503121561337a57600080fd5b50508035926020909101359150565b60008060006060848603121561339e57600080fd5b83359250602084013560ff811681146133b657600080fd5b915060408401356133c681613242565b809150509250925092565b801515811461325757600080fd5b600080604083850312156133f257600080fd5b82356133fd81613242565b915060208301356132e1816133d1565b6020808252825182820181905260009190848201906040850190845b8181101561344557835183529284019291840191600101613429565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156123ec576123ec613451565b60006020828403121561348c57600080fd5b81516127b681613242565b6000826134b457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156134cb57600080fd5b81516127b6816133d1565b6000602082840312156134e857600080fd5b5051919050565b818103818111156123ec576123ec613451565b80820281158282048414176123ec576123ec613451565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000811000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103835760003560e01c806372aa9d91116101de578063c39ccf881161010f578063d9831a72116100ad578063ef3090d11161007c578063ef3090d1146108e9578063f0f4426014610945578063f16b41f414610958578063fa2176b614610a1357600080fd5b8063d9831a721461058a578063e37d47e4146108e9578063e519cf17146108fc578063ea425a6d1461092557600080fd5b8063cd5f5a39116100e9578063cd5f5a3914610887578063cf717c8c146108b0578063cfb656a5146108c3578063d55111c5146108d657600080fd5b8063c39ccf8814610815578063c4c3a83e1461083e578063c5ebc2f71461086757600080fd5b8063a9b294071161017c578063ba57714811610156578063ba577148146107c9578063beb8314c146107dc578063bf7e214f146107ef578063bf811fbc1461080257600080fd5b8063a9b2940714610783578063b54b9c8814610796578063b9c94b67146107b657600080fd5b80637bf7f3d3116101b85780637bf7f3d31461073757806396ca0b001461074a578063a13d50791461075d578063a55dfa1c1461077057600080fd5b806372aa9d91146106f157806378e2816b146107115780637a9e5e4b1461072457600080fd5b80634477c974116102b8578063580e26a11161025657806361316cb01161023057806361316cb01461068b57806361d027b31461069e5780636aa421b7146106b15780636f3a4988146106d157600080fd5b8063580e26a11461061157806359b0e590146106445780635a5392be1461066857600080fd5b80634cae76e5116102925780634cae76e51461058a5780635385689c1461059d578063546f2b66146105c85780635722dee0146105e857600080fd5b80634477c9741461053b5780634715f40c1461054e5780634774dc931461057757600080fd5b80631f6514db1161032557806338c26d18116102ff57806338c26d18146104bd5780633a46a46d146104f5578063404d221a14610515578063441a3e701461052857600080fd5b80631f6514db1461047757806328c964f61461048a57806331aab0f7146104aa57600080fd5b806310b184381161036157806310b18438146103f8578063171f9ce41461041b5780631d0345131461042e5780631e78e9a21461045757600080fd5b8063038182a0146103885780630930df6a146103bb5780630962ef79146103e3575b600080fd5b6103a861039636600461325a565b600a6020526000908152604090205481565b6040519081526020015b60405180910390f35b6103ce6103c9366004613277565b610a3c565b604080519283526020830191909152016103b2565b6103f66103f13660046132a3565b610a75565b005b6103a86104063660046132a3565b60009081526004602052604090206007015490565b6103f66104293660046132bc565b610db8565b6103a861043c36600461325a565b6001600160a01b031660009081526008602052604090205490565b6103a861046536600461325a565b600d6020526000908152604090205481565b6103f66104853660046132bc565b610e06565b6103a861049836600461325a565b600e6020526000908152604090205481565b6103f66104b83660046132ec565b610e54565b6104e36104cb3660046132a3565b60009081526004602052604090206008015460ff1690565b60405160ff90911681526020016103b2565b6103a861050336600461325a565b600f6020526000908152604090205481565b6103f66105233660046132bc565b6113c8565b6103f6610536366004613367565b611416565b6103f66105493660046132a3565b61186e565b6103a861055c36600461325a565b6001600160a01b03166000908152600b602052604090205490565b6103a8610585366004613389565b611a53565b6103f66105983660046132bc565b61210c565b6012546105b0906001600160a01b031681565b6040516001600160a01b0390911681526020016103b2565b6103a86105d636600461325a565b600b6020526000908152604090205481565b6103a86105f636600461325a565b6001600160a01b031660009081526009602052604090205490565b61063461061f36600461325a565b60056020526000908152604090205460ff1681565b60405190151581526020016103b2565b6103a86106523660046132a3565b6000908152600460208190526040909120015490565b6103a86106763660046132a3565b60009081526004602052604090206002015490565b6103f66106993660046132bc565b61215a565b6013546105b0906001600160a01b031681565b6103a86106bf36600461325a565b600c6020526000908152604090205481565b6103a86106df36600461325a565b60086020526000908152604090205481565b6103a86106ff36600461325a565b60066020526000908152604090205481565b6103f661071f36600461325a565b6121a8565b6103f661073236600461325a565b612250565b6103f66107453660046133df565b6122ac565b6103f66107583660046132bc565b6122c2565b6103f661076b3660046132bc565b612310565b6103a861077e3660046132a3565b61235e565b6010546105b0906001600160a01b031681565b6103a86107a436600461325a565b60096020526000908152604090205481565b6103f66107c43660046132bc565b6123f2565b6103a86107d7366004613277565b612440565b6103a86107ea366004613277565b612471565b6000546105b0906001600160a01b031681565b6103f661081036600461325a565b6127bd565b6103a861082336600461325a565b6001600160a01b031660009081526006602052604090205490565b6103a861084c36600461325a565b6001600160a01b03166000908152600c602052604090205490565b61087a61087536600461325a565b612865565b6040516103b2919061340d565b6103a861089536600461325a565b6001600160a01b03166000908152600a602052604090205490565b6103f66108be3660046132bc565b6128d1565b6103f66108d136600461325a565b6129ad565b6011546105b0906001600160a01b031681565b6103f66108f73660046132bc565b612a55565b6103a861090a36600461325a565b6001600160a01b03166000908152600d602052604090205490565b6103a861093336600461325a565b60076020526000908152604090205481565b6103f661095336600461325a565b612aa3565b6109c16109663660046132a3565b60046020819052600091825260409091208054600182015460028301546003840154948401546005850154600686015460078701546008909701546001600160a01b0396871698959096169693959293919290919060ff1689565b604080516001600160a01b039a8b1681529990981660208a0152968801959095526060870193909352608086019190915260a085015260c084015260e083015260ff16610100820152610120016103b2565b6103a8610a2136600461325a565b6001600160a01b03166000908152600e602052604090205490565b60008181526004602052604081206002810154600690910154909190610a628585612471565b610a6c9190613467565b90509250929050565b6000818152600460205260409020600101546001600160a01b03163314610af15760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732064656044820152641c1bdcda5d60da1b60648201526084015b60405180910390fd5b600081815260046020526040902060070154421015610b525760405162461bcd60e51b815260206004820152601360248201527f54696d656c6f636b206e6f7420706173736564000000000000000000000000006044820152606401610ae8565b600081815260046020526040812060060154610b6e3384612471565b610b789190613467565b905060008111610bca5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f2072657761726473000000000000000000000000006044820152606401610ae8565b6000828152600460208190526040808320600681019390935542928201929092556010549151632770a7eb60e21b81523391810191909152602481018390526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b158015610c3857600080fd5b505af1158015610c4c573d6000803e3d6000fd5b5050506000838152600460208181526040808420549354815163fbfa77cf60e01b815291516001600160a01b03958616965086956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa158015610cb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd4919061347a565b6000868152600460209081526040808320546001600160a01b03168352600f9091529020543390610d059087613497565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610d59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7d91906134b9565b5060405182815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc99060200160405180910390a2505050565b610dc0612b4b565b6001600160a01b0381166000818152600f60205260408082208590555184917f62b574cc62ed3db0ae736cb4349346a234832cc8b215c6423fd67505addc2ffa91a35050565b610e0e612b4b565b6001600160a01b0381166000818152600b60205260408082208590555184917f1677c34b69a09796446af7a4c75943a1bb36202c16eb82199ef7d37d0ee4b28891a35050565b610e5c612b4b565b6001600160a01b038b16610eb25760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e20616464726573732063616e6e6f742062652030783000000000006044820152606401610ae8565b60008a11610f125760405162461bcd60e51b815260206004820152602760248201527f526577617264732070657220686f7572206d75737420626520677265617465726044820152660207468616e20360cc1b6064820152608401610ae8565b60008911610f745760405162461bcd60e51b815260206004820152602960248201527f436f6d706f756e64206672657175656e6379206d75737420626520677265617460448201526806572207468616e20360bc1b6064820152608401610ae8565b60008811610fd25760405162461bcd60e51b815260206004820152602560248201527f5769746864726177616c20666565206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610ae8565b600087116110385760405162461bcd60e51b815260206004820152602d60248201527f5769746864726177616c206665652064697669736f72206d757374206265206760448201526c0726561746572207468616e203609c1b6064820152608401610ae8565b6000861161109d5760405162461bcd60e51b815260206004820152602c60248201527f466f756e646572732072657761726420626f6f7374206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608401610ae8565b600085116111135760405162461bcd60e51b815260206004820152603460248201527f466f756e646572732072657761726420626f6f73742064697669736f72206d7560448201527f73742062652067726561746572207468616e20300000000000000000000000006064820152608401610ae8565b600084116111745760405162461bcd60e51b815260206004820152602860248201527f6b4e46542072657761726420626f6f7374206d75737420626520677265617465604482015267072207468616e20360c41b6064820152608401610ae8565b600083116111dd5760405162461bcd60e51b815260206004820152603060248201527f6b4e46542072657761726420626f6f73742064697669736f72206d757374206260448201526f0652067726561746572207468616e20360841b6064820152608401610ae8565b6000821161122d5760405162461bcd60e51b815260206004820152601c60248201527f526174696f206d7573742062652067726561746572207468616e2030000000006044820152606401610ae8565b600081116112895760405162461bcd60e51b8152602060048201526024808201527f4d696e696d756d207374616b65206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608401610ae8565b60008b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ed91906134d6565b1161134c5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e20746f74616c20737570706c79206d75737420626520677265617460448201526806572207468616e20360bc1b6064820152608401610ae8565b611356878c61215a565b611360858c6123f2565b61136a838c6122c2565b611374868c610e06565b61137e848c612310565b6113888a8c61210c565b611392828c610db8565b61139c888c6128d1565b6113a6898c612a55565b6113b0818c6113c8565b6113bb8b6001612c22565b5050505050505050505050565b6113d0612b4b565b6001600160a01b0381166000818152600660205260408082208590555184917fef3cb734d88702dbb1c3bc381c52176876be95e70b66d3970d16653ee992a6c291a35050565b6000818152600460205260409020600101546001600160a01b0316331461148d5760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732064656044820152641c1bdcda5d60da1b6064820152608401610ae8565b6000818152600460205260409020600701544210156114ee5760405162461bcd60e51b815260206004820152601360248201527f54696d656c6f636b206e6f7420706173736564000000000000000000000000006044820152606401610ae8565b6000818152600460205260409020600201548211156115595760405162461bcd60e51b815260206004820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f75206861766044820152606560f81b6064820152608401610ae8565b6010546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156115a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c591906134d6565b82111561163a5760405162461bcd60e51b815260206004820152603760248201527f43616e2774207769746864726177206d6f726520746f6b656e73207468616e2060448201527f74686520636f6c6c61746572616c20796f7520686176650000000000000000006064820152608401610ae8565b60006116463383612471565b90508260046000848152602001908152602001600020600201600082825461166e91906134ef565b9091555050600082815260046020818152604080842042938101939093556006830185905591546001600160a01b03168352600a80825282842054600983529284205491526116bd90826134ef565b6116c79086613502565b6116d19190613497565b601054604051632770a7eb60e21b8152336004820152602481018790529192506001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561171e57600080fd5b505af1158015611732573d6000803e3d6000fd5b5050506000848152600460208181526040808420549354815163fbfa77cf60e01b815291516001600160a01b03958616965086956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba919061347a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018590526064016020604051808303816000875af115801561180d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183191906134b9565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050505050565b6000818152600460205260409020600101546001600160a01b031633146118e55760405162461bcd60e51b815260206004820152602560248201527f596f7520617265206e6f7420746865206f776e6572206f6620746869732064656044820152641c1bdcda5d60da1b6064820152608401610ae8565b6118ee8161235e565b156119465760405162461bcd60e51b815260206004820152602260248201527f547269656420746f20636f6d706f756e64207265776172647320746f6f20736f60448201526137b760f11b6064820152608401610ae8565b6000818152600460205260408120600601546119623384612471565b61196c9190613467565b60008381526004602052604081206006810182905560020180549293508392909190611999908490613467565b9091555050600082815260046020819052604091829020429082015560105491516340c10f1960e01b81523391810191909152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015611a0257600080fd5b505af1158015611a16573d6000803e3d6000fd5b50506040518381523392507f169f1815ebdea059aac3bb00ec9a9594c7a5ffcb64a17e8392b5d84909a14556915060200160405180910390a25050565b6001600160a01b03811660009081526005602052604081205460ff16611abb5760405162461bcd60e51b815260206004820152601460248201527f546f6b656e206e6f7420617574686f72697a65640000000000000000000000006044820152606401610ae8565b6001600160a01b038216600090815260066020526040902054841015611b315760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420736d616c6c6572207468616e206d696e696d696d756d2064656044820152641c1bdcda5d60da1b6064820152608401610ae8565b6040516370a0823160e01b8152336004820152829085906001600160a01b038316906370a0823190602401602060405180830381865afa158015611b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9d91906134d6565b1015611beb5760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e0000006044820152606401610ae8565b604051636eb1769f60e11b815233600482015230602482015285906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa158015611c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5b91906134d6565b1015611ca95760405162461bcd60e51b815260206004820152601160248201527f416c6c6f77616e6365206e6f74207365740000000000000000000000000000006044820152606401610ae8565b60048460ff161115611cfd5760405162461bcd60e51b815260206004820152601060248201527f496e76616c69642074696d656c6f636b000000000000000000000000000000006044820152606401610ae8565b6000611d0860015490565b9050604051806101200160405280856001600160a01b03168152602001336001600160a01b031681526020018781526020016000815260200142815260200142815260200160008152602001600081526020018660ff168152506004600083815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff021916908360ff16021790555090505060006004811115611e4357611e43613519565b60ff168560ff1603611e7357611e5c4262278d00613467565b600082815260046020526040902060070155611ee9565b60001960ff861601611e8c57611e5c426276a700613467565b60011960ff861601611ea557611e5c4262ed4e00613467565b60021960ff861601611ebf57611e5c426301e13380613467565b60031960ff861601611ee957611ed6426078613467565b6000828152600460205260409020600701555b3360008181526003602090815260408083208054600181018255908452828420018590559154825163fbfa77cf60e01b815292516001600160a01b03878116956323b872dd959094939091169263fbfa77cf926004808401938290030181865afa158015611f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7f919061347a565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018990526064016020604051808303816000875af1158015611fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff791906134b9565b506010546001600160a01b038581166000908152600f60205260409020549116906340c10f1990339061202a908a613502565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b15801561207057600080fd5b505af1158015612084573d6000803e3d6000fd5b50505050612096600180546001019055565b6001600160a01b0384166000908152600f6020526040902054339082907ff7373f56c201647feae85a62d3cf56286ed3a43d20c5eb7f9883d6ea690ef7c09087906120e1908b613502565b604080516001600160a01b03909316835260208301919091520160405180910390a395945050505050565b612114612b4b565b6001600160a01b0381166000818152600860205260408082208590555184917f8803800ab9d24dc1e2a2ada0893efb7b8fc19c55fddd9512c239b276e7f532fd91a35050565b612162612b4b565b6001600160a01b0381166000818152600a60205260408082208590555184917f3bdd25ee6c72097873ae6536b32d2c78439a093fa54f9091c324f0a2140a880291a35050565b6121b0612b4b565b6001600160a01b0381166122065760405162461bcd60e51b815260206004820152601e60248201527f466f756e6465727320616464726573732063616e6e6f742062652030783000006044820152606401610ae8565b601180546001600160a01b0319166001600160a01b0383169081179091556040517f23008753c65029d55e051a14341d50cf19b808653ba432a5faeb07bd7865e25b90600090a250565b612258612b4b565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6122b4612b4b565b6122be8282612c22565b5050565b6122ca612b4b565b6001600160a01b0381166000818152600e60205260408082208590555184917f583cc649b350d69beed18d7047064d367c82831d16e65d08ff74b549dff2d0ec91a35050565b612318612b4b565b6001600160a01b0381166000818152600d60205260408082208590555184917f11ef1060a695a1277b08edcbb2c364d43d4eb52f1060daaabf0df445cb6cdfdf91a35050565b600081815260046020818152604080842080546001600160a01b0316855260078352908420548585529183905290910154429161239a91613467565b116123a757506000919050565b600082815260046020818152604080842080546001600160a01b0316855260078352908420549386905290829052015442916123e291613467565b6123ec91906134ef565b92915050565b6123fa612b4b565b6001600160a01b0381166000818152600c60205260408082208590555184917fe0e7eacc628163b5a3362ddd2e66b5c7f729ed892e22b82931952c274f22a95191a35050565b6003602052816000526040600020818154811061245c57600080fd5b90600052602060002001600091509150505481565b600081815260046020818152604080842080546001600160a01b03168552600883529084205485855291839052600281015492015483926298968092610e10929091906124be90426134ef565b6124c89190613502565b6124d29190613502565b6124dc9190613497565b6124e69190613497565b6011546040516370a0823160e01b81526001600160a01b038781166004830152929350600092909116906370a0823190602401602060405180830381865afa158015612536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255a91906134d6565b11156125a5576000838152600460209081526040808320546001600160a01b03168352600c825280832054600b909252909120546125989083613502565b6125a29190613497565b90505b6012546040516370a0823160e01b81526001600160a01b03868116600483015260009216906370a0823190602401602060405180830381865afa1580156125f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261491906134d6565b1115612717576012546040516370a0823160e01b81526001600160a01b03868116600483015260009216906370a0823190602401602060405180830381865afa158015612665573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268991906134d6565b90506005811115612698575060055b6000848152600460209081526040808320546001600160a01b03168352600e825280832054600d909252909120546126d09083613502565b6000868152600460209081526040808320546001600160a01b03168352600e9091529020546126ff9190613467565b6127099084613502565b6127139190613497565b9150505b60008381526004602052604090206008015460ff166001036127535761271061274282612774613502565b61274c9190613497565b90506127b6565b60008381526004602052604090206008015460ff1660020361277e576127106127428261283c613502565b60008381526004602052604090206008015460ff166003036127b6576127106127a982612a94613502565b6127b39190613497565b90505b9392505050565b6127c5612b4b565b6001600160a01b03811661281b5760405162461bcd60e51b815260206004820152601a60248201527f6b4e465420616464726573732063616e6e6f74206265203078300000000000006044820152606401610ae8565b601280546001600160a01b0319166001600160a01b0383169081179091556040517fc8e08c5b2fa487609cdc92d5cfcc240f3c8fc73ac5e58fafc5d465d20aaaf31290600090a250565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156128c557602002820191906000526020600020905b8154815260200190600101908083116128b1575b50505050509050919050565b6128d9612b4b565b6001600160a01b0381166000908152600a60205260409020548211156129675760405162461bcd60e51b815260206004820152602760248201527f5769746864726177616c206665652063616e6e6f74206265206d6f726520746860448201527f616e2031303025000000000000000000000000000000000000000000000000006064820152608401610ae8565b6001600160a01b0381166000818152600960205260408082208590555184917f5d5169bb1fbf418e612b1934f181b6ce300a1aad27fdb0e6f6aadbd96f50bb8f91a35050565b6129b5612b4b565b6001600160a01b038116612a0b5760405162461bcd60e51b815260206004820152601b60248201527f48656c697820616464726573732063616e6e6f742062652030783000000000006044820152606401610ae8565b601080546001600160a01b0319166001600160a01b0383169081179091556040517fdcbeffeaf77a19486e34d4b5fc3809913d1e7125a43b8dcdb17944ab2c17579090600090a250565b612a5d612b4b565b6001600160a01b0381166000818152600760205260408082208590555184917fd0d3d840363c3a773f4578f92d7914f6b37985570c79ee2889d69d7d8f12c29591a35050565b612aab612b4b565b6001600160a01b038116612b015760405162461bcd60e51b815260206004820152601e60248201527f547265617375727920616464726573732063616e6e6f742062652030783000006044820152606401610ae8565b601380546001600160a01b0319166001600160a01b0383169081179091556040517fafa147634b29e2c7bd53ce194256b9f41cfb9ba3036f2b822fdd1d965beea08690600090a250565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bc0919061347a565b6001600160a01b0316336001600160a01b031614612c205760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610ae8565b565b6001600160a01b038216612c785760405162461bcd60e51b815260206004820152601b60248201527f546f6b656e20616464726573732063616e6e6f742062652030783000000000006044820152606401610ae8565b8015156001036131ee576001600160a01b038216600090815260086020526040902054612cf75760405162461bcd60e51b815260206004820152602760248201527f526577617264732070657220686f7572206d75737420626520677265617465726044820152660207468616e20360cc1b6064820152608401610ae8565b6001600160a01b038216600090815260076020526040902054612d6e5760405162461bcd60e51b815260206004820152602960248201527f436f6d706f756e64206672657175656e6379206d75737420626520677265617460448201526806572207468616e20360bc1b6064820152608401610ae8565b6001600160a01b038216600090815260096020526040902054612de15760405162461bcd60e51b815260206004820152602560248201527f5769746864726177616c20666565206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610ae8565b6001600160a01b0382166000908152600a6020526040902054612e5c5760405162461bcd60e51b815260206004820152602d60248201527f5769746864726177616c206665652064697669736f72206d757374206265206760448201526c0726561746572207468616e203609c1b6064820152608401610ae8565b6001600160a01b0382166000908152600b6020526040902054612ed65760405162461bcd60e51b815260206004820152602c60248201527f466f756e646572732072657761726420626f6f7374206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608401610ae8565b6001600160a01b0382166000908152600c6020526040902054612f615760405162461bcd60e51b815260206004820152603460248201527f466f756e646572732072657761726420626f6f73742064697669736f72206d7560448201527f73742062652067726561746572207468616e20300000000000000000000000006064820152608401610ae8565b6001600160a01b0382166000908152600d6020526040902054612fd75760405162461bcd60e51b815260206004820152602860248201527f6b4e46542072657761726420626f6f7374206d75737420626520677265617465604482015267072207468616e20360c41b6064820152608401610ae8565b6001600160a01b0382166000908152600e60205260409020546130555760405162461bcd60e51b815260206004820152603060248201527f6b4e46542072657761726420626f6f73742064697669736f72206d757374206260448201526f0652067726561746572207468616e20360841b6064820152608401610ae8565b6001600160a01b0382166000908152600f60205260409020546130ba5760405162461bcd60e51b815260206004820152601c60248201527f526174696f206d7573742062652067726561746572207468616e2030000000006044820152606401610ae8565b6001600160a01b03821660009081526006602052604090205461312b5760405162461bcd60e51b8152602060048201526024808201527f4d696e696d756d207374616b65206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608401610ae8565b6000826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561316b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318f91906134d6565b116131ee5760405162461bcd60e51b815260206004820152602960248201527f546f6b656e20746f74616c20737570706c79206d75737420626520677265617460448201526806572207468616e20360bc1b6064820152608401610ae8565b6001600160a01b038216600081815260056020526040808220805460ff191685151590811790915590519092917f59261974a183535ca20bb33ae77db42c679a079844739a2e10f0b6ecb847379a91a35050565b6001600160a01b038116811461325757600080fd5b50565b60006020828403121561326c57600080fd5b81356127b681613242565b6000806040838503121561328a57600080fd5b823561329581613242565b946020939093013593505050565b6000602082840312156132b557600080fd5b5035919050565b600080604083850312156132cf57600080fd5b8235915060208301356132e181613242565b809150509250929050565b60008060008060008060008060008060006101608c8e03121561330e57600080fd5b8b3561331981613242565b9d60208d01359d5060408d01359c60608101359c5060808101359b5060a08101359a5060c0810135995060e08101359850610100810135975061012081013596506101400135945092505050565b6000806040838503121561337a57600080fd5b50508035926020909101359150565b60008060006060848603121561339e57600080fd5b83359250602084013560ff811681146133b657600080fd5b915060408401356133c681613242565b809150509250925092565b801515811461325757600080fd5b600080604083850312156133f257600080fd5b82356133fd81613242565b915060208301356132e1816133d1565b6020808252825182820181905260009190848201906040850190845b8181101561344557835183529284019291840191600101613429565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156123ec576123ec613451565b60006020828403121561348c57600080fd5b81516127b681613242565b6000826134b457634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156134cb57600080fd5b81516127b6816133d1565b6000602082840312156134e857600080fd5b5051919050565b818103818111156123ec576123ec613451565b80820281158282048414176123ec576123ec613451565b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000811000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12334,
        "contract": "contracts/Staking.sol:Staking",
        "label": "authority",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IAuthority)11726"
      },
      {
        "astId": 9172,
        "contract": "contracts/Staking.sol:Staking",
        "label": "_depositIds",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Counter)4479_storage"
      },
      {
        "astId": 9201,
        "contract": "contracts/Staking.sol:Staking",
        "label": "name",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9206,
        "contract": "contracts/Staking.sol:Staking",
        "label": "userDepositsIds",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 9211,
        "contract": "contracts/Staking.sol:Staking",
        "label": "userDeposits",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Staker)9191_storage)"
      },
      {
        "astId": 9215,
        "contract": "contracts/Staking.sol:Staking",
        "label": "authorizedERC20",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 9219,
        "contract": "contracts/Staking.sol:Staking",
        "label": "minStakeERC20",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9223,
        "contract": "contracts/Staking.sol:Staking",
        "label": "compoundFreqERC20",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9227,
        "contract": "contracts/Staking.sol:Staking",
        "label": "rewardsPerHourERC20",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9231,
        "contract": "contracts/Staking.sol:Staking",
        "label": "withdrawalFeeERC20",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9235,
        "contract": "contracts/Staking.sol:Staking",
        "label": "withdrawalFeeDivisorERC20",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9239,
        "contract": "contracts/Staking.sol:Staking",
        "label": "foundersRewardBoostERC20",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9243,
        "contract": "contracts/Staking.sol:Staking",
        "label": "foundersRewardBoostDivisorERC20",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9247,
        "contract": "contracts/Staking.sol:Staking",
        "label": "kNFTRewardBoostERC20",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9251,
        "contract": "contracts/Staking.sol:Staking",
        "label": "kNFTRewardBoostDivisorERC20",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9255,
        "contract": "contracts/Staking.sol:Staking",
        "label": "ratioERC20",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 9258,
        "contract": "contracts/Staking.sol:Staking",
        "label": "helixERC20",
        "offset": 0,
        "slot": "16",
        "type": "t_contract(IHelix)11764"
      },
      {
        "astId": 9261,
        "contract": "contracts/Staking.sol:Staking",
        "label": "konduxERC721Founders",
        "offset": 0,
        "slot": "17",
        "type": "t_contract(IERC721)3417"
      },
      {
        "astId": 9264,
        "contract": "contracts/Staking.sol:Staking",
        "label": "konduxERC721kNFT",
        "offset": 0,
        "slot": "18",
        "type": "t_contract(IERC721)3417"
      },
      {
        "astId": 9267,
        "contract": "contracts/Staking.sol:Staking",
        "label": "treasury",
        "offset": 0,
        "slot": "19",
        "type": "t_contract(ITreasury)12179"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAuthority)11726": {
        "encoding": "inplace",
        "label": "contract IAuthority",
        "numberOfBytes": "20"
      },
      "t_contract(IERC721)3417": {
        "encoding": "inplace",
        "label": "contract IERC721",
        "numberOfBytes": "20"
      },
      "t_contract(IHelix)11764": {
        "encoding": "inplace",
        "label": "contract IHelix",
        "numberOfBytes": "20"
      },
      "t_contract(ITreasury)12179": {
        "encoding": "inplace",
        "label": "contract ITreasury",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Staker)9191_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Staking.Staker)",
        "numberOfBytes": "32",
        "value": "t_struct(Staker)9191_storage"
      },
      "t_struct(Counter)4479_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 4478,
            "contract": "contracts/Staking.sol:Staking",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Staker)9191_storage": {
        "encoding": "inplace",
        "label": "struct Staking.Staker",
        "members": [
          {
            "astId": 9174,
            "contract": "contracts/Staking.sol:Staking",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 9176,
            "contract": "contracts/Staking.sol:Staking",
            "label": "staker",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 9178,
            "contract": "contracts/Staking.sol:Staking",
            "label": "deposited",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 9180,
            "contract": "contracts/Staking.sol:Staking",
            "label": "redeemed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 9182,
            "contract": "contracts/Staking.sol:Staking",
            "label": "timeOfLastUpdate",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 9184,
            "contract": "contracts/Staking.sol:Staking",
            "label": "lastDepositTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 9186,
            "contract": "contracts/Staking.sol:Staking",
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 9188,
            "contract": "contracts/Staking.sol:Staking",
            "label": "timelock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 9190,
            "contract": "contracts/Staking.sol:Staking",
            "label": "timelockCategory",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}