{
  "address": "0x2B5dC79852437574D9e7bA260BB7aA4Cb1BcA758",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_authority",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_konduxFounders",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IAuthority",
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract IAuthority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "konduxFounders",
      "outputs": [
        {
          "internalType": "contract IKonduxFounders",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAuthority",
          "name": "_newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_konduxFounders",
          "type": "address"
        }
      ],
      "name": "setKonduxFounders",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "contract ITreasury",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x12e9bc1ddcd972a25ba5dfbfa0e61cfdd195ada302cc05ff9d207155bfca4e51",
  "receipt": {
    "to": null,
    "from": "0x9f5Ea5Af0368E1d6F685F07978c8A22b2Df7c78D",
    "contractAddress": "0x2B5dC79852437574D9e7bA260BB7aA4Cb1BcA758",
    "transactionIndex": 34,
    "gasUsed": "553527",
    "logsBloom": "0x
    "blockHash": "0x48fbe627f24adcb03d43bd6ff94b61000451b6d5f082523ed079df1aec7c62f2",
    "transactionHash": "0x12e9bc1ddcd972a25ba5dfbfa0e61cfdd195ada302cc05ff9d207155bfca4e51",
    "logs": [
      {
        "transactionIndex": 34,
        "blockNumber": 7707867,
        "transactionHash": "0x12e9bc1ddcd972a25ba5dfbfa0e61cfdd195ada302cc05ff9d207155bfca4e51",
        "address": "0x2B5dC79852437574D9e7bA260BB7aA4Cb1BcA758",
        "topics": [
          "0x2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad"
        ],
        "data": "0x000000000000000000000000eb98c8df177d4281fb07a67bb64ea490c7a0652d",
        "logIndex": 83,
        "blockHash": "0x48fbe627f24adcb03d43bd6ff94b61000451b6d5f082523ed079df1aec7c62f2"
      }
    ],
    "blockNumber": 7707867,
    "cumulativeGasUsed": "9323850",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xEB98C8Df177D4281Fb07A67bb64ea490c7a0652d",
    "0xffeE09f2A6D4a9e54D421704dA23aD13450714C6",
    "0x09504AEb8EC21A3ac9F47a0C6216AC4C45d09d88"
  ],
  "numDeployments": 1,
  "solcInputHash": "f4c916c13ca4907ef6183965a314594e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authority\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_konduxFounders\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IAuthority\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract IAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"konduxFounders\",\"outputs\":[{\"internalType\":\"contract IKonduxFounders\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAuthority\",\"name\":\"_newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_konduxFounders\",\"type\":\"address\"}],\"name\":\"setKonduxFounders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"contract ITreasury\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Minter_Public.sol\":\"MinterPublic\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Minter_Public.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.16;\\r\\nimport \\\"./interfaces/IKonduxFounders.sol\\\";\\r\\nimport \\\"./interfaces/ITreasury.sol\\\";\\r\\nimport \\\"./types/AccessControlled.sol\\\";\\r\\n\\r\\ncontract MinterPublic is AccessControlled {\\r\\n\\r\\n    uint256 public price;\\r\\n\\r\\n    bool public paused;\\r\\n\\r\\n    IKonduxFounders public konduxFounders;\\r\\n    ITreasury public treasury;\\r\\n\\r\\n    constructor(address _authority, address _konduxFounders, address _vault) \\r\\n        AccessControlled(IAuthority(_authority)) {        \\r\\n            require(_konduxFounders != address(0), \\\"Kondux address is not set\\\");\\r\\n            konduxFounders = IKonduxFounders(_konduxFounders);\\r\\n            require(_vault != address(0), \\\"Vault address is not set\\\");\\r\\n            treasury = ITreasury(_vault);\\r\\n            price = 0.25 ether;\\r\\n            paused = false;\\r\\n    }      \\r\\n\\r\\n    function setPaused(bool _paused) public onlyGovernor {\\r\\n        paused = _paused;\\r\\n    }\\r\\n\\r\\n  \\r\\n    function publicMint() public payable isActive returns (uint256) {\\r\\n        require(konduxFounders.totalSupply() < 650, \\\"No more NFTs left\\\");\\r\\n        require(msg.value >= price, \\\"Not enough ETH sent\\\");\\r\\n        treasury.depositEther{ value: msg.value }();\\r\\n        return _mintFounders();\\r\\n    }\\r\\n\\r\\n\\r\\n    function setTreasury(address _treasury) public onlyGovernor {\\r\\n        treasury = ITreasury(_treasury);\\r\\n    }\\r\\n\\r\\n    function setKonduxFounders(address _konduxFounders) public onlyGovernor {\\r\\n        konduxFounders = IKonduxFounders(_konduxFounders);\\r\\n    }\\r\\n\\r\\n    function setPrice(uint256 _price) public onlyGovernor {\\r\\n        price = _price;\\r\\n    }\\r\\n    \\r\\n\\r\\n\\r\\n    // ** INTERNAL FUNCTIONS **\\r\\n\\r\\n    function _mintFounders() internal returns (uint256) {\\r\\n        uint256 id = konduxFounders.safeMint(msg.sender);\\r\\n        return id;\\r\\n    }\\r\\n\\r\\n\\r\\n    // ** MODIFIERS **\\r\\n\\r\\n\\r\\n    modifier isActive() {\\r\\n        require(!paused, \\\"Pausable: paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x293cfbbb8eab77b38e3766ca7fdac9c5b06c4f2f2c35679c52f58d37f03c1efa\",\"license\":\"MIT\"},\"contracts/interfaces/IAuthority.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\r\\npragma solidity >=0.8.9;\\r\\n\\r\\ninterface IAuthority {\\r\\n    /* ========== EVENTS ========== */\\r\\n\\r\\n    event GovernorPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\r\\n    event GuardianPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\r\\n    event PolicyPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\r\\n    event VaultPushed(address indexed from, address indexed to, bool _effectiveImmediately);\\r\\n    event RolePushed(address indexed account, bytes32 _role);\\r\\n\\r\\n    event GovernorPulled(address indexed from, address indexed to);\\r\\n    event GuardianPulled(address indexed from, address indexed to);\\r\\n    event PolicyPulled(address indexed from, address indexed to);\\r\\n    event VaultPulled(address indexed from, address indexed to);\\r\\n\\r\\n    /* ========== VIEW ========== */\\r\\n\\r\\n    function governor() external view returns (address);\\r\\n\\r\\n    function guardian() external view returns (address);\\r\\n\\r\\n    function policy() external view returns (address);\\r\\n\\r\\n    function vault() external view returns (address);\\r\\n\\r\\n    function roles(address _addr) external view returns (bytes32);\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x887a7eb2eeab95bba651b3d65b3d6a4695301acb16f27722524021afa1cf97d5\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IKonduxFounders.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\n\\r\\ninterface IKonduxFounders {\\r\\n\\r\\n    function changeDenominator(uint96 _denominator) external returns (uint96);\\r\\n\\r\\n    function setDefaultRoyalty(address receiver, uint96 feeNumerator) external;\\r\\n\\r\\n    function setTokenRoyalty(uint256 tokenId,address receiver,uint96 feeNumerator) external;\\r\\n\\r\\n    function setBaseURI(string memory _newURI) external returns (string memory);\\r\\n\\r\\n    function pause() external;\\r\\n\\r\\n    function unpause() external;\\r\\n\\r\\n    function safeMint(address to) external returns (uint256);\\r\\n\\r\\n    function setMinter(address _minter) external;\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x92097d88ab276435e1bd4752e75811eee77ffdf6ab07b238fa1ff1be5fb2c126\",\"license\":\"MIT\"},\"contracts/interfaces/ITreasury.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity >=0.8.9;\\r\\n\\r\\ninterface ITreasury {\\r\\n    function deposit(\\r\\n        uint256 _amount,\\r\\n        address _token\\r\\n    ) external;\\r\\n\\r\\n    function depositEther() external payable;\\r\\n\\r\\n    function withdraw(\\r\\n        uint256 _amount,\\r\\n        address _token\\r\\n    ) external;\\r\\n\\r\\n    function withdrawEther(\\r\\n        uint256 _amount\\r\\n    ) external;\\r\\n}\",\"keccak256\":\"0x8c67fa2207cb873b64e701fefb954747a180a8d7e6a98d229f77a2054ea5d062\",\"license\":\"MIT\"},\"contracts/types/AccessControlled.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.9;\\r\\n\\r\\nimport \\\"../interfaces/IAuthority.sol\\\";\\r\\n\\r\\n/// @dev Reasoning for this contract = modifiers literaly copy code\\r\\n/// instead of pointing towards the logic to execute. Over many\\r\\n/// functions this bloats contract size unnecessarily.\\r\\n/// imho modifiers are a meme.\\r\\nabstract contract AccessControlled {\\r\\n    /* ========== EVENTS ========== */\\r\\n\\r\\n    event AuthorityUpdated(IAuthority authority);\\r\\n\\r\\n    /* ========== STATE VARIABLES ========== */\\r\\n\\r\\n    IAuthority public authority;\\r\\n\\r\\n    /* ========== Constructor ========== */\\r\\n\\r\\n    constructor(IAuthority _authority) {\\r\\n        require(address(_authority) != address(0), \\\"Authority cannot be zero address\\\");\\r\\n        authority = _authority;\\r\\n        emit AuthorityUpdated(_authority);\\r\\n    }\\r\\n\\r\\n    /* ========== \\\"MODIFIERS\\\" ========== */\\r\\n\\r\\n    modifier onlyGovernor {\\r\\n        _onlyGovernor();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyGuardian {\\r\\n        _onlyGuardian();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyPolicy {\\r\\n        _onlyPolicy();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyVault {\\r\\n        _onlyVault();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyRole(bytes32 _role){\\r\\n        _onlyRole(_role);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /* ========== GOV ONLY ========== */\\r\\n\\r\\n    function initializeAuthority(IAuthority _newAuthority) internal {\\r\\n        require(authority == IAuthority(address(0)), \\\"AUTHORITY_INITIALIZED\\\");\\r\\n        authority = _newAuthority;\\r\\n        emit AuthorityUpdated(_newAuthority);\\r\\n    }\\r\\n\\r\\n    function setAuthority(IAuthority _newAuthority) external {\\r\\n        _onlyGovernor();\\r\\n        authority = _newAuthority;\\r\\n        emit AuthorityUpdated(_newAuthority);\\r\\n    }\\r\\n\\r\\n    /* ========== INTERNAL CHECKS ========== */\\r\\n\\r\\n    function _onlyGovernor() internal view {\\r\\n        require(msg.sender == authority.governor(), \\\"UNAUTHORIZED\\\");\\r\\n    }\\r\\n\\r\\n    function _onlyGuardian() internal view {\\r\\n        require(msg.sender == authority.guardian(), \\\"UNAUTHORIZED\\\");\\r\\n    }\\r\\n\\r\\n    function _onlyPolicy() internal view {\\r\\n        require(msg.sender == authority.policy(), \\\"UNAUTHORIZED\\\");        \\r\\n    }\\r\\n\\r\\n    function _onlyVault() internal view {\\r\\n        require(msg.sender == authority.vault(), \\\"UNAUTHORIZED\\\");                \\r\\n    }\\r\\n\\r\\n    function _onlyRole(bytes32 _role) internal view {\\r\\n        require(authority.roles(msg.sender) == _role, \\\"UNAUTHORIZED\\\");\\r\\n    }\\r\\n\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x69a30ff5614ccb42137005d86252f6a9009c36785ab7a3c25e2c49a24ba5af5e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161099538038061099583398101604081905261002f91610201565b826001600160a01b03811661008b5760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f206164647265737360448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b0382166101335760405162461bcd60e51b815260206004820152601960248201527f4b6f6e6475782061646472657373206973206e6f7420736574000000000000006044820152606401610082565b600280546001600160a01b0380851661010002610100600160a81b03199092169190911790915581166101a85760405162461bcd60e51b815260206004820152601860248201527f5661756c742061646472657373206973206e6f742073657400000000000000006044820152606401610082565b600380546001600160a01b0319166001600160a01b039290921691909117905550506703782dace9d900006001556002805460ff19169055610244565b80516001600160a01b03811681146101fc57600080fd5b919050565b60008060006060848603121561021657600080fd5b61021f846101e5565b925061022d602085016101e5565b915061023b604085016101e5565b90509250925092565b610742806102536000396000f3fe6080604052600436106100bc5760003560e01c80637a9e5e4b11610074578063bf7e214f1161004e578063bf7e214f146101d6578063f0f44260146101f6578063fa3aa5091461021657600080fd5b80637a9e5e4b1461018057806391b7f5ed146101a0578063a035b1fe146101c057600080fd5b80633ca173ec116100a55780633ca173ec146100fe5780635c975abb1461011e57806361d027b31461014857600080fd5b806316c38b3c146100c157806326092b83146100e3575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004610688565b61023b565b005b6100eb610256565b6040519081526020015b60405180910390f35b34801561010a57600080fd5b506100e16101193660046106c9565b610440565b34801561012a57600080fd5b506002546101389060ff1681565b60405190151581526020016100f5565b34801561015457600080fd5b50600354610168906001600160a01b031681565b6040516001600160a01b0390911681526020016100f5565b34801561018c57600080fd5b506100e161019b3660046106c9565b610487565b3480156101ac57600080fd5b506100e16101bb3660046106e6565b6104f0565b3480156101cc57600080fd5b506100eb60015481565b3480156101e257600080fd5b50600054610168906001600160a01b031681565b34801561020257600080fd5b506100e16102113660046106c9565b6104fd565b34801561022257600080fd5b506002546101689061010090046001600160a01b031681565b610243610534565b6002805460ff1916911515919091179055565b60025460009060ff16156102b15760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064015b60405180910390fd5b61028a600260019054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b91906106ff565b106103785760405162461bcd60e51b815260206004820152601160248201527f4e6f206d6f7265204e465473206c65667400000000000000000000000000000060448201526064016102a8565b6001543410156103ca5760405162461bcd60e51b815260206004820152601360248201527f4e6f7420656e6f756768204554482073656e740000000000000000000000000060448201526064016102a8565b600360009054906101000a90046001600160a01b03166001600160a01b03166398ea5fca346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561041a57600080fd5b505af115801561042e573d6000803e3d6000fd5b505050505061043b61060b565b905090565b610448610534565b600280546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b61048f610534565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6104f8610534565b600155565b610505610534565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190610718565b6001600160a01b0316336001600160a01b0316146106095760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016102a8565b565b6002546040516340d097c360e01b815233600482015260009182916101009091046001600160a01b0316906340d097c3906024016020604051808303816000875af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068291906106ff565b92915050565b60006020828403121561069a57600080fd5b813580151581146106aa57600080fd5b9392505050565b6001600160a01b03811681146106c657600080fd5b50565b6000602082840312156106db57600080fd5b81356106aa816106b1565b6000602082840312156106f857600080fd5b5035919050565b60006020828403121561071157600080fd5b5051919050565b60006020828403121561072a57600080fd5b81516106aa816106b156fea164736f6c6343000810000a",
  "deployedBytecode": "0x6080604052600436106100bc5760003560e01c80637a9e5e4b11610074578063bf7e214f1161004e578063bf7e214f146101d6578063f0f44260146101f6578063fa3aa5091461021657600080fd5b80637a9e5e4b1461018057806391b7f5ed146101a0578063a035b1fe146101c057600080fd5b80633ca173ec116100a55780633ca173ec146100fe5780635c975abb1461011e57806361d027b31461014857600080fd5b806316c38b3c146100c157806326092b83146100e3575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004610688565b61023b565b005b6100eb610256565b6040519081526020015b60405180910390f35b34801561010a57600080fd5b506100e16101193660046106c9565b610440565b34801561012a57600080fd5b506002546101389060ff1681565b60405190151581526020016100f5565b34801561015457600080fd5b50600354610168906001600160a01b031681565b6040516001600160a01b0390911681526020016100f5565b34801561018c57600080fd5b506100e161019b3660046106c9565b610487565b3480156101ac57600080fd5b506100e16101bb3660046106e6565b6104f0565b3480156101cc57600080fd5b506100eb60015481565b3480156101e257600080fd5b50600054610168906001600160a01b031681565b34801561020257600080fd5b506100e16102113660046106c9565b6104fd565b34801561022257600080fd5b506002546101689061010090046001600160a01b031681565b610243610534565b6002805460ff1916911515919091179055565b60025460009060ff16156102b15760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064015b60405180910390fd5b61028a600260019054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610307573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032b91906106ff565b106103785760405162461bcd60e51b815260206004820152601160248201527f4e6f206d6f7265204e465473206c65667400000000000000000000000000000060448201526064016102a8565b6001543410156103ca5760405162461bcd60e51b815260206004820152601360248201527f4e6f7420656e6f756768204554482073656e740000000000000000000000000060448201526064016102a8565b600360009054906101000a90046001600160a01b03166001600160a01b03166398ea5fca346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561041a57600080fd5b505af115801561042e573d6000803e3d6000fd5b505050505061043b61060b565b905090565b610448610534565b600280546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b61048f610534565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6104f8610534565b600155565b610505610534565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190610718565b6001600160a01b0316336001600160a01b0316146106095760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016102a8565b565b6002546040516340d097c360e01b815233600482015260009182916101009091046001600160a01b0316906340d097c3906024016020604051808303816000875af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068291906106ff565b92915050565b60006020828403121561069a57600080fd5b813580151581146106aa57600080fd5b9392505050565b6001600160a01b03811681146106c657600080fd5b50565b6000602082840312156106db57600080fd5b81356106aa816106b1565b6000602082840312156106f857600080fd5b5035919050565b60006020828403121561071157600080fd5b5051919050565b60006020828403121561072a57600080fd5b81516106aa816106b156fea164736f6c6343000810000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9220,
        "contract": "contracts/Minter_Public.sol:MinterPublic",
        "label": "authority",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IAuthority)8737"
      },
      {
        "astId": 7322,
        "contract": "contracts/Minter_Public.sol:MinterPublic",
        "label": "price",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7324,
        "contract": "contracts/Minter_Public.sol:MinterPublic",
        "label": "paused",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 7327,
        "contract": "contracts/Minter_Public.sol:MinterPublic",
        "label": "konduxFounders",
        "offset": 1,
        "slot": "2",
        "type": "t_contract(IKonduxFounders)8855"
      },
      {
        "astId": 7330,
        "contract": "contracts/Minter_Public.sol:MinterPublic",
        "label": "treasury",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(ITreasury)9109"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAuthority)8737": {
        "encoding": "inplace",
        "label": "contract IAuthority",
        "numberOfBytes": "20"
      },
      "t_contract(IKonduxFounders)8855": {
        "encoding": "inplace",
        "label": "contract IKonduxFounders",
        "numberOfBytes": "20"
      },
      "t_contract(ITreasury)9109": {
        "encoding": "inplace",
        "label": "contract ITreasury",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}