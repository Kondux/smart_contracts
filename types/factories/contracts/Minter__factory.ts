/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Minter, MinterInterface } from "../../contracts/Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kondux",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kondux",
    outputs: [
      {
        internalType: "contract IKondux",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unsafeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161097a38038061097a83398101604081905261002f9161010b565b600080546001600160a01b0319166001600160a01b03841690811790915560405190815282907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b0381166100dd5760405162461bcd60e51b815260206004820152601960248201527f4b6f6e6475782061646472657373206973206e6f742073657400000000000000604482015260640160405180910390fd5b6001600160a01b03166080525061013e565b80516001600160a01b038116811461010657600080fd5b919050565b6000806040838503121561011e57600080fd5b610127836100ef565b9150610135602084016100ef565b90509250929050565b60805161081361016760003960008181610152015281816103ac015261062c01526108136000f3fe6080604052600436106100695760003560e01c806391b7f5ed1161004357806391b7f5ed146101d4578063a035b1fe146101f4578063bf7e214f1461020a57600080fd5b806369434b71146101405780637a9e5e4b1461019157806388c91f12146101b157600080fd5b3661013b5761009e6040518060400160405280600f81526020016e135a5b9d195c881c9958d95a5d9959608a1b81525061022a565b6100cf6040518060400160405280600f81526020016e135a5b9d195c881c9958d95a5d9959608a1b81525047610270565b6101006040518060400160405280600f81526020016e135a5b9d195c881c9958d95a5d9959608a1b81525034610270565b6101316040518060400160405280600f81526020016e135a5b9d195c881c9958d95a5d9959608a1b815250336102b9565b6101396102fe565b005b600080fd5b34801561014c57600080fd5b506101747f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019d57600080fd5b506101396101ac3660046106ae565b610421565b3480156101bd57600080fd5b506101c6610495565b604051908152602001610188565b3480156101e057600080fd5b506101396101ef3660046106d2565b6104a6565b34801561020057600080fd5b506101c660015481565b34801561021657600080fd5b50600054610174906001600160a01b031681565b61026d8160405160240161023e9190610738565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526104f2565b50565b6102b5828260405160240161028692919061074b565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526104f2565b5050565b6102b582826040516024016102cf92919061076d565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526104f2565b6001543410156103545760405162461bcd60e51b815260206004820152601160248201527f4e6f7420656e6f75676874206574686572000000000000000000000000000000604482015260640160405180910390fd5b6103976040518060400160405280600581526020017f5f6d696e740000000000000000000000000000000000000000000000000000008152503334600154610513565b604051631bfc324f60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906337f8649e906024016020604051808303816000875af11580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d9190610798565b610429610562565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6000806104a061060a565b92915050565b6104ae610562565b6104ed6040518060400160405280600881526020017f736574507269636500000000000000000000000000000000000000000000000081525082610270565b600155565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61055c8484848460405160240161052d94939291906107b1565b60408051601f198184030181529190526020810180516001600160e01b031663daa394bd60e01b1790526104f2565b50505050565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d791906107e9565b6001600160a01b0316336001600160a01b0316146106085760405163075fd2b160e01b815260040160405180910390fd5b565b604051631bfc324f60e11b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906337f8649e906024016020604051808303816000875af1158015610675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a09190610798565b6001600160a01b038116811461026d57600080fd5b6000602082840312156106c057600080fd5b81356106cb81610699565b9392505050565b6000602082840312156106e457600080fd5b5035919050565b6000815180845260005b81811015610711576020818501810151868301820152016106f5565b81811115610723576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006106cb60208301846106eb565b60408152600061075e60408301856106eb565b90508260208301529392505050565b60408152600061078060408301856106eb565b90506001600160a01b03831660208301529392505050565b6000602082840312156107aa57600080fd5b5051919050565b6080815260006107c460808301876106eb565b6001600160a01b03959095166020830152506040810192909252606090910152919050565b6000602082840312156107fb57600080fd5b81516106cb8161069956fea164736f6c634300080c000a";

type MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Minter__factory extends ContractFactory {
  constructor(...args: MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: string,
    _kondux: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Minter> {
    return super.deploy(
      _authority,
      _kondux,
      overrides || {}
    ) as Promise<Minter>;
  }
  override getDeployTransaction(
    _authority: string,
    _kondux: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, _kondux, overrides || {});
  }
  override attach(address: string): Minter {
    return super.attach(address) as Minter;
  }
  override connect(signer: Signer): Minter__factory {
    return super.connect(signer) as Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new utils.Interface(_abi) as MinterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Minter {
    return new Contract(address, _abi, signerOrProvider) as Minter;
  }
}
