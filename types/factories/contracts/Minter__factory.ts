/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Minter, MinterInterface } from "../../contracts/Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kondux",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kondux",
    outputs: [
      {
        internalType: "contract IKondux",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "setRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unsafeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516108e63803806108e683398101604081905261002f9161010b565b600080546001600160a01b0319166001600160a01b03841690811790915560405190815282907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b0381166100dd5760405162461bcd60e51b815260206004820152601960248201527f4b6f6e6475782061646472657373206973206e6f742073657400000000000000604482015260640160405180910390fd5b6001600160a01b03166080525061013e565b80516001600160a01b038116811461010657600080fd5b919050565b6000806040838503121561011e57600080fd5b610127836100ef565b9150610135602084016100ef565b90509250929050565b6080516107806101666000396000818160f30152818161025a015261049001526107806000f3fe60806040526004361061009a5760003560e01c806391b7f5ed11610069578063bf7e214f1161004e578063bf7e214f14610198578063dab5f340146101b8578063ebf0c717146101d857600080fd5b806391b7f5ed14610162578063a035b1fe1461018257600080fd5b8063372f657c146100ae57806369434b71146100e15780637a9e5e4b1461012d57806388c91f121461014d57600080fd5b366100a9576100a76101ee565b005b600080fd5b3480156100ba57600080fd5b506100ce6100c9366004610637565b6102e1565b6040519081526020015b60405180910390f35b3480156100ed57600080fd5b506101157f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d8565b34801561013957600080fd5b506100a76101483660046106c1565b6103b9565b34801561015957600080fd5b506100ce61042d565b34801561016e57600080fd5b506100a761017d3660046106e5565b61043e565b34801561018e57600080fd5b506100ce60015481565b3480156101a457600080fd5b50600054610115906001600160a01b031681565b3480156101c457600080fd5b506100a76101d33660046106e5565b61044b565b3480156101e457600080fd5b506100ce60025481565b6001543410156102455760405162461bcd60e51b815260206004820152601160248201527f4e6f7420656e6f7567687420657468657200000000000000000000000000000060448201526064015b60405180910390fd5b604051631bfc324f60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906337f8649e90602401602060405180830381600087803b1580156102a657600080fd5b505af11580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de91906106fe565b50565b6040516bffffffffffffffffffffffff193360601b166020820152600090819060340160405160208183030381529060405280519060200120905061035d848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506002549150849050610458565b6103a95760405162461bcd60e51b815260206004820152600f60248201527f496e636f72726563742070726f6f660000000000000000000000000000000000604482015260640161023c565b6103b161046e565b949350505050565b6103c161050c565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b60008061043861046e565b92915050565b61044661050c565b600155565b61045361050c565b600255565b60008261046585846105c3565b14949350505050565b604051631bfc324f60e11b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906337f8649e90602401602060405180830381600087803b1580156104d457600080fd5b505af11580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043891906106fe565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561055857600080fd5b505afa15801561056c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105909190610717565b6001600160a01b0316336001600160a01b0316146105c15760405163075fd2b160e01b815260040160405180910390fd5b565b600081815b845181101561062f5760008582815181106105e5576105e5610734565b6020026020010151905080831161060b576000838152602082905260409020925061061c565b600081815260208490526040902092505b50806106278161074a565b9150506105c8565b509392505050565b6000806020838503121561064a57600080fd5b823567ffffffffffffffff8082111561066257600080fd5b818501915085601f83011261067657600080fd5b81358181111561068557600080fd5b8660208260051b850101111561069a57600080fd5b60209290920196919550909350505050565b6001600160a01b03811681146102de57600080fd5b6000602082840312156106d357600080fd5b81356106de816106ac565b9392505050565b6000602082840312156106f757600080fd5b5035919050565b60006020828403121561071057600080fd5b5051919050565b60006020828403121561072957600080fd5b81516106de816106ac565b634e487b7160e01b600052603260045260246000fd5b600060001982141561076c57634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000809000a";

type MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Minter__factory extends ContractFactory {
  constructor(...args: MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: string,
    _kondux: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Minter> {
    return super.deploy(
      _authority,
      _kondux,
      overrides || {}
    ) as Promise<Minter>;
  }
  override getDeployTransaction(
    _authority: string,
    _kondux: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, _kondux, overrides || {});
  }
  override attach(address: string): Minter {
    return super.attach(address) as Minter;
  }
  override connect(signer: Signer): Minter__factory {
    return super.connect(signer) as Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new utils.Interface(_abi) as MinterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Minter {
    return new Contract(address, _abi, signerOrProvider) as Minter;
  }
}
