/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Minter, MinterInterface } from "../../contracts/Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kondux",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kondux",
    outputs: [
      {
        internalType: "contract IKondux",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "setRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unsafeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610c25380380610c2583398101604081905261002f9161010b565b600080546001600160a01b0319166001600160a01b03841690811790915560405190815282907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b0381166100dd5760405162461bcd60e51b815260206004820152601960248201527f4b6f6e6475782061646472657373206973206e6f742073657400000000000000604482015260640160405180910390fd5b6001600160a01b03166080525061013e565b80516001600160a01b038116811461010657600080fd5b919050565b6000806040838503121561011e57600080fd5b610127836100ef565b9150610135602084016100ef565b90509250929050565b608051610abe610167600039600081816101b60152818161043401526107070152610abe6000f3fe60806040526004361061009a5760003560e01c806391b7f5ed11610069578063bf7e214f1161004e578063bf7e214f1461025b578063dab5f3401461027b578063ebf0c7171461029b57600080fd5b806391b7f5ed14610225578063a035b1fe1461024557600080fd5b8063372f657c1461017157806369434b71146101a45780637a9e5e4b146101f057806388c91f121461021057600080fd5b3661016c576100cf6040518060400160405280600f81526020016e135a5b9d195c881c9958d95a5d9959608a1b8152506102b1565b6101006040518060400160405280600f81526020016e135a5b9d195c881c9958d95a5d9959608a1b815250476102f7565b6101316040518060400160405280600f81526020016e135a5b9d195c881c9958d95a5d9959608a1b815250346102f7565b6101626040518060400160405280600f81526020016e135a5b9d195c881c9958d95a5d9959608a1b81525033610340565b61016a610385565b005b600080fd5b34801561017d57600080fd5b5061019161018c366004610890565b6104a9565b6040519081526020015b60405180910390f35b3480156101b057600080fd5b506101d87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161019b565b3480156101fc57600080fd5b5061016a61020b36600461091a565b610581565b34801561021c57600080fd5b506101916105f5565b34801561023157600080fd5b5061016a61024036600461093e565b610606565b34801561025157600080fd5b5061019160015481565b34801561026757600080fd5b506000546101d8906001600160a01b031681565b34801561028757600080fd5b5061016a61029636600461093e565b610652565b3480156102a757600080fd5b5061019160025481565b6102f4816040516024016102c591906109a4565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261065f565b50565b61033c828260405160240161030d9291906109b7565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261065f565b5050565b61033c82826040516024016103569291906109d9565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261065f565b6001543410156103dc5760405162461bcd60e51b815260206004820152601160248201527f4e6f7420656e6f7567687420657468657200000000000000000000000000000060448201526064015b60405180910390fd5b61041f6040518060400160405280600581526020017f5f6d696e740000000000000000000000000000000000000000000000000000008152503334600154610680565b604051631bfc324f60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906337f8649e906024016020604051808303816000875af1158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610a04565b6040516bffffffffffffffffffffffff193360601b16602082015260009081906034016040516020818303038152906040528051906020012090506105258484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060025491508490506106cf565b6105715760405162461bcd60e51b815260206004820152600f60248201527f496e636f72726563742070726f6f66000000000000000000000000000000000060448201526064016103d3565b6105796106e5565b949350505050565b610589610774565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6000806106006106e5565b92915050565b61060e610774565b61064d6040518060400160405280600881526020017f7365745072696365000000000000000000000000000000000000000000000000815250826102f7565b600155565b61065a610774565b600255565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6106c98484848460405160240161069a9493929190610a1d565b60408051601f198184030181529190526020810180516001600160e01b031663daa394bd60e01b17905261065f565b50505050565b6000826106dc858461081c565b14949350505050565b604051631bfc324f60e11b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906337f8649e906024016020604051808303816000875af1158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610a04565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e99190610a55565b6001600160a01b0316336001600160a01b03161461081a5760405163075fd2b160e01b815260040160405180910390fd5b565b600081815b845181101561088857600085828151811061083e5761083e610a72565b602002602001015190508083116108645760008381526020829052604090209250610875565b600081815260208490526040902092505b508061088081610a88565b915050610821565b509392505050565b600080602083850312156108a357600080fd5b823567ffffffffffffffff808211156108bb57600080fd5b818501915085601f8301126108cf57600080fd5b8135818111156108de57600080fd5b8660208260051b85010111156108f357600080fd5b60209290920196919550909350505050565b6001600160a01b03811681146102f457600080fd5b60006020828403121561092c57600080fd5b813561093781610905565b9392505050565b60006020828403121561095057600080fd5b5035919050565b6000815180845260005b8181101561097d57602081850181015186830182015201610961565b8181111561098f576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006109376020830184610957565b6040815260006109ca6040830185610957565b90508260208301529392505050565b6040815260006109ec6040830185610957565b90506001600160a01b03831660208301529392505050565b600060208284031215610a1657600080fd5b5051919050565b608081526000610a306080830187610957565b6001600160a01b03959095166020830152506040810192909252606090910152919050565b600060208284031215610a6757600080fd5b815161093781610905565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610aaa57634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c634300080c000a";

type MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Minter__factory extends ContractFactory {
  constructor(...args: MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: string,
    _kondux: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Minter> {
    return super.deploy(
      _authority,
      _kondux,
      overrides || {}
    ) as Promise<Minter>;
  }
  override getDeployTransaction(
    _authority: string,
    _kondux: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, _kondux, overrides || {});
  }
  override attach(address: string): Minter {
    return super.attach(address) as Minter;
  }
  override connect(signer: Signer): Minter__factory {
    return super.connect(signer) as Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new utils.Interface(_abi) as MinterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Minter {
    return new Contract(address, _abi, signerOrProvider) as Minter;
  }
}
