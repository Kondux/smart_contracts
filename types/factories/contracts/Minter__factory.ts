/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Minter, MinterInterface } from "../../contracts/Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kondux",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kondux",
    outputs: [
      {
        internalType: "contract IKondux",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "setRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unsafeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610a5c380380610a5c83398101604081905261002f91610111565b600080546001600160a01b0319166001600160a01b03851690811790915560405190815283907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b0382166100dd5760405162461bcd60e51b815260206004820152601960248201527f4b6f6e6475782061646472657373206973206e6f742073657400000000000000604482015260640160405180910390fd5b6001600160a01b039182166080521660a05250610154565b80516001600160a01b038116811461010c57600080fd5b919050565b60008060006060848603121561012657600080fd5b61012f846100f5565b925061013d602085016100f5565b915061014b604085016100f5565b90509250925092565b60805160a0516108c86101946000396000818160cf0152818161018701526103290152600081816101d3015281816103a001526105d801526108c86000f3fe6080604052600436106100b55760003560e01c806391b7f5ed11610069578063bf7e214f1161004e578063bf7e214f14610260578063dab5f34014610280578063ebf0c717146102a057600080fd5b806391b7f5ed1461022a578063a035b1fe1461024a57600080fd5b806369434b711161009a57806369434b71146101c15780637a9e5e4b146101f557806388c91f121461021557600080fd5b8063372f657c1461014257806361d027b31461017557600080fd5b3661013d576040516326839f1760e01b81523460048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906326839f1790602401600060405180830381600087803b15801561011b57600080fd5b505af115801561012f573d6000803e3d6000fd5b5050505061013b6102b6565b005b600080fd5b34801561014e57600080fd5b5061016261015d36600461077f565b610429565b6040519081526020015b60405180910390f35b34801561018157600080fd5b506101a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161016c565b3480156101cd57600080fd5b506101a97f000000000000000000000000000000000000000000000000000000000000000081565b34801561020157600080fd5b5061013b610210366004610809565b610501565b34801561022157600080fd5b50610162610575565b34801561023657600080fd5b5061013b61024536600461082d565b610586565b34801561025657600080fd5b5061016260015481565b34801561026c57600080fd5b506000546101a9906001600160a01b031681565b34801561028c57600080fd5b5061013b61029b36600461082d565b610593565b3480156102ac57600080fd5b5061016260025481565b60015434101561030d5760405162461bcd60e51b815260206004820152601160248201527f4e6f7420656e6f7567687420657468657200000000000000000000000000000060448201526064015b60405180910390fd5b604051636e553f6560e01b8152346004820152600060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636e553f6590604401600060405180830381600087803b15801561037557600080fd5b505af1158015610389573d6000803e3d6000fd5b5050604051631bfc324f60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692506337f8649e9150602401602060405180830381600087803b1580156103ee57600080fd5b505af1158015610402573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104269190610846565b50565b6040516bffffffffffffffffffffffff193360601b16602082015260009081906034016040516020818303038152906040528051906020012090506104a58484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060025491508490506105a0565b6104f15760405162461bcd60e51b815260206004820152600f60248201527f496e636f72726563742070726f6f6600000000000000000000000000000000006044820152606401610304565b6104f96105b6565b949350505050565b610509610654565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6000806105806105b6565b92915050565b61058e610654565b600155565b61059b610654565b600255565b6000826105ad858461070b565b14949350505050565b604051631bfc324f60e11b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906337f8649e90602401602060405180830381600087803b15801561061c57600080fd5b505af1158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105809190610846565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b1580156106a057600080fd5b505afa1580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d8919061085f565b6001600160a01b0316336001600160a01b0316146107095760405163075fd2b160e01b815260040160405180910390fd5b565b600081815b845181101561077757600085828151811061072d5761072d61087c565b602002602001015190508083116107535760008381526020829052604090209250610764565b600081815260208490526040902092505b508061076f81610892565b915050610710565b509392505050565b6000806020838503121561079257600080fd5b823567ffffffffffffffff808211156107aa57600080fd5b818501915085601f8301126107be57600080fd5b8135818111156107cd57600080fd5b8660208260051b85010111156107e257600080fd5b60209290920196919550909350505050565b6001600160a01b038116811461042657600080fd5b60006020828403121561081b57600080fd5b8135610826816107f4565b9392505050565b60006020828403121561083f57600080fd5b5035919050565b60006020828403121561085857600080fd5b5051919050565b60006020828403121561087157600080fd5b8151610826816107f4565b634e487b7160e01b600052603260045260246000fd5b60006000198214156108b457634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000809000a";

type MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Minter__factory extends ContractFactory {
  constructor(...args: MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: string,
    _kondux: string,
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Minter> {
    return super.deploy(
      _authority,
      _kondux,
      _vault,
      overrides || {}
    ) as Promise<Minter>;
  }
  override getDeployTransaction(
    _authority: string,
    _kondux: string,
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _kondux,
      _vault,
      overrides || {}
    );
  }
  override attach(address: string): Minter {
    return super.attach(address) as Minter;
  }
  override connect(signer: Signer): Minter__factory {
    return super.connect(signer) as Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterInterface {
    return new utils.Interface(_abi) as MinterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Minter {
    return new Contract(address, _abi, signerOrProvider) as Minter;
  }
}
