/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KonduxFounders,
  KonduxFoundersInterface,
} from "../../../contracts/Kondux_Fouders.sol/KonduxFounders";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint96",
        name: "denominator",
        type: "uint96",
      },
    ],
    name: "DenominatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "automaticMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_denominator",
        type: "uint96",
      },
    ],
    name: "changeDenominator",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "denominator",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setTokenRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b6838038062002b68833981016040819052620000349162000164565b806040518060400160405280600f81526020016e4b6f6e64757820466f756e6465727360881b815250604051806040016040528060058152602001640cc969c88b60db1b81525081600290816200008c91906200023b565b5060036200009b82826200023b565b5050600c805460ff19169055506001600160a01b038116620001035760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f2061646472657373604482015260640160405180910390fd5b600c8054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1505062000307565b6000602082840312156200017757600080fd5b81516001600160a01b03811681146200018f57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001c157607f821691505b602082108103620001e257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023657600081815260208120601f850160051c81016020861015620002115750805b601f850160051c820191505b8181101562000232578281556001016200021d565b5050505b505050565b81516001600160401b0381111562000257576200025762000196565b6200026f81620002688454620001ac565b84620001e8565b602080601f831160018114620002a757600084156200028e5750858301515b600019600386901b1c1916600185901b17855562000232565b600085815260208120601f198616915b82811015620002d857888601518255948401946001909101908401620002b7565b5085821015620002f75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61285180620003176000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80635944c7531161010f57806396ce0795116100a2578063bf7e214f11610071578063bf7e214f1461043c578063c87b56dd14610454578063d539139314610467578063e985e9c51461048e57600080fd5b806396ce0795146103d8578063a22cb46514610403578063ab51e23a14610416578063b88d4fde1461042957600080fd5b806370a08231116100de57806370a08231146103a25780637a9e5e4b146103b55780638456cb59146103c857806395d89b41146103d057600080fd5b80635944c753146103695780635c975abb1461037c5780636352211e146103875780636c0360eb1461039a57600080fd5b80632f745c591161018757806342842e0e1161015657806342842e0e1461031d57806342966c68146103305780634f6ccce71461034357806355f804b31461035657600080fd5b80632f745c59146102dc57806337f8649e146102ef5780633f4ba83a1461030257806340d097c31461030a57600080fd5b8063095ea7b3116101c3578063095ea7b31461027257806318160ddd1461028557806323b872dd146102975780632a55205a146102aa57600080fd5b806301ffc9a7146101f557806304634d8d1461021d57806306fdde0314610232578063081812fc14610247575b600080fd5b6102086102033660046120bc565b6104ca565b60405190151581526020015b60405180910390f35b61023061022b36600461210c565b6104db565b005b61023a6104f1565b6040516102149190612191565b61025a6102553660046121a4565b610583565b6040516001600160a01b039091168152602001610214565b6102306102803660046121bd565b6105aa565b600a545b604051908152602001610214565b6102306102a53660046121e9565b6106c4565b6102bd6102b836600461222a565b61073d565b604080516001600160a01b039093168352602083019190915201610214565b6102896102ea3660046121bd565b6107e9565b6102896102fd36600461224c565b610891565b6102306108eb565b61023061031836600461224c565b6108fd565b61023061032b3660046121e9565b61094c565b61023061033e3660046121a4565b610967565b6102896103513660046121a4565b6109df565b61023a6103643660046122f5565b610a83565b61023061037736600461233e565b610b65565b600c5460ff16610208565b61025a6103953660046121a4565b610b78565b61023a610bdd565b6102896103b036600461224c565b610c6b565b6102306103c336600461224c565b610d05565b610230610d80565b61023a610d90565b600e546103eb906001600160601b031681565b6040516001600160601b039091168152602001610214565b61023061041136600461237c565b610d9f565b6103eb6104243660046123ba565b610daa565b6102306104373660046123d5565b610e1b565b600c5461025a9061010090046001600160a01b031681565b61023a6104623660046121a4565b610e9a565b6102897f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61020861049c366004612455565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006104d582610f83565b92915050565b6104e3610f8e565b6104ed8282611054565b5050565b60606002805461050090612483565b80601f016020809104026020016040519081016040528092919081815260200182805461052c90612483565b80156105795780601f1061054e57610100808354040283529160200191610579565b820191906000526020600020905b81548152906001019060200180831161055c57829003601f168201915b5050505050905090565b600061058e82611151565b506000908152600660205260409020546001600160a01b031690565b60006105b582610b78565b9050806001600160a01b0316836001600160a01b0316036106275760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106435750610643813361049c565b6106b55760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161061e565b6106bf83836111b5565b505050565b6106cf335b82611223565b6107325760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161061e565b6106bf8383836112a2565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916107b25750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b6020810151600090612710906107d1906001600160601b0316876124cd565b6107db9190612502565b915196919550909350505050565b60006107f483610c6b565b82106108685760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161061e565b506001600160a01b03919091166000908152600860209081526040808320938352929052205490565b60007f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66108bd81611461565b60006108c8600f5490565b90506108d8600f80546001019055565b6108e2848261150e565b91505b50919050565b6108f3610f8e565b6108fb611528565b565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661092781611461565b6000610932600f5490565b9050610942600f80546001019055565b6106bf838261150e565b6106bf83838360405180602001604052806000815250610e1b565b610970336106c9565b6109d35760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161061e565b6109dc8161157a565b50565b60006109ea600a5490565b8210610a5e5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161061e565b600a8281548110610a7157610a71612516565b90600052602060002001549050919050565b6060610a8d610f8e565b600d610a99838261257a565b507f5411e8ebf1636d9e83d5fc4900bf80cbac82e8790da2a4c94db4895e889eedf6600d604051610aca919061263a565b60405180910390a1600d8054610adf90612483565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0b90612483565b8015610b585780601f10610b2d57610100808354040283529160200191610b58565b820191906000526020600020905b815481529060010190602001808311610b3b57829003601f168201915b505050505090505b919050565b610b6d610f8e565b6106bf838383611594565b6000818152600460205260408120546001600160a01b0316806104d55760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161061e565b600d8054610bea90612483565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1690612483565b8015610c635780601f10610c3857610100808354040283529160200191610c63565b820191906000526020600020905b815481529060010190602001808311610c4657829003601f168201915b505050505081565b60006001600160a01b038216610ce95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161061e565b506001600160a01b031660009081526005602052604090205490565b610d0d610f8e565b600c80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b038416908102919091179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b610d88610f8e565b6108fb6116a2565b60606003805461050090612483565b6104ed3383836116df565b6000610db4610f8e565b600e80546bffffffffffffffffffffffff19166001600160601b0384169081179091556040519081527f601b85aa9305dbcfbfc81aa2d4b5126c1ce24afdd1bad47d6880e5b6df081f579060200160405180910390a15050600e546001600160601b031690565b610e253383611223565b610e885760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161061e565b610e94848484846117ad565b50505050565b6000818152600460205260409020546060906001600160a01b0316610f275760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161061e565b6000600d8054610f3690612483565b905011610f5257604051806020016040528060008152506104d5565b600d610f5d8361182b565b604051602001610f6e9291906126c5565b60405160208183030381529060405292915050565b60006104d582611944565b600c60019054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fe1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611005919061274c565b6001600160a01b0316336001600160a01b0316146108fb5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161061e565b6127106001600160601b03821611156110c25760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b606482015260840161061e565b6001600160a01b0382166111185760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c696420726563656976657200000000000000604482015260640161061e565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600055565b6000818152600460205260409020546001600160a01b03166109dc5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161061e565b600081815260066020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111ea82610b78565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061122f83610b78565b9050806001600160a01b0316846001600160a01b0316148061127657506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b8061129a5750836001600160a01b031661128f84610583565b6001600160a01b0316145b949350505050565b826001600160a01b03166112b582610b78565b6001600160a01b0316146113315760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161061e565b6001600160a01b0382166113935760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161061e565b61139e838383611969565b6113a96000826111b5565b6001600160a01b03831660009081526005602052604081208054600192906113d2908490612769565b90915550506001600160a01b038216600090815260056020526040812080546001929061140090849061277c565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600c54604051634c9ba32160e11b8152336004820152829161010090046001600160a01b031690639937464290602401602060405180830381865afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d2919061278f565b146109dc5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161061e565b6104ed82826040518060200160405280600081525061197c565b6115306119fa565b600c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61158381611a4c565b600090815260016020526040812055565b6127106001600160601b03821611156116025760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b606482015260840161061e565b6001600160a01b0382166116585760405162461bcd60e51b815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d65746572730000000000604482015260640161061e565b6040805180820182526001600160a01b0393841681526001600160601b0392831660208083019182526000968752600190529190942093519051909116600160a01b029116179055565b6116aa611a55565b600c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861155d3390565b816001600160a01b0316836001600160a01b0316036117405760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161061e565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117b88484846112a2565b6117c484848484611aa8565b610e945760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161061e565b6060816000036118525750506040805180820190915260018152600360fc1b602082015290565b8160005b811561187c5780611866816127a8565b91506118759050600a83612502565b9150611856565b60008167ffffffffffffffff81111561189757611897612269565b6040519080825280601f01601f1916602001820160405280156118c1576020820181803683370190505b5090505b841561129a576118d6600183612769565b91506118e3600a866127c1565b6118ee90603061277c565b60f81b81838151811061190357611903612516565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061193d600a86612502565b94506118c5565b60006001600160e01b0319821663780e9d6360e01b14806104d557506104d582611bf4565b611971611a55565b6106bf838383611c34565b6119868383611cec565b6119936000848484611aa8565b6106bf5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161061e565b600c5460ff166108fb5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161061e565b61158381611e3a565b600c5460ff16156108fb5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161061e565b60006001600160a01b0384163b15611be957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611aec9033908990889088906004016127d5565b6020604051808303816000875af1925050508015611b27575060408051601f3d908101601f19168201909252611b2491810190612811565b60015b611bcf573d808015611b55576040519150601f19603f3d011682016040523d82523d6000602084013e611b5a565b606091505b508051600003611bc75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161061e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061129a565b506001949350505050565b60006001600160e01b031982166380ac58cd60e01b1480611c2557506001600160e01b03198216635b5e139f60e01b145b806104d557506104d582611ee1565b6001600160a01b038316611c8f57611c8a81600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b611cb2565b816001600160a01b0316836001600160a01b031614611cb257611cb28382611f16565b6001600160a01b038216611cc9576106bf81611fb3565b826001600160a01b0316826001600160a01b0316146106bf576106bf8282612062565b6001600160a01b038216611d425760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161061e565b6000818152600460205260409020546001600160a01b031615611da75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161061e565b611db360008383611969565b6001600160a01b0382166000908152600560205260408120805460019290611ddc90849061277c565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611e4582610b78565b9050611e5381600084611969565b611e5e6000836111b5565b6001600160a01b0381166000908152600560205260408120805460019290611e87908490612769565b909155505060008281526004602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60006001600160e01b0319821663152a902d60e11b14806104d557506301ffc9a760e01b6001600160e01b03198316146104d5565b60006001611f2384610c6b565b611f2d9190612769565b600083815260096020526040902054909150808214611f80576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a54600090611fc590600190612769565b6000838152600b6020526040812054600a8054939450909284908110611fed57611fed612516565b9060005260206000200154905080600a838154811061200e5761200e612516565b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a8054806120465761204661282e565b6001900381819060005260206000200160009055905550505050565b600061206d83610c6b565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b6001600160e01b0319811681146109dc57600080fd5b6000602082840312156120ce57600080fd5b81356120d9816120a6565b9392505050565b6001600160a01b03811681146109dc57600080fd5b80356001600160601b0381168114610b6057600080fd5b6000806040838503121561211f57600080fd5b823561212a816120e0565b9150612138602084016120f5565b90509250929050565b60005b8381101561215c578181015183820152602001612144565b50506000910152565b6000815180845261217d816020860160208601612141565b601f01601f19169290920160200192915050565b6020815260006120d96020830184612165565b6000602082840312156121b657600080fd5b5035919050565b600080604083850312156121d057600080fd5b82356121db816120e0565b946020939093013593505050565b6000806000606084860312156121fe57600080fd5b8335612209816120e0565b92506020840135612219816120e0565b929592945050506040919091013590565b6000806040838503121561223d57600080fd5b50508035926020909101359150565b60006020828403121561225e57600080fd5b81356120d9816120e0565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561229a5761229a612269565b604051601f8501601f19908116603f011681019082821181831017156122c2576122c2612269565b816040528093508581528686860111156122db57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561230757600080fd5b813567ffffffffffffffff81111561231e57600080fd5b8201601f8101841361232f57600080fd5b61129a8482356020840161227f565b60008060006060848603121561235357600080fd5b833592506020840135612365816120e0565b9150612373604085016120f5565b90509250925092565b6000806040838503121561238f57600080fd5b823561239a816120e0565b9150602083013580151581146123af57600080fd5b809150509250929050565b6000602082840312156123cc57600080fd5b6120d9826120f5565b600080600080608085870312156123eb57600080fd5b84356123f6816120e0565b93506020850135612406816120e0565b925060408501359150606085013567ffffffffffffffff81111561242957600080fd5b8501601f8101871361243a57600080fd5b6124498782356020840161227f565b91505092959194509250565b6000806040838503121561246857600080fd5b8235612473816120e0565b915060208301356123af816120e0565b600181811c9082168061249757607f821691505b6020821081036108e557634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156124e7576124e76124b7565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612511576125116124ec565b500490565b634e487b7160e01b600052603260045260246000fd5b601f8211156106bf57600081815260208120601f850160051c810160208610156125535750805b601f850160051c820191505b818110156125725782815560010161255f565b505050505050565b815167ffffffffffffffff81111561259457612594612269565b6125a8816125a28454612483565b8461252c565b602080601f8311600181146125dd57600084156125c55750858301515b600019600386901b1c1916600185901b178555612572565b600085815260208120601f198616915b8281101561260c578886015182559484019460019091019084016125ed565b508582101561262a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083526000845461264e81612483565b8084870152604060018084166000811461266f5760018114612689576126b7565b60ff1985168984015283151560051b8901830195506126b7565b896000528660002060005b858110156126af5781548b8201860152908301908801612694565b8a0184019650505b509398975050505050505050565b60008084546126d381612483565b600182811680156126eb57600181146127005761272f565b60ff198416875282151583028701945061272f565b8860005260208060002060005b858110156127265781548a82015290840190820161270d565b50505082870194505b505050508351612743818360208801612141565b01949350505050565b60006020828403121561275e57600080fd5b81516120d9816120e0565b818103818111156104d5576104d56124b7565b808201808211156104d5576104d56124b7565b6000602082840312156127a157600080fd5b5051919050565b6000600182016127ba576127ba6124b7565b5060010190565b6000826127d0576127d06124ec565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526128076080830184612165565b9695505050505050565b60006020828403121561282357600080fd5b81516120d9816120a6565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000810000a";

type KonduxFoundersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KonduxFoundersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KonduxFounders__factory extends ContractFactory {
  constructor(...args: KonduxFoundersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KonduxFounders> {
    return super.deploy(_authority, overrides || {}) as Promise<KonduxFounders>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, overrides || {});
  }
  override attach(address: string): KonduxFounders {
    return super.attach(address) as KonduxFounders;
  }
  override connect(signer: Signer): KonduxFounders__factory {
    return super.connect(signer) as KonduxFounders__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KonduxFoundersInterface {
    return new utils.Interface(_abi) as KonduxFoundersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KonduxFounders {
    return new Contract(address, _abi, signerOrProvider) as KonduxFounders;
  }
}
