/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KonduxERC721,
  KonduxERC721Interface,
} from "../../../contracts/tests/KonduxERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600b553480156200001657600080fd5b506040518060400160405280600c81526020016b4b6f6e64757845524337323160a01b8152506040518060400160405280600c81526020016b4b6f6e64757845524337323160a01b8152506200007b62000075620000a160201b60201c565b620000a5565b60016200008983826200019a565b5060026200009882826200019a565b50505062000266565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012057607f821691505b6020821081036200014157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019557600081815260208120601f850160051c81016020861015620001705750805b601f850160051c820191505b8181101562000191578281556001016200017c565b5050505b505050565b81516001600160401b03811115620001b657620001b6620000f5565b620001ce81620001c784546200010b565b8462000147565b602080601f831160018114620002065760008415620001ed5750858301515b600019600386901b1c1916600185901b17855562000191565b600085815260208120601f198616915b82811015620002375788860151825594840194600190910190840162000216565b5085821015620002565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b3180620002766000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c806370a08231116100cd578063b88d4fde11610081578063de5f72fd11610066578063de5f72fd146102cc578063e985e9c5146102d4578063f2fde38b1461031057600080fd5b8063b88d4fde146102a6578063c87b56dd146102b957600080fd5b80638da5cb5b116100b25780638da5cb5b1461027a57806395d89b411461028b578063a22cb4651461029357600080fd5b806370a082311461025f578063715018a61461027257600080fd5b806323b872dd1161012457806342842e0e1161010957806342842e0e146102265780634f6ccce7146102395780636352211e1461024c57600080fd5b806323b872dd146102005780632f745c591461021357600080fd5b8063081812fc11610155578063081812fc146101ae578063095ea7b3146101d957806318160ddd146101ee57600080fd5b806301ffc9a71461017157806306fdde0314610199575b600080fd5b61018461017f36600461174a565b610323565b60405190151581526020015b60405180910390f35b6101a161034e565b60405161019091906117b7565b6101c16101bc3660046117ca565b6103e0565b6040516001600160a01b039091168152602001610190565b6101ec6101e73660046117ff565b610407565b005b6009545b604051908152602001610190565b6101ec61020e366004611829565b610521565b6101f26102213660046117ff565b610598565b6101ec610234366004611829565b610640565b6101f26102473660046117ca565b61065b565b6101c161025a3660046117ca565b6106ff565b6101f261026d366004611865565b610764565b6101ec6107fe565b6000546001600160a01b03166101c1565b6101a1610812565b6101ec6102a1366004611880565b610821565b6101ec6102b43660046118d2565b610830565b6101a16102c73660046117ca565b6108ae565b6101ec610922565b6101846102e23660046119ae565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6101ec61031e366004611865565b610943565b60006001600160e01b0319821663780e9d6360e01b14806103485750610348826109d3565b92915050565b60606001805461035d906119e1565b80601f0160208091040260200160405190810160405280929190818152602001828054610389906119e1565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050905090565b60006103eb82610a23565b506000908152600560205260409020546001600160a01b031690565b6000610412826106ff565b9050806001600160a01b0316836001600160a01b0316036104845760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104a057506104a081336102e2565b6105125760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161047b565b61051c8383610a87565b505050565b61052b3382610af5565b61058d5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161047b565b61051c838383610b74565b60006105a383610764565b82106106175760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161047b565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b61051c83838360405180602001604052806000815250610830565b600061066660095490565b82106106da5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161047b565b600982815481106106ed576106ed611a1b565b90600052602060002001549050919050565b6000818152600360205260408120546001600160a01b0316806103485760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161047b565b60006001600160a01b0382166107e25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161047b565b506001600160a01b031660009081526004602052604090205490565b610806610d61565b6108106000610dbb565b565b60606002805461035d906119e1565b61082c338383610e0b565b5050565b61083a3383610af5565b61089c5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161047b565b6108a884848484610ed9565b50505050565b60606108b982610a23565b60006108d060408051602081019091526000815290565b905060008151116108f0576040518060200160405280600081525061091b565b806108fa84610f62565b60405160200161090b929190611a31565b6040516020818303038152906040525b9392505050565b600b805490600061093283611a76565b919050555061081033600b54611002565b61094b610d61565b6001600160a01b0381166109c75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161047b565b6109d081610dbb565b50565b60006001600160e01b031982166380ac58cd60e01b1480610a0457506001600160e01b03198216635b5e139f60e01b145b8061034857506301ffc9a760e01b6001600160e01b0319831614610348565b6000818152600360205260409020546001600160a01b03166109d05760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161047b565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610abc826106ff565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b01836106ff565b9050806001600160a01b0316846001600160a01b03161480610b4857506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610b6c5750836001600160a01b0316610b61846103e0565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b87826106ff565b6001600160a01b031614610beb5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161047b565b6001600160a01b038216610c4d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161047b565b610c5a838383600161119b565b826001600160a01b0316610c6d826106ff565b6001600160a01b031614610cd15760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161047b565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000546001600160a01b031633146108105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b031603610e6c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161047b565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ee4848484610b74565b610ef0848484846112e3565b6108a85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161047b565b60606000610f6f8361143a565b600101905060008167ffffffffffffffff811115610f8f57610f8f6118bc565b6040519080825280601f01601f191660200182016040528015610fb9576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610fc357509392505050565b6001600160a01b0382166110585760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161047b565b6000818152600360205260409020546001600160a01b0316156110bd5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161047b565b6110cb60008383600161119b565b6000818152600360205260409020546001600160a01b0316156111305760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161047b565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6111a78484848461151c565b600181111561121e5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f727465640000000000000000000000606482015260840161047b565b816001600160a01b03851661127a5761127581600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b61129d565b836001600160a01b0316856001600160a01b03161461129d5761129d85826115a4565b6001600160a01b0384166112b9576112b481611641565b6112dc565b846001600160a01b0316846001600160a01b0316146112dc576112dc84826116f0565b5050505050565b60006001600160a01b0384163b1561142f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611327903390899088908890600401611a8f565b6020604051808303816000875af1925050508015611362575060408051601f3d908101601f1916820190925261135f91810190611acb565b60015b611415573d808015611390576040519150601f19603f3d011682016040523d82523d6000602084013e611395565b606091505b50805160000361140d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161047b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b6c565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611483577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106114af576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106114cd57662386f26fc10000830492506010015b6305f5e10083106114e5576305f5e100830492506008015b61271083106114f957612710830492506004015b6064831061150b576064830492506002015b600a83106103485760010192915050565b60018111156108a8576001600160a01b03841615611562576001600160a01b0384166000908152600460205260408120805483929061155c908490611ae8565b90915550505b6001600160a01b038316156108a8576001600160a01b03831660009081526004602052604081208054839290611599908490611afb565b909155505050505050565b600060016115b184610764565b6115bb9190611ae8565b60008381526008602052604090205490915080821461160e576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061165390600190611ae8565b6000838152600a60205260408120546009805493945090928490811061167b5761167b611a1b565b90600052602060002001549050806009838154811061169c5761169c611a1b565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806116d4576116d4611b0e565b6001900381819060005260206000200160009055905550505050565b60006116fb83610764565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160e01b0319811681146109d057600080fd5b60006020828403121561175c57600080fd5b813561091b81611734565b60005b8381101561178257818101518382015260200161176a565b50506000910152565b600081518084526117a3816020860160208601611767565b601f01601f19169290920160200192915050565b60208152600061091b602083018461178b565b6000602082840312156117dc57600080fd5b5035919050565b80356001600160a01b03811681146117fa57600080fd5b919050565b6000806040838503121561181257600080fd5b61181b836117e3565b946020939093013593505050565b60008060006060848603121561183e57600080fd5b611847846117e3565b9250611855602085016117e3565b9150604084013590509250925092565b60006020828403121561187757600080fd5b61091b826117e3565b6000806040838503121561189357600080fd5b61189c836117e3565b9150602083013580151581146118b157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156118e857600080fd5b6118f1856117e3565b93506118ff602086016117e3565b925060408501359150606085013567ffffffffffffffff8082111561192357600080fd5b818701915087601f83011261193757600080fd5b813581811115611949576119496118bc565b604051601f8201601f19908116603f01168101908382118183101715611971576119716118bc565b816040528281528a602084870101111561198a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156119c157600080fd5b6119ca836117e3565b91506119d8602084016117e3565b90509250929050565b600181811c908216806119f557607f821691505b602082108103611a1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60008351611a43818460208801611767565b835190830190611a57818360208801611767565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611a8857611a88611a60565b5060010190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611ac1608083018461178b565b9695505050505050565b600060208284031215611add57600080fd5b815161091b81611734565b8181038181111561034857610348611a60565b8082018082111561034857610348611a60565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000810000a";

type KonduxERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KonduxERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KonduxERC721__factory extends ContractFactory {
  constructor(...args: KonduxERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KonduxERC721> {
    return super.deploy(overrides || {}) as Promise<KonduxERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KonduxERC721 {
    return super.attach(address) as KonduxERC721;
  }
  override connect(signer: Signer): KonduxERC721__factory {
    return super.connect(signer) as KonduxERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KonduxERC721Interface {
    return new utils.Interface(_abi) as KonduxERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KonduxERC721 {
    return new Contract(address, _abi, signerOrProvider) as KonduxERC721;
  }
}
