/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KonduxERC721,
  KonduxERC721Interface,
} from "../../../contracts/tests/KonduxERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600b553480156200001657600080fd5b506040518060400160405280600c81526020016b4b6f6e64757845524337323160a01b8152506040518060400160405280600c81526020016b4b6f6e64757845524337323160a01b8152506200007b62000075620000af60201b60201c565b620000b3565b81516200009090600190602085019062000103565b508051620000a690600290602084019062000103565b505050620001e6565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200011190620001a9565b90600052602060002090601f01602090048101928262000135576000855562000180565b82601f106200015057805160ff191683800117855562000180565b8280016001018555821562000180579182015b828111156200018057825182559160200191906001019062000163565b506200018e92915062000192565b5090565b5b808211156200018e576000815560010162000193565b600181811c90821680620001be57607f821691505b60208210811415620001e057634e487b7160e01b600052602260045260246000fd5b50919050565b611b2880620001f66000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c806370a08231116100cd578063b88d4fde11610081578063de5f72fd11610066578063de5f72fd146102cc578063e985e9c5146102d4578063f2fde38b1461031057600080fd5b8063b88d4fde146102a6578063c87b56dd146102b957600080fd5b80638da5cb5b116100b25780638da5cb5b1461027a57806395d89b411461028b578063a22cb4651461029357600080fd5b806370a082311461025f578063715018a61461027257600080fd5b806323b872dd1161012457806342842e0e1161010957806342842e0e146102265780634f6ccce7146102395780636352211e1461024c57600080fd5b806323b872dd146102005780632f745c591461021357600080fd5b8063081812fc11610155578063081812fc146101ae578063095ea7b3146101d957806318160ddd146101ee57600080fd5b806301ffc9a71461017157806306fdde0314610199575b600080fd5b61018461017f3660046116ef565b610323565b60405190151581526020015b60405180910390f35b6101a161034e565b6040516101909190611764565b6101c16101bc366004611777565b6103e0565b6040516001600160a01b039091168152602001610190565b6101ec6101e73660046117ac565b61047a565b005b6009545b604051908152602001610190565b6101ec61020e3660046117d6565b610590565b6101f26102213660046117ac565b610617565b6101ec6102343660046117d6565b6106bf565b6101f2610247366004611777565b6106da565b6101c161025a366004611777565b61077e565b6101f261026d366004611812565b610809565b6101ec6108a3565b6000546001600160a01b03166101c1565b6101a1610909565b6101ec6102a136600461182d565b610918565b6101ec6102b436600461187f565b610927565b6101a16102c7366004611777565b6109b5565b6101ec610aab565b6101846102e236600461195b565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6101ec61031e366004611812565b610acc565b60006001600160e01b0319821663780e9d6360e01b1480610348575061034882610bae565b92915050565b60606001805461035d9061198e565b80601f01602080910402602001604051908101604052809291908181526020018280546103899061198e565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b031661045e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006104858261077e565b9050806001600160a01b0316836001600160a01b031614156104f35760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610455565b336001600160a01b038216148061050f575061050f81336102e2565b6105815760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610455565b61058b8383610bfe565b505050565b61059a3382610c6c565b61060c5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610455565b61058b838383610d63565b600061062283610809565b82106106965760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610455565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b61058b83838360405180602001604052806000815250610927565b60006106e560095490565b82106107595760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610455565b6009828154811061076c5761076c6119c9565b90600052602060002001549050919050565b6000818152600360205260408120546001600160a01b0316806103485760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610455565b60006001600160a01b0382166108875760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610455565b506001600160a01b031660009081526004602052604090205490565b6000546001600160a01b031633146108fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610455565b6109076000610f22565b565b60606002805461035d9061198e565b610923338383610f72565b5050565b6109313383610c6c565b6109a35760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610455565b6109af84848484611041565b50505050565b6000818152600360205260409020546060906001600160a01b0316610a425760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610455565b6000610a5960408051602081019091526000815290565b90506000815111610a795760405180602001604052806000815250610aa4565b80610a83846110ca565b604051602001610a949291906119df565b6040516020818303038152906040525b9392505050565b600b8054906000610abb83611a24565b919050555061090733600b546111e0565b6000546001600160a01b03163314610b265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610455565b6001600160a01b038116610ba25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610455565b610bab81610f22565b50565b60006001600160e01b031982166380ac58cd60e01b1480610bdf57506001600160e01b03198216635b5e139f60e01b145b8061034857506301ffc9a760e01b6001600160e01b0319831614610348565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c338261077e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b0316610ce55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610455565b6000610cf08361077e565b9050806001600160a01b0316846001600160a01b03161480610d3757506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610d5b5750836001600160a01b0316610d50846103e0565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d768261077e565b6001600160a01b031614610df25760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610455565b6001600160a01b038216610e545760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610455565b610e5f83838361132e565b610e6a600082610bfe565b6001600160a01b0383166000908152600460205260408120805460019290610e93908490611a3f565b90915550506001600160a01b0382166000908152600460205260408120805460019290610ec1908490611a56565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b03161415610fd45760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610455565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61104c848484610d63565b611058848484846113e6565b6109af5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610455565b6060816110ee5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611118578061110281611a24565b91506111119050600a83611a84565b91506110f2565b60008167ffffffffffffffff81111561113357611133611869565b6040519080825280601f01601f19166020018201604052801561115d576020820181803683370190505b5090505b8415610d5b57611172600183611a3f565b915061117f600a86611a98565b61118a906030611a56565b60f81b81838151811061119f5761119f6119c9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506111d9600a86611a84565b9450611161565b6001600160a01b0382166112365760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610455565b6000818152600360205260409020546001600160a01b03161561129b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610455565b6112a76000838361132e565b6001600160a01b03821660009081526004602052604081208054600192906112d0908490611a56565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0383166113895761138481600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b6113ac565b816001600160a01b0316836001600160a01b0316146113ac576113ac8382611549565b6001600160a01b0382166113c35761058b816115e6565b826001600160a01b0316826001600160a01b03161461058b5761058b8282611695565b60006001600160a01b0384163b1561153e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061142a903390899088908890600401611aac565b602060405180830381600087803b15801561144457600080fd5b505af1925050508015611474575060408051601f3d908101601f1916820190925261147191810190611ae8565b60015b611524573d8080156114a2576040519150601f19603f3d011682016040523d82523d6000602084013e6114a7565b606091505b50805161151c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610455565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d5b565b506001949350505050565b6000600161155684610809565b6115609190611a3f565b6000838152600860205260409020549091508082146115b3576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b6009546000906115f890600190611a3f565b6000838152600a602052604081205460098054939450909284908110611620576116206119c9565b906000526020600020015490508060098381548110611641576116416119c9565b6000918252602080832090910192909255828152600a9091526040808220849055858252812055600980548061167957611679611b05565b6001900381819060005260206000200160009055905550505050565b60006116a083610809565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160e01b031981168114610bab57600080fd5b60006020828403121561170157600080fd5b8135610aa4816116d9565b60005b8381101561172757818101518382015260200161170f565b838111156109af5750506000910152565b6000815180845261175081602086016020860161170c565b601f01601f19169290920160200192915050565b602081526000610aa46020830184611738565b60006020828403121561178957600080fd5b5035919050565b80356001600160a01b03811681146117a757600080fd5b919050565b600080604083850312156117bf57600080fd5b6117c883611790565b946020939093013593505050565b6000806000606084860312156117eb57600080fd5b6117f484611790565b925061180260208501611790565b9150604084013590509250925092565b60006020828403121561182457600080fd5b610aa482611790565b6000806040838503121561184057600080fd5b61184983611790565b91506020830135801515811461185e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561189557600080fd5b61189e85611790565b93506118ac60208601611790565b925060408501359150606085013567ffffffffffffffff808211156118d057600080fd5b818701915087601f8301126118e457600080fd5b8135818111156118f6576118f6611869565b604051601f8201601f19908116603f0116810190838211818310171561191e5761191e611869565b816040528281528a602084870101111561193757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561196e57600080fd5b61197783611790565b915061198560208401611790565b90509250929050565b600181811c908216806119a257607f821691505b602082108114156119c357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600083516119f181846020880161170c565b835190830190611a0581836020880161170c565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611a3857611a38611a0e565b5060010190565b600082821015611a5157611a51611a0e565b500390565b60008219821115611a6957611a69611a0e565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611a9357611a93611a6e565b500490565b600082611aa757611aa7611a6e565b500690565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611ade6080830184611738565b9695505050505050565b600060208284031215611afa57600080fd5b8151610aa4816116d9565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000809000a";

type KonduxERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KonduxERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KonduxERC721__factory extends ContractFactory {
  constructor(...args: KonduxERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KonduxERC721> {
    return super.deploy(overrides || {}) as Promise<KonduxERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KonduxERC721 {
    return super.attach(address) as KonduxERC721;
  }
  override connect(signer: Signer): KonduxERC721__factory {
    return super.connect(signer) as KonduxERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KonduxERC721Interface {
    return new utils.Interface(_abi) as KonduxERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KonduxERC721 {
    return new Contract(address, _abi, signerOrProvider) as KonduxERC721;
  }
}
