/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KonduxERC721,
  KonduxERC721Interface,
} from "../../../contracts/tests/KonduxERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600b553480156200001657600080fd5b506040518060400160405280600c81526020016b4b6f6e64757845524337323160a01b8152506040518060400160405280600c81526020016b4b6f6e64757845524337323160a01b8152506200007b62000075620000a160201b60201c565b620000a5565b60016200008983826200019a565b5060026200009882826200019a565b50505062000266565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012057607f821691505b6020821081036200014157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019557600081815260208120601f850160051c81016020861015620001705750805b601f850160051c820191505b8181101562000191578281556001016200017c565b5050505b505050565b81516001600160401b03811115620001b657620001b6620000f5565b620001ce81620001c784546200010b565b8462000147565b602080601f831160018114620002065760008415620001ed5750858301515b600019600386901b1c1916600185901b17855562000191565b600085815260208120601f198616915b82811015620002375788860151825594840194600190910190840162000216565b5085821015620002565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61197780620002766000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c806370a08231116100cd578063b88d4fde11610081578063de5f72fd11610066578063de5f72fd146102cc578063e985e9c5146102d4578063f2fde38b1461031057600080fd5b8063b88d4fde146102a6578063c87b56dd146102b957600080fd5b80638da5cb5b116100b25780638da5cb5b1461027a57806395d89b411461028b578063a22cb4651461029357600080fd5b806370a082311461025f578063715018a61461027257600080fd5b806323b872dd1161012457806342842e0e1161010957806342842e0e146102265780634f6ccce7146102395780636352211e1461024c57600080fd5b806323b872dd146102005780632f745c591461021357600080fd5b8063081812fc11610155578063081812fc146101ae578063095ea7b3146101d957806318160ddd146101ee57600080fd5b806301ffc9a71461017157806306fdde0314610199575b600080fd5b61018461017f366004611552565b610323565b60405190151581526020015b60405180910390f35b6101a161034e565b60405161019091906115bf565b6101c16101bc3660046115d2565b6103e0565b6040516001600160a01b039091168152602001610190565b6101ec6101e7366004611607565b610407565b005b6009545b604051908152602001610190565b6101ec61020e366004611631565b610521565b6101f2610221366004611607565b610599565b6101ec610234366004611631565b610641565b6101f26102473660046115d2565b61065c565b6101c161025a3660046115d2565b610700565b6101f261026d36600461166d565b610765565b6101ec6107ff565b6000546001600160a01b03166101c1565b6101a1610813565b6101ec6102a1366004611688565b610822565b6101ec6102b43660046116da565b610831565b6101a16102c73660046115d2565b6108b0565b6101ec610924565b6101846102e23660046117b6565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6101ec61031e36600461166d565b610945565b60006001600160e01b0319821663780e9d6360e01b14806103485750610348826109d5565b92915050565b60606001805461035d906117e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610389906117e9565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050905090565b60006103eb82610a25565b506000908152600560205260409020546001600160a01b031690565b600061041282610700565b9050806001600160a01b0316836001600160a01b0316036104845760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104a057506104a081336102e2565b6105125760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161047b565b61051c8383610a89565b505050565b61052b3382610af7565b61058e5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161047b565b61051c838383610b76565b60006105a483610765565b82106106185760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161047b565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b61051c83838360405180602001604052806000815250610831565b600061066760095490565b82106106db5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161047b565b600982815481106106ee576106ee611823565b90600052602060002001549050919050565b6000818152600360205260408120546001600160a01b0316806103485760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161047b565b60006001600160a01b0382166107e35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161047b565b506001600160a01b031660009081526004602052604090205490565b610807610d35565b6108116000610d8f565b565b60606002805461035d906117e9565b61082d338383610ddf565b5050565b61083b3383610af7565b61089e5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b606482015260840161047b565b6108aa84848484610ead565b50505050565b60606108bb82610a25565b60006108d260408051602081019091526000815290565b905060008151116108f2576040518060200160405280600081525061091d565b806108fc84610f36565b60405160200161090d929190611839565b6040516020818303038152906040525b9392505050565b600b80549060006109348361187e565b919050555061081133600b5461104f565b61094d610d35565b6001600160a01b0381166109c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161047b565b6109d281610d8f565b50565b60006001600160e01b031982166380ac58cd60e01b1480610a0657506001600160e01b03198216635b5e139f60e01b145b8061034857506301ffc9a760e01b6001600160e01b0319831614610348565b6000818152600360205260409020546001600160a01b03166109d25760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161047b565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610abe82610700565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b0383610700565b9050806001600160a01b0316846001600160a01b03161480610b4a57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610b6e5750836001600160a01b0316610b63846103e0565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b8982610700565b6001600160a01b031614610c055760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161047b565b6001600160a01b038216610c675760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161047b565b610c7283838361119d565b610c7d600082610a89565b6001600160a01b0383166000908152600460205260408120805460019290610ca6908490611897565b90915550506001600160a01b0382166000908152600460205260408120805460019290610cd49084906118aa565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000546001600160a01b031633146108115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b031603610e405760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161047b565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eb8848484610b76565b610ec484848484611255565b6108aa5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161047b565b606081600003610f5d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f875780610f718161187e565b9150610f809050600a836118d3565b9150610f61565b60008167ffffffffffffffff811115610fa257610fa26116c4565b6040519080825280601f01601f191660200182016040528015610fcc576020820181803683370190505b5090505b8415610b6e57610fe1600183611897565b9150610fee600a866118e7565b610ff99060306118aa565b60f81b81838151811061100e5761100e611823565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611048600a866118d3565b9450610fd0565b6001600160a01b0382166110a55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161047b565b6000818152600360205260409020546001600160a01b03161561110a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161047b565b6111166000838361119d565b6001600160a01b038216600090815260046020526040812080546001929061113f9084906118aa565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0383166111f8576111f381600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b61121b565b816001600160a01b0316836001600160a01b03161461121b5761121b83826113ac565b6001600160a01b0382166112325761051c81611449565b826001600160a01b0316826001600160a01b03161461051c5761051c82826114f8565b60006001600160a01b0384163b156113a157604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112999033908990889088906004016118fb565b6020604051808303816000875af19250505080156112d4575060408051601f3d908101601f191682019092526112d191810190611937565b60015b611387573d808015611302576040519150601f19603f3d011682016040523d82523d6000602084013e611307565b606091505b50805160000361137f5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161047b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b6e565b506001949350505050565b600060016113b984610765565b6113c39190611897565b600083815260086020526040902054909150808214611416576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061145b90600190611897565b6000838152600a60205260408120546009805493945090928490811061148357611483611823565b9060005260206000200154905080600983815481106114a4576114a4611823565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806114dc576114dc611954565b6001900381819060005260206000200160009055905550505050565b600061150383610765565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160e01b0319811681146109d257600080fd5b60006020828403121561156457600080fd5b813561091d8161153c565b60005b8381101561158a578181015183820152602001611572565b50506000910152565b600081518084526115ab81602086016020860161156f565b601f01601f19169290920160200192915050565b60208152600061091d6020830184611593565b6000602082840312156115e457600080fd5b5035919050565b80356001600160a01b038116811461160257600080fd5b919050565b6000806040838503121561161a57600080fd5b611623836115eb565b946020939093013593505050565b60008060006060848603121561164657600080fd5b61164f846115eb565b925061165d602085016115eb565b9150604084013590509250925092565b60006020828403121561167f57600080fd5b61091d826115eb565b6000806040838503121561169b57600080fd5b6116a4836115eb565b9150602083013580151581146116b957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156116f057600080fd5b6116f9856115eb565b9350611707602086016115eb565b925060408501359150606085013567ffffffffffffffff8082111561172b57600080fd5b818701915087601f83011261173f57600080fd5b813581811115611751576117516116c4565b604051601f8201601f19908116603f01168101908382118183101715611779576117796116c4565b816040528281528a602084870101111561179257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156117c957600080fd5b6117d2836115eb565b91506117e0602084016115eb565b90509250929050565b600181811c908216806117fd57607f821691505b60208210810361181d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000835161184b81846020880161156f565b83519083019061185f81836020880161156f565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161189057611890611868565b5060010190565b8181038181111561034857610348611868565b8082018082111561034857610348611868565b634e487b7160e01b600052601260045260246000fd5b6000826118e2576118e26118bd565b500490565b6000826118f6576118f66118bd565b500690565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261192d6080830184611593565b9695505050505050565b60006020828403121561194957600080fd5b815161091d8161153c565b634e487b7160e01b600052603160045260246000fdfea164736f6c6343000810000a";

type KonduxERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KonduxERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KonduxERC721__factory extends ContractFactory {
  constructor(...args: KonduxERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KonduxERC721> {
    return super.deploy(overrides || {}) as Promise<KonduxERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): KonduxERC721 {
    return super.attach(address) as KonduxERC721;
  }
  override connect(signer: Signer): KonduxERC721__factory {
    return super.connect(signer) as KonduxERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KonduxERC721Interface {
    return new utils.Interface(_abi) as KonduxERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KonduxERC721 {
    return new Contract(address, _abi, signerOrProvider) as KonduxERC721;
  }
}
