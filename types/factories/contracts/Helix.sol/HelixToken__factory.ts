/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  HelixToken,
  HelixTokenInterface,
} from "../../../contracts/Helix.sol/HelixToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_ticker",
        type: "string",
      },
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BURNER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedContracts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableUnrestrictedTransfers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "setAllowedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setEnableUnrestrictedTransfers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014a7380380620014a78339810160408190526200003491620001e0565b8083836003620000458382620002fc565b506004620000548282620002fc565b5050506001600160a01b038116620000b25760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f2061646472657373604482015260640160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150506005805460ff60a01b1916905550620003c89050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014357600080fd5b81516001600160401b03808211156200016057620001606200011b565b604051601f8301601f19908116603f011681019082821181831017156200018b576200018b6200011b565b81604052838152602092508683858801011115620001a857600080fd5b600091505b83821015620001cc5785820183015181830184015290820190620001ad565b600093810190920192909252949350505050565b600080600060608486031215620001f657600080fd5b83516001600160401b03808211156200020e57600080fd5b6200021c8783880162000131565b945060208601519150808211156200023357600080fd5b50620002428682870162000131565b604086015190935090506001600160a01b03811681146200026257600080fd5b809150509250925092565b600181811c908216806200028257607f821691505b602082108103620002a357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f757600081815260208120601f850160051c81016020861015620002d25750805b601f850160051c820191505b81811015620002f357828155600101620002de565b5050505b505050565b81516001600160401b038111156200031857620003186200011b565b62000330816200032984546200026d565b84620002a9565b602080601f8311600181146200036857600084156200034f5750858301515b600019600386901b1c1916600185901b178555620002f3565b600085815260208120601f198616915b82811015620003995788860151825594840194600190910190840162000378565b5085821015620003b85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6110cf80620003d86000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806363bb9ec5116100d8578063a457c2d71161008c578063d539139311610066578063d539139314610331578063dd62ed3e14610358578063e4d27caf1461039157600080fd5b8063a457c2d7146102e0578063a9059cbb146102f3578063bf7e214f1461030657600080fd5b80637a9e5e4b116100bd5780637a9e5e4b146102b257806395d89b41146102c55780639dc29fac146102cd57600080fd5b806363bb9ec51461027657806370a082311461028957600080fd5b8063313ce5671161012f57806340c10f191161011457806340c10f191461022b57806351e0e26b1461024057806355de1faf1461026357600080fd5b8063313ce56714610209578063395093511461021857600080fd5b806318160ddd1161016057806318160ddd146101bd57806323b872dd146101cf578063282c51f3146101e257600080fd5b806306fdde031461017c578063095ea7b31461019a575b600080fd5b6101846103a5565b6040516101919190610e9f565b60405180910390f35b6101ad6101a8366004610f02565b610437565b6040519015158152602001610191565b6002545b604051908152602001610191565b6101ad6101dd366004610f2e565b610451565b6101c17f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b60405160128152602001610191565b6101ad610226366004610f02565b610475565b61023e610239366004610f02565b6104b4565b005b6101ad61024e366004610f6f565b60066020526000908152604090205460ff1681565b61023e610271366004610fa8565b6104ed565b61023e610284366004610fdd565b610520565b6101c1610297366004610f6f565b6001600160a01b031660009081526020819052604090205490565b61023e6102c0366004610f6f565b610561565b6101846105d5565b61023e6102db366004610f02565b6105e4565b6101ad6102ee366004610f02565b610618565b6101ad610301366004610f02565b6106c7565b600554610319906001600160a01b031681565b6040516001600160a01b039091168152602001610191565b6101c17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6101c1610366366004610ff8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546101ad90600160a01b900460ff1681565b6060600380546103b490611031565b80601f01602080910402602001604051908101604052809291908181526020018280546103e090611031565b801561042d5780601f106104025761010080835404028352916020019161042d565b820191906000526020600020905b81548152906001019060200180831161041057829003601f168201915b5050505050905090565b6000336104458185856106d5565b60019150505b92915050565b60003361045f8582856107f9565b61046a85858561088b565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061044590829086906104af90879061106b565b6106d5565b7f4d494e5445525f524f4c450000000000000000000000000000000000000000006104de81610a69565b6104e88383610b14565b505050565b6104f5610bdf565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b610528610bdf565b60058054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b610569610bdf565b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6060600480546103b490611031565b7f4255524e45525f524f4c4500000000000000000000000000000000000000000061060e81610a69565b6104e88383610ca7565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156106ba5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61046a82868684036106d5565b60003361044581858561088b565b6001600160a01b0383166107375760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106b1565b6001600160a01b0382166107985760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106b1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461088557818110156108785760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106b1565b61088584848484036106d5565b50505050565b6001600160a01b0383166109075760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106b1565b6001600160a01b0382166109695760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106b1565b610974838383610de5565b6001600160a01b03831660009081526020819052604090205481811015610a035760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106b1565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610885565b600554604051634c9ba32160e11b815233600482015282916001600160a01b031690639937464290602401602060405180830381865afa158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad5919061108c565b14610b115760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b1565b50565b6001600160a01b038216610b6a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106b1565b610b7660008383610de5565b8060026000828254610b88919061106b565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600560009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5691906110a5565b6001600160a01b0316336001600160a01b031614610ca55760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106b1565b565b6001600160a01b038216610d075760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106b1565b610d1382600083610de5565b6001600160a01b03821660009081526020819052604090205481811015610d875760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106b1565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b0383161580610e0257506001600160a01b038216155b6104e8573360009081526006602052604090205460ff1680610e2d5750600554600160a01b900460ff165b6104e85760405162461bcd60e51b815260206004820152602860248201527f48656c6978546f6b656e3a20646972656374207472616e7366657273206e6f7460448201527f20616c6c6f77656400000000000000000000000000000000000000000000000060648201526084016106b1565b600060208083528351808285015260005b81811015610ecc57858101830151858201604001528201610eb0565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610b1157600080fd5b60008060408385031215610f1557600080fd5b8235610f2081610eed565b946020939093013593505050565b600080600060608486031215610f4357600080fd5b8335610f4e81610eed565b92506020840135610f5e81610eed565b929592945050506040919091013590565b600060208284031215610f8157600080fd5b8135610f8c81610eed565b9392505050565b80358015158114610fa357600080fd5b919050565b60008060408385031215610fbb57600080fd5b8235610fc681610eed565b9150610fd460208401610f93565b90509250929050565b600060208284031215610fef57600080fd5b610f8c82610f93565b6000806040838503121561100b57600080fd5b823561101681610eed565b9150602083013561102681610eed565b809150509250929050565b600181811c9082168061104557607f821691505b60208210810361106557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561044b57634e487b7160e01b600052601160045260246000fd5b60006020828403121561109e57600080fd5b5051919050565b6000602082840312156110b757600080fd5b8151610f8c81610eed56fea164736f6c6343000811000a";

type HelixTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelixTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelixToken__factory extends ContractFactory {
  constructor(...args: HelixTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _ticker: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HelixToken> {
    return super.deploy(
      _name,
      _ticker,
      _authority,
      overrides || {}
    ) as Promise<HelixToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _ticker: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _ticker,
      _authority,
      overrides || {}
    );
  }
  override attach(address: string): HelixToken {
    return super.attach(address) as HelixToken;
  }
  override connect(signer: Signer): HelixToken__factory {
    return super.connect(signer) as HelixToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelixTokenInterface {
    return new utils.Interface(_abi) as HelixTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelixToken {
    return new Contract(address, _abi, signerOrProvider) as HelixToken;
  }
}
