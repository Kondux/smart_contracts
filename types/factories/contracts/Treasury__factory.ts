/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Treasury, TreasuryInterface } from "../../contracts/Treasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositEther",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedTokens",
    outputs: [
      {
        internalType: "contract IKonduxERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approvedTokensList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "erc20ApprovalSetup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTokenApprooved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Treasury.STATUS",
        name: "",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Treasury.STATUS",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_permission",
        type: "bool",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingContract",
        type: "address",
      },
    ],
    name: "setStakingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052601660809081527f54726561737572793a206e6f742061636365707465640000000000000000000060a0526001906200003e908262000256565b5060408051808201909152601681527f54726561737572793a206e6f7420617070726f76656400000000000000000000602082015260029062000082908262000256565b5060408051808201909152601781527f54726561737572793a20696e76616c696420746f6b656e0000000000000000006020820152600390620000c6908262000256565b50348015620000d457600080fd5b506040516200143538038062001435833981016040819052620000f79162000322565b806001600160a01b038116620001535760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f2061646472657373604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a15050600060085562000354565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001dc57607f821691505b602082108103620001fd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025157600081815260208120601f850160051c810160208610156200022c5750805b601f850160051c820191505b818110156200024d5782815560010162000238565b5050505b505050565b81516001600160401b03811115620002725762000272620001b1565b6200028a81620002838454620001c7565b8462000203565b602080601f831160018114620002c25760008415620002a95750858301515b600019600386901b1c1916600185901b1785556200024d565b600085815260208120601f198616915b82811015620002f357888601518255948401946001909101908401620002d2565b5085821015620003125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200033557600080fd5b81516001600160a01b03811681146200034d57600080fd5b9392505050565b6110d180620003646000396000f3fe6080604052600436106100f65760003560e01c806371a330f21161008a578063b2178c1d11610059578063b2178c1d1461032d578063bf7e214f1461034d578063c1ecbfbc1461036d578063ee99205c1461039d57610131565b806371a330f2146102c55780637a9e5e4b146102e557806398ea5fca146103055780639dd373b91461030d57610131565b80634d9d01b2116100c65780634d9d01b2146102135780635727e93b146102375780636d1ea3fa1461026f5780636e553f65146102a557610131565b8062f714ce1461016157806330d1832514610183578063330dd345146101a35780633bed33ce146101f357610131565b36610131576040513481527f66eca0f197db6a72a678383624c427a8762b06bb551f6c6e9f8e34a81c7e8da0906020015b60405180910390a1005b6040513481527f66eca0f197db6a72a678383624c427a8762b06bb551f6c6e9f8e34a81c7e8da090602001610127565b34801561016d57600080fd5b5061018161017c366004610e21565b6103bd565b005b34801561018f57600080fd5b5061018161019e366004610e51565b610534565b3480156101af57600080fd5b506101de6101be366004610e91565b600460209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b3480156101ff57600080fd5b5061018161020e366004610ebd565b6105b2565b34801561021f57600080fd5b5061022960085481565b6040519081526020016101ea565b34801561024357600080fd5b50610257610252366004610ebd565b610667565b6040516001600160a01b0390911681526020016101ea565b34801561027b57600080fd5b5061025761028a366004610ed6565b6006602052600090815260409020546001600160a01b031681565b3480156102b157600080fd5b506101816102c0366004610e21565b610691565b3480156102d157600080fd5b506101816102e0366004610f08565b6108f4565b3480156102f157600080fd5b50610181610300366004610ed6565b610a29565b610181610a8c565b34801561031957600080fd5b50610181610328366004610ed6565b610b14565b34801561033957600080fd5b50610181610348366004610f51565b610b4b565b34801561035957600080fd5b50600054610257906001600160a01b031681565b34801561037957600080fd5b506101de610388366004610ed6565b60056020526000908152604090205460ff1681565b3480156103a957600080fd5b50600954610257906001600160a01b031681565b6001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604090205460019060ff166104215760405162461bcd60e51b81526004016104189190610f9e565b60405180910390fd5b503360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05602052604090205460029060ff166104745760405162461bcd60e51b81526004016104189190610f9e565b506040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec919061104a565b50806001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658360405161052891815260200190565b60405180910390a25050565b61053c610d32565b60405163095ea7b360e01b8152306004820152602481018290526001600160a01b0383169063095ea7b3906044016020604051808303816000875af1158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad919061104a565b505050565b3360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05602052604090205460029060ff166106045760405162461bcd60e51b81526004016104189190610f9e565b50604051339082156108fc029083906000818181858888f1935050505061062a57600080fd5b60408051338152602081018390527fc70a094cb0b20f152b6d171a215827df475885ee85e81c9626d07200d7ddea4291015b60405180910390a150565b6007818154811061067757600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604090205460ff1615610729573360009081527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec602052604090205460029060ff166107235760405162461bcd60e51b81526004016104189190610f9e565b50610744565b600360405162461bcd60e51b81526004016104189190610f9e565b6040516323b872dd60e01b8152326004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb919061104a565b50600954604051633950935160e01b81526001600160a01b03918216600482015260248101849052908216906339509351906044016020604051808303816000875af115801561080f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610833919061104a565b50600954604051636eb1769f60e11b81523060048201526001600160a01b03918216602482015260009183169063dd62ed3e90604401602060405180830381865afa158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa9190611067565b9050816001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c846040516108e791815260200190565b60405180910390a2505050565b6108fc610d32565b806004600085600281111561091357610913610f88565b600281111561092457610924610f88565b8152602080820192909252604090810160009081206001600160a01b03871682529092529020805460ff1916911515919091179055600283600281111561096d5761096d610f88565b036105ad576001600160a01b0382166000908152600560205260409020805460ff191682158015919091179091556105ad576001600160a01b0382166000818152600660205260408120805473ffffffffffffffffffffffffffffffffffffffff199081168417909155600780546001810182559083527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180549091169092179091556008805491610a1f83611080565b9190505550505050565b610a31610d32565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200161065c565b3360009081527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec602052604090205460029060ff16610ade5760405162461bcd60e51b81526004016104189190610f9e565b506040513481527fd5269418e5a2b45e710169d2c4b95243f38cee4ca6044cb91d8636dc4d01dd8a9060200160405180910390a1565b610b1c610d32565b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03821660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604090205460019060ff16610ba65760405162461bcd60e51b81526004016104189190610f9e565b503360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05602052604090205460029060ff16610bf95760405162461bcd60e51b81526004016104189190610f9e565b50604051636eb1769f60e11b81523060048201523360248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b9190611067565b6040516323b872dd60e01b81523060048201526001600160a01b03848116602483015260448201879052919250908416906323b872dd906064016020604051808303816000875af1158015610cc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce8919061104a565b50826001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6585604051610d2491815260200190565b60405180910390a250505050565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da791906110a7565b6001600160a01b0316336001600160a01b031614610e075760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b565b6001600160a01b0381168114610e1e57600080fd5b50565b60008060408385031215610e3457600080fd5b823591506020830135610e4681610e09565b809150509250929050565b60008060408385031215610e6457600080fd5b8235610e6f81610e09565b946020939093013593505050565b803560038110610e8c57600080fd5b919050565b60008060408385031215610ea457600080fd5b610ead83610e7d565b91506020830135610e4681610e09565b600060208284031215610ecf57600080fd5b5035919050565b600060208284031215610ee857600080fd5b8135610ef381610e09565b9392505050565b8015158114610e1e57600080fd5b600080600060608486031215610f1d57600080fd5b610f2684610e7d565b92506020840135610f3681610e09565b91506040840135610f4681610efa565b809150509250925092565b600080600060608486031215610f6657600080fd5b833592506020840135610f7881610e09565b91506040840135610f4681610e09565b634e487b7160e01b600052602160045260246000fd5b600060208083526000845481600182811c915080831680610fc057607f831692505b8583108103610fdd57634e487b7160e01b85526022600452602485fd5b878601838152602001818015610ffa57600181146110105761103b565b60ff198616825284151560051b8201965061103b565b60008b81526020902060005b868110156110355781548482015290850190890161101c565b83019750505b50949998505050505050505050565b60006020828403121561105c57600080fd5b8151610ef381610efa565b60006020828403121561107957600080fd5b5051919050565b6000600182016110a057634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156110b957600080fd5b8151610ef381610e0956fea164736f6c6343000810000a";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Treasury> {
    return super.deploy(_authority, overrides || {}) as Promise<Treasury>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, overrides || {});
  }
  override attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  override connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
