/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Treasury, TreasuryInterface } from "../../contracts/Treasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositEther",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "approvedTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approvedTokensList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "erc20ApprovalSetup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getApprovedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getApprovedTokenAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getApprovedTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getApprovedTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getApprovedTokensList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEtherBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getStakingContractAllowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getStakingContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingContractEtherBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isTokenApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Treasury.STATUS",
        name: "",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Treasury.STATUS",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_permission",
        type: "bool",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingContract",
        type: "address",
      },
    ],
    name: "setStakingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052601660809081527f54726561737572793a206e6f742061636365707465640000000000000000000060a0526001906200003e908262000256565b5060408051808201909152601681527f54726561737572793a206e6f7420617070726f76656400000000000000000000602082015260029062000082908262000256565b5060408051808201909152601781527f54726561737572793a20696e76616c696420746f6b656e0000000000000000006020820152600390620000c6908262000256565b50348015620000d457600080fd5b506040516200171e3803806200171e833981016040819052620000f79162000322565b806001600160a01b038116620001535760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f2061646472657373604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a15050600060075562000354565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001dc57607f821691505b602082108103620001fd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025157600081815260208120601f850160051c810160208610156200022c5750805b601f850160051c820191505b818110156200024d5782815560010162000238565b5050505b505050565b81516001600160401b03811115620002725762000272620001b1565b6200028a81620002838454620001c7565b8462000203565b602080601f831160018114620002c25760008415620002a95750858301515b600019600386901b1c1916600185901b1785556200024d565b600085815260208120601f198616915b82811015620002f357888601518255948401946001909101908401620002d2565b5085821015620003125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200033557600080fd5b81516001600160a01b03811681146200034d57600080fd5b9392505050565b6113ba80620003646000396000f3fe60806040526004361061018e5760003560e01c80638e68dce4116100d6578063bf7e214f1161007f578063dc1a7cfc11610059578063dc1a7cfc146104cf578063ea46193e146104ef578063ee99205c14610502576101c9565b8063bf7e214f1461046d578063c2d7648a1461048d578063d615dcc5146104af576101c9565b80639d93d352116100b05780639d93d352146103fe5780639dd373b91461042e578063bc54c5991461044e576101c9565b80638e68dce4146103b857806398ea5fca146103d65780639a7fd4b5146103de576101c9565b80635727e93b116101385780637a9e5e4b116101125780637a9e5e4b146103585780637bfb25ec146103785780638ca29d2114610398576101c9565b80635727e93b146102e05780636e553f651461031857806371a330f214610338576101c9565b80633bed33ce116101695780633bed33ce1461028b5780634bb55d5c146102ab5780634d9d01b2146102ca576101c9565b8062f714ce146101f957806330d183251461021b578063330dd3451461023b576101c9565b366101c9576040513481527f66eca0f197db6a72a678383624c427a8762b06bb551f6c6e9f8e34a81c7e8da0906020015b60405180910390a1005b6040513481527f66eca0f197db6a72a678383624c427a8762b06bb551f6c6e9f8e34a81c7e8da0906020016101bf565b34801561020557600080fd5b506102196102143660046110c3565b610522565b005b34801561022757600080fd5b506102196102363660046110f3565b610693565b34801561024757600080fd5b50610276610256366004611133565b600460209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b34801561029757600080fd5b506102196102a636600461115f565b610717565b3480156102b757600080fd5b506007545b604051908152602001610282565b3480156102d657600080fd5b506102bc60075481565b3480156102ec57600080fd5b506103006102fb36600461115f565b6107cc565b6040516001600160a01b039091168152602001610282565b34801561032457600080fd5b506102196103333660046110c3565b6107f6565b34801561034457600080fd5b50610219610353366004611186565b610a8b565b34801561036457600080fd5b506102196103733660046111cf565b610c05565b34801561038457600080fd5b506102bc6103933660046111cf565b610c68565b3480156103a457600080fd5b506102bc6103b33660046111cf565b610ce5565b3480156103c457600080fd5b506008546001600160a01b0316610300565b610219610d20565b3480156103ea57600080fd5b506102bc6103f93660046111cf565b610da8565b34801561040a57600080fd5b506102766104193660046111cf565b60056020526000908152604090205460ff1681565b34801561043a57600080fd5b506102196104493660046111cf565b610ddc565b34801561045a57600080fd5b506008546001600160a01b0316316102bc565b34801561047957600080fd5b50600054610300906001600160a01b031681565b34801561049957600080fd5b506104a2610f13565b60405161028291906111f3565b3480156104bb57600080fd5b506102bc6104ca3660046111cf565b610f75565b3480156104db57600080fd5b506103006104ea36600461115f565b610fa4565b3480156104fb57600080fd5b50476102bc565b34801561050e57600080fd5b50600854610300906001600160a01b031681565b6001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604090205460019060ff166105865760405162461bcd60e51b815260040161057d9190611256565b60405180910390fd5b503360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05602052604090205460029060ff166105d95760405162461bcd60e51b815260040161057d9190611256565b5060405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b9190611302565b50806001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658360405161068791815260200190565b60405180910390a25050565b61069b610fd4565b60085460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af11580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190611302565b505050565b3360009081527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05602052604090205460029060ff166107695760405162461bcd60e51b815260040161057d9190611256565b50604051339082156108fc029083906000818181858888f1935050505061078f57600080fd5b60408051338152602081018390527fc70a094cb0b20f152b6d171a215827df475885ee85e81c9626d07200d7ddea4291015b60405180910390a150565b600681815481106107dc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7602052604090205460ff161561088e573360009081527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec602052604090205460029060ff166108885760405162461bcd60e51b815260040161057d9190611256565b506108a9565b600360405162461bcd60e51b815260040161057d9190611256565b6040516323b872dd60e01b8152326004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611302565b50600854604051636eb1769f60e11b81526001600160a01b0391821660048201529082166024820181905260009163dd62ed3e90604401602060405180830381865afa158015610974573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610998919061131f565b6008549091506001600160a01b038084169163095ea7b391166109bb868561134e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a429190611302565b50816001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c84604051610a7e91815260200190565b60405180910390a2505050565b610a93610fd4565b6001600160a01b038216610af35760405162461bcd60e51b815260206004820152602160248201527f5472656173757279205065726d697373696f6e3a207a65726f206164647265736044820152607360f81b606482015260840161057d565b8060046000856002811115610b0a57610b0a611240565b6002811115610b1b57610b1b611240565b8152602080820192909252604090810160009081206001600160a01b03871682529092529020805460ff19169115159190911790556002836002811115610b6457610b64611240565b03610712576001600160a01b0382166000908152600560205260409020805460ff19168215801591909117909155610712576006805460018101825560009182527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0385161790556007805491610bfb83611361565b9190505550505050565b610c0d610fd4565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad906020016107c1565b600854604051636eb1769f60e11b81523060048201526001600160a01b03918216602482015260009183169063dd62ed3e906044015b602060405180830381865afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf919061131f565b92915050565b600854604051636eb1769f60e11b81526001600160a01b0391821660048201529082166024820181905260009163dd62ed3e90604401610c9e565b3360009081527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec602052604090205460029060ff16610d725760405162461bcd60e51b815260040161057d9190611256565b506040513481527fd5269418e5a2b45e710169d2c4b95243f38cee4ca6044cb91d8636dc4d01dd8a9060200160405180910390a1565b6008546040516370a0823160e01b81526001600160a01b0391821660048201526000918316906370a0823190602401610c9e565b610de4610fd4565b6001600160a01b038116610e605760405162461bcd60e51b815260206004820152602960248201527f5472656173757279205365745374616b696e67436f6e74726163743a207a657260448201527f6f20616464726573730000000000000000000000000000000000000000000000606482015260840161057d565b6008546001600160a01b0390811690821603610ee45760405162461bcd60e51b815260206004820152602960248201527f5472656173757279205365745374616b696e67436f6e74726163743a2073616d60448201527f6520616464726573730000000000000000000000000000000000000000000000606482015260840161057d565b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60606006805480602002602001604051908101604052809291908181526020018280548015610f6b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f4d575b5050505050905090565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401610c9e565b600060068281548110610fb957610fb961137a565b6000918252602090912001546001600160a01b031692915050565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110499190611390565b6001600160a01b0316336001600160a01b0316146110a95760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161057d565b565b6001600160a01b03811681146110c057600080fd5b50565b600080604083850312156110d657600080fd5b8235915060208301356110e8816110ab565b809150509250929050565b6000806040838503121561110657600080fd5b8235611111816110ab565b946020939093013593505050565b80356003811061112e57600080fd5b919050565b6000806040838503121561114657600080fd5b61114f8361111f565b915060208301356110e8816110ab565b60006020828403121561117157600080fd5b5035919050565b80151581146110c057600080fd5b60008060006060848603121561119b57600080fd5b6111a48461111f565b925060208401356111b4816110ab565b915060408401356111c481611178565b809150509250925092565b6000602082840312156111e157600080fd5b81356111ec816110ab565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156112345783516001600160a01b03168352928401929184019160010161120f565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b600060208083526000845481600182811c91508083168061127857607f831692505b858310810361129557634e487b7160e01b85526022600452602485fd5b8786018381526020018180156112b257600181146112c8576112f3565b60ff198616825284151560051b820196506112f3565b60008b81526020902060005b868110156112ed578154848201529085019089016112d4565b83019750505b50949998505050505050505050565b60006020828403121561131457600080fd5b81516111ec81611178565b60006020828403121561133157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cdf57610cdf611338565b60006001820161137357611373611338565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156113a257600080fd5b81516111ec816110ab56fea164736f6c6343000811000a";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Treasury> {
    return super.deploy(_authority, overrides || {}) as Promise<Treasury>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, overrides || {});
  }
  override attach(address: string): Treasury {
    return super.attach(address) as Treasury;
  }
  override connect(signer: Signer): Treasury__factory {
    return super.connect(signer) as Treasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new utils.Interface(_abi) as TreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasury {
    return new Contract(address, _abi, signerOrProvider) as Treasury;
  }
}
