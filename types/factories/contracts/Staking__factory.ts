/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC721Founders",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC721kNFT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Compound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Reward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundFreq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "compoundRewardsTimer",
    outputs: [
      {
        internalType: "uint256",
        name: "_timer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC721Founders",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC721kNFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerHour",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_compoundFreq",
        type: "uint256",
      },
    ],
    name: "setCompFreq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
    ],
    name: "setKonduxERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC721Founders",
        type: "address",
      },
    ],
    name: "setKonduxERC721Founders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC721kNFT",
        type: "address",
      },
    ],
    name: "setKonduxERC721kNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minStake",
        type: "uint256",
      },
    ],
    name: "setMinStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerHour",
        type: "uint256",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timelock",
        type: "uint256",
      },
    ],
    name: "setTimeLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261011d60015562989680600255603c60035560786005553480156200002857600080fd5b5060405162001bea38038062001bea8339810160408190526200004b916200021a565b846001600160a01b038116620000a85760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f206164647265737360448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b038416620001525760405162461bcd60e51b815260206004820152601f60248201527f4b6f6e6475782045524332302061646472657373206973206e6f74207365740060448201526064016200009f565b6001600160a01b038316620001aa5760405162461bcd60e51b815260206004820152601b60248201527f54726561737572792061646472657373206973206e6f7420736574000000000060448201526064016200009f565b600680546001600160a01b03199081166001600160a01b0396871617909155600780548216938616939093179092556008805483169185169190911790556009805490911691909216179055506200028a565b80516001600160a01b03811681146200021557600080fd5b919050565b600080600080600060a086880312156200023357600080fd5b6200023e86620001fd565b94506200024e60208701620001fd565b93506200025e60408701620001fd565b92506200026e60608701620001fd565b91506200027e60808701620001fd565b90509295509295909350565b611950806200029a6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c8063853828b6116100ee578063bf811fbc11610097578063cf9d0b5f11610071578063cf9d0b5f14610363578063d33219b41461036b578063d55111c514610374578063f0f442601461038757600080fd5b8063bf811fbc1461032a578063c11479ab1461033d578063c7a29c6f1461035057600080fd5b806394a68991116100c857806394a68991146102f1578063b6b55f2514610304578063bf7e214f1461031757600080fd5b8063853828b6146102cd5780638c80fd90146102d55780638e7271fa146102e857600080fd5b80635287ce121161015b57806361d027b31161013557806361d027b31461028157806364ab86751461029457806378e2816b146102a75780637a9e5e4b146102ba57600080fd5b80635287ce12146102335780635385689c1461025b5780635bcb318a1461026e57600080fd5b80632e1a7d4d1161018c5780632e1a7d4d1461020d578063372500ab14610222578063375b3c0a1461022a57600080fd5b806312e0a053146101b35780631a121d54146101d95780632604b704146101e2575b600080fd5b6101c66101c1366004611710565b61039a565b6040519081526020015b60405180910390f35b6101c660035481565b6006546101f5906001600160a01b031681565b6040516001600160a01b0390911681526020016101d0565b61022061021b366004611734565b61040e565b005b610220610657565b6101c660025481565b610246610241366004611710565b61087a565b604080519283526020830191909152016101d0565b6008546101f5906001600160a01b031681565b61022061027c366004611734565b6108bb565b6009546101f5906001600160a01b031681565b6101c66102a2366004611710565b6108c8565b6102206102b5366004611710565b610d80565b6102206102c8366004611710565b610daa565b610220610e06565b6102206102e3366004611734565b611048565b6101c660015481565b6102206102ff366004611710565b611055565b610220610312366004611734565b61107f565b6000546101f5906001600160a01b031681565b610220610338366004611710565b61137f565b61022061034b366004611734565b6113a9565b61022061035e366004611734565b6113b6565b6102206113c3565b6101c660055481565b6007546101f5906001600160a01b031681565b610220610395366004611710565b611520565b6003546001600160a01b038216600090815260046020526040812060010154909142916103c79190611763565b116103d457506000919050565b6003546001600160a01b03831660009081526004602052604090206001015442916103fe91611763565b6104089190611776565b92915050565b6005543360009081526004602052604090206002015461042e9190611763565b4210156104785760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064015b60405180910390fd5b336000908152600460205260409020548111156104e15760405162461bcd60e51b815260206004820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f75206861766044820152606560f81b606482015260840161046f565b60006104ec336108c8565b33600090815260046020526040812080549293508492909190610510908490611776565b90915550503360009081526004602081815260408084204260018201556003018590556006549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190611789565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018590526064016020604051808303816000875af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d91906117a6565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b600554336000908152600460205260409020600201546106779190611763565b4210156106bc5760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b604482015260640161046f565b3360008181526004602052604081206003015490916106da906108c8565b6106e49190611763565b9050600081116107365760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f207265776172647300000000000000000000000000604482015260640161046f565b33600090815260046020818152604080842060038101859055426001909101556006549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190611789565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af115801561081c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084091906117a6565b5060405181815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9906020015b60405180910390a250565b6001600160a01b03811660009081526004602052604080822054338352908220600301549091906108aa846108c8565b6108b49190611763565b9050915091565b6108c361154a565b600555565b60006109086040518060400160405280601381526020017f43616c63756c6174696e67207265776172647300000000000000000000000000815250611621565b61094560405180606001604052806025815260200161189e602591396001600160a01b03841660009081526004602052604090206001015461167c565b6109846040518060400160405280601381526020017f626c6f636b2e74696d657374616d703a202573000000000000000000000000008152504261167c565b6109eb6040518060400160405280601e81526020017f7374616b6572735b5f7374616b65725d2e6465706f73697465643a202573000081525060046000856001600160a01b03166001600160a01b031681526020019081526020016000206000015461167c565b610a2c6040518060400160405280601281526020017f72657761726473506572486f75723a202573000000000000000000000000000081525060015461167c565b610aaa6040518060c00160405280608181526020016118c360819139600180546001600160a01b038616600090815260046020526040902080549201546298968092610e109291610a7d9042611776565b610a8791906117c8565b610a9191906117c8565b610a9b91906117e7565b610aa591906117e7565b61167c565b600180546001600160a01b0384166000908152600460205260408120805493015490926298968092610e1092909190610ae39042611776565b610aed91906117c8565b610af791906117c8565b610b0191906117e7565b610b0b91906117e7565b9050610b4c6040518060400160405280600a81526020017f7265776172643a202573000000000000000000000000000000000000000000008152508261167c565b6007546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa158015610b97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbb9190611809565b1115610c19576064610bce82606e6117c8565b610bd891906117e7565b9050610c196040518060400160405280601981526020017f72657761726420616674657220666f756e646572733a202573000000000000008152508261167c565b6008546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c889190611809565b1115610408576008546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa158015610cd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfd9190611809565b90506005811115610d0c575060055b6064610d198260056117c8565b610d24906064611763565b610d2e90846117c8565b610d3891906117e7565b9150610d796040518060400160405280601581526020017f726577617264206166746572206b4e46543a20257300000000000000000000008152508361167c565b5092915050565b610d8861154a565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b610db261154a565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b60055433600090815260046020526040902060020154610e269190611763565b421015610e6b5760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b604482015260640161046f565b33600090815260046020526040902054610ec75760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f73697400000000000000000000000000604482015260640161046f565b336000818152600460205260408120600301549091610ee5906108c8565b610eef9190611763565b33600090815260046020526040812080548282556001909101829055919250610f188284611763565b6006546000546040805163fbfa77cf60e01b815290519394506001600160a01b03928316936323b872dd939092169163fbfa77cf916004808201926020929091908290030181865afa158015610f72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f969190611789565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af1158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d91906117a6565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b61105061154a565b600255565b61105d61154a565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6002548110156110f75760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420736d616c6c6572207468616e206d696e696d696d756d20646560448201527f706f736974000000000000000000000000000000000000000000000000000000606482015260840161046f565b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561113f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111639190611809565b10156111b15760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e000000604482015260640161046f565b3360009081526004602052604081205490036111e2573360009081526004602052604081208281556003015561123f565b60006111ed336108c8565b33600090815260046020526040812060030180549293508392909190611214908490611763565b90915550503360009081526004602052604081208054849290611238908490611763565b9091555050505b33600081815260046020818152604080842042600182018190556002909101556006549354815163fbfa77cf60e01b815291516001600160a01b03958616966323b872dd96909592169363fbfa77cf9380840193919291908290030181865afa1580156112b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d49190611789565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018490526064016020604051808303816000875af1158015611328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134c91906117a6565b5060405181815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9060200161086f565b61138761154a565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6113b161154a565b600355565b6113be61154a565b600155565b3360009081526004602052604090205461141f5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f73697400000000000000000000000000604482015260640161046f565b6114283361039a565b156114805760405162461bcd60e51b815260206004820152602260248201527f547269656420746f20636f6d706f756e64207265776172647320746f6f20736f60448201526137b760f11b606482015260840161046f565b33600081815260046020526040812060030154909161149e906108c8565b6114a89190611763565b33600090815260046020526040812060038101829055805492935083929091906114d3908490611763565b9091555050336000818152600460205260409081902042600190910155517f169f1815ebdea059aac3bb00ec9a9594c7a5ffcb64a17e8392b5d84909a145569061086f9084815260200190565b61152861154a565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561159b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bf9190611789565b6001600160a01b0316336001600160a01b03161461161f5760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161046f565b565b611679816040516024016116359190611868565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663104c13eb60e21b1790526116da565b50565b6116d6828260405160240161169292919061187b565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632d839cb360e21b1790526116da565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038116811461167957600080fd5b60006020828403121561172257600080fd5b813561172d816116fb565b9392505050565b60006020828403121561174657600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104085761040861174d565b818103818111156104085761040861174d565b60006020828403121561179b57600080fd5b815161172d816116fb565b6000602082840312156117b857600080fd5b8151801515811461172d57600080fd5b60008160001904831182151516156117e2576117e261174d565b500290565b60008261180457634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561181b57600080fd5b5051919050565b6000815180845260005b818110156118485760208185018101518683018201520161182c565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061172d6020830184611822565b60408152600061188e6040830185611822565b9050826020830152939250505056fe7374616b6572735b5f7374616b65725d2e74696d654f664c6173745570646174653a20257328282828626c6f636b2e74696d657374616d70202d207374616b6572735b5f7374616b65725d2e74696d654f664c61737455706461746529202a207374616b6572735b5f7374616b65725d2e6465706f736974656429202a2072657761726473506572486f757229202f203336303029202f2031305f3030305f3030303a202573a164736f6c6343000810000a";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _konduxERC721Founders: PromiseOrValue<string>,
    _konduxERC721kNFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _authority,
      _konduxERC20,
      _treasury,
      _konduxERC721Founders,
      _konduxERC721kNFT,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _konduxERC721Founders: PromiseOrValue<string>,
    _konduxERC721kNFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _konduxERC20,
      _treasury,
      _konduxERC721Founders,
      _konduxERC721kNFT,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
