/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Compound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Reward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundFreq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "compoundRewardsTimer",
    outputs: [
      {
        internalType: "uint256",
        name: "_timer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerHour",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_compoundFreq",
        type: "uint256",
      },
    ],
    name: "setCompFreq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minStake",
        type: "uint256",
      },
    ],
    name: "setMinStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerHour",
        type: "uint256",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261011d600155629896806002556201518060035534801561002457600080fd5b506040516111e73803806111e783398101604081905261004391610133565b600080546001600160a01b0319166001600160a01b03841690811790915560405190815282907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b0381166100f15760405162461bcd60e51b815260206004820152601f60248201527f4b6f6e6475782045524332302061646472657373206973206e6f742073657400604482015260640160405180910390fd5b600580546001600160a01b0319166001600160a01b039290921691909117905550610166565b80516001600160a01b038116811461012e57600080fd5b919050565b6000806040838503121561014657600080fd5b61014f83610117565b915061015d60208401610117565b90509250929050565b611072806101756000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80637a9e5e4b116100b2578063b6b55f2511610081578063c11479ab11610066578063c11479ab14610238578063c7a29c6f1461024b578063cf9d0b5f1461025e57600080fd5b8063b6b55f2514610212578063bf7e214f1461022557600080fd5b80637a9e5e4b146101db578063853828b6146101ee5780638c80fd90146101f65780638e7271fa1461020957600080fd5b8063372500ab116100ee578063372500ab1461018f578063375b3c0a146101975780635287ce12146101a057806364ab8675146101c857600080fd5b806312e0a053146101205780631a121d54146101465780632604b7041461014f5780632e1a7d4d1461017a575b600080fd5b61013361012e366004610f4a565b610266565b6040519081526020015b60405180910390f35b61013360035481565b600554610162906001600160a01b031681565b6040516001600160a01b03909116815260200161013d565b61018d610188366004610f6e565b6102da565b005b61018d6104dc565b61013360025481565b6101b36101ae366004610f4a565b6106b8565b6040805192835260208301919091520161013d565b6101336101d6366004610f4a565b6106f9565b61018d6101e9366004610f4a565b61075a565b61018d6107ce565b61018d610204366004610f6e565b6109c9565b61013360015481565b61018d610220366004610f6e565b6109d6565b600054610162906001600160a01b031681565b61018d610246366004610f6e565b610d04565b61018d610259366004610f6e565b610d11565b61018d610d1e565b6003546001600160a01b038216600090815260046020526040812060010154909142916102939190610f9d565b116102a057506000919050565b6003546001600160a01b03831660009081526004602052604090206001015442916102ca91610f9d565b6102d49190610fb5565b92915050565b336000908152600460205260409020548111156103485760405162461bcd60e51b815260206004820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f75206861766044820152606560f81b60648201526084015b60405180910390fd5b6000610353336106f9565b33600090815260046020526040812080549293508492909190610377908490610fb5565b90915550503360009081526004602081815260408084204260018201556002018590556005549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf938084019391929190829003018186803b1580156103e457600080fd5b505afa1580156103f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041c9190610fcc565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015233602482015260448101859052606401602060405180830381600087803b15801561046a57600080fd5b505af115801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a29190610fe9565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b3360008181526004602052604081206002015490916104fa906106f9565b6105049190610f9d565b9050600081116105565760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f207265776172647300000000000000000000000000604482015260640161033f565b33600090815260046020818152604080842060028101859055426001909101556005549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf938084019391929190829003018186803b1580156105c057600080fd5b505afa1580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f89190610fcc565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015233602482015260448101849052606401602060405180830381600087803b15801561064657600080fd5b505af115801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190610fe9565b5060405181815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9906020015b60405180910390a250565b6001600160a01b03811660009081526004602052604080822054338352908220600201549091906106e8846106f9565b6106f29190610f9d565b9050915091565b600180546001600160a01b0383166000908152600460205260408120805493015490926298968092610e10929091906107329042610fb5565b61073c919061100b565b610746919061100b565b610750919061102a565b6102d4919061102a565b610762610e7b565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b3360009081526004602052604090205461082a5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f73697400000000000000000000000000604482015260640161033f565b336000818152600460205260408120600201549091610848906106f9565b6108529190610f9d565b3360009081526004602052604081208054828255600190910182905591925061087b8284610f9d565b6005546000546040805163fbfa77cf60e01b815290519394506001600160a01b03928316936323b872dd939092169163fbfa77cf91600480820192602092909190829003018186803b1580156108d057600080fd5b505afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109089190610fcc565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015233602482015260448101849052606401602060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e9190610fe9565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b6109d1610e7b565b600255565b600254811015610a4e5760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420736d616c6c6572207468616e206d696e696d696d756d20646560448201527f706f736974000000000000000000000000000000000000000000000000000000606482015260840161033f565b6005546040516370a0823160e01b815233600482015282916001600160a01b0316906370a082319060240160206040518083038186803b158015610a9157600080fd5b505afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac9919061104c565b1015610b175760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e000000604482015260640161033f565b33600090815260046020526040902054610b4c5733600090815260046020526040812082815542600182015560020155610bbf565b6000610b57336106f9565b33600090815260046020526040812060020180549293508392909190610b7e908490610f9d565b90915550503360009081526004602052604081208054849290610ba2908490610f9d565b909155505033600090815260046020526040902042600190910155505b6005546000546040805163fbfa77cf60e01b815290516001600160a01b03938416936323b872dd93339391169163fbfa77cf91600480820192602092909190829003018186803b158015610c1257600080fd5b505afa158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a9190610fcc565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401602060405180830381600087803b158015610c9957600080fd5b505af1158015610cad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd19190610fe9565b5060405181815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020016106ad565b610d0c610e7b565b600355565b610d19610e7b565b600155565b33600090815260046020526040902054610d7a5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f73697400000000000000000000000000604482015260640161033f565b610d8333610266565b15610ddb5760405162461bcd60e51b815260206004820152602260248201527f547269656420746f20636f6d706f756e64207265776172647320746f6f20736f60448201526137b760f11b606482015260840161033f565b336000818152600460205260408120600201549091610df9906106f9565b610e039190610f9d565b3360009081526004602052604081206002810182905580549293508392909190610e2e908490610f9d565b9091555050336000818152600460205260409081902042600190910155517f169f1815ebdea059aac3bb00ec9a9594c7a5ffcb64a17e8392b5d84909a14556906106ad9084815260200190565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b158015610ec757600080fd5b505afa158015610edb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eff9190610fcc565b6001600160a01b0316336001600160a01b031614610f305760405163075fd2b160e01b815260040160405180910390fd5b565b6001600160a01b0381168114610f4757600080fd5b50565b600060208284031215610f5c57600080fd5b8135610f6781610f32565b9392505050565b600060208284031215610f8057600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610fb057610fb0610f87565b500190565b600082821015610fc757610fc7610f87565b500390565b600060208284031215610fde57600080fd5b8151610f6781610f32565b600060208284031215610ffb57600080fd5b81518015158114610f6757600080fd5b600081600019048311821515161561102557611025610f87565b500290565b60008261104757634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561105e57600080fd5b505191905056fea164736f6c6343000809000a";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: string,
    _konduxERC20: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _authority,
      _konduxERC20,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _authority: string,
    _konduxERC20: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _konduxERC20,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
