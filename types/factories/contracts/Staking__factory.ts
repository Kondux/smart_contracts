/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC721Founders",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC721kNFT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_helixERC20",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Compound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Reward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundFreq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "compoundRewardsTimer",
    outputs: [
      {
        internalType: "uint256",
        name: "_timer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "foundersRewardBoost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foundersRewardBoostDivisor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFoundersRewardBoost",
    outputs: [
      {
        internalType: "uint256",
        name: "_foundersRewardBoost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFoundersRewardBoostDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "_foundersRewardBoostDivisor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getKnftRewardBoostDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "_kNFTRewardBoostDivisor",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinStake",
    outputs: [
      {
        internalType: "uint256",
        name: "_minStake",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardsPerHour",
    outputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerHour",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getStakedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "_deposited",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "getTimeOfLastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "_timeOfLastUpdate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getkNFTRewardBoost",
    outputs: [
      {
        internalType: "uint256",
        name: "_kNFTRewardBoost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "helixERC20",
    outputs: [
      {
        internalType: "contract IHelix",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kNFTRewardBoost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kNFTRewardBoostDivisor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC721Founders",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC721kNFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerHour",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_compoundFreq",
        type: "uint256",
      },
    ],
    name: "setCompFreq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_foundersRewardBoost",
        type: "uint256",
      },
    ],
    name: "setFoundersRewardBoost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_foundersRewardBoostDivisor",
        type: "uint256",
      },
    ],
    name: "setFoundersRewardBoostDivisor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_helix",
        type: "address",
      },
    ],
    name: "setHelixERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
    ],
    name: "setKonduxERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC721Founders",
        type: "address",
      },
    ],
    name: "setKonduxERC721Founders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC721kNFT",
        type: "address",
      },
    ],
    name: "setKonduxERC721kNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minStake",
        type: "uint256",
      },
    ],
    name: "setMinStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerHour",
        type: "uint256",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timelock",
        type: "uint256",
      },
    ],
    name: "setTimeLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawalFee",
        type: "uint256",
      },
    ],
    name: "setWithdrawalFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawalFeeDivisor",
        type: "uint256",
      },
    ],
    name: "setWithdrawalFeeDivisor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_kNFTRewardBoost",
        type: "uint256",
      },
    ],
    name: "setkNFTRewardBoost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_kNFTRewardBoostDivisor",
        type: "uint256",
      },
    ],
    name: "setkNFTRewardBoostDivisor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalFeeDivisor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620186a060015562989680600255620f424060035562989680600455620186a06005556298968060065561011d600755629896806008556201518060095562015180600b553480156200005657600080fd5b50604051620024cb380380620024cb833981016040819052620000799162000258565b856001600160a01b038116620000d65760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f206164647265737360448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b038516620001805760405162461bcd60e51b815260206004820152601f60248201527f4b6f6e6475782045524332302061646472657373206973206e6f7420736574006044820152606401620000cd565b6001600160a01b038416620001d85760405162461bcd60e51b815260206004820152601b60248201527f54726561737572792061646472657373206973206e6f742073657400000000006044820152606401620000cd565b600c80546001600160a01b03199081166001600160a01b0397881617909155600e8054821694871694909417909355600f8054841692861692909217909155600d80548316918516919091179055601080549091169190921617905550620002d9565b80516001600160a01b03811681146200025357600080fd5b919050565b60008060008060008060c087890312156200027257600080fd5b6200027d876200023b565b95506200028d602088016200023b565b94506200029d604088016200023b565b9350620002ad606088016200023b565b9250620002bd608088016200023b565b9150620002cd60a088016200023b565b90509295509295509295565b6121e280620002e96000396000f3fe608060405234801561001057600080fd5b50600436106103205760003560e01c80637d15b9e7116101a7578063bf7e214f116100ee578063cfb656a511610097578063e6fd009f11610071578063e6fd009f14610636578063ecbb34dc1461063f578063f0f442601461064857600080fd5b8063cfb656a514610607578063d33219b41461061a578063d55111c51461062357600080fd5b8063c647b10e116100c8578063c647b10e146105d9578063c7a29c6f146105ec578063cf9d0b5f146105ff57600080fd5b8063bf7e214f146105a0578063bf811fbc146105b3578063c11479ab146105c657600080fd5b806394a6899111610150578063a9b294071161012a578063a9b2940714610567578063ac1e50251461057a578063b6b55f251461058d57600080fd5b806394a689911461054357806397b833e1146105565780639ef292441461055f57600080fd5b80638bc7e8c4116101815780638bc7e8c41461051e5780638c80fd90146105275780638e7271fa1461053a57600080fd5b80637d15b9e714610505578063853828b61461050e57806387c4fdec1461051657600080fd5b8063408433401161026b5780635972e5591161021457806364ab8675116101ee57806364ab8675146104cc57806378e2816b146104df5780637a9e5e4b146104f257600080fd5b80635972e559146104935780635bcb318a146104a657806361d027b3146104b957600080fd5b80635287ce12116102455780635287ce12146104505780635385689c1461047857806356a3b5fa1461048b57600080fd5b8063408433401461040b5780634ca3bca31461041e5780634da6a5561461042757600080fd5b80632707e95b116102cd57806334302605116102a757806334302605146103e7578063372500ab146103fa578063375b3c0a1461040257600080fd5b80632707e95b146103b75780632e1a7d4d146103cc5780632ebd8a46146103df57600080fd5b806312e0a053116102fe57806312e0a053146103705780631a121d54146103835780632604b7041461038c57600080fd5b80630903e9581461032557806309ee1cc01461033c5780630d0ea61414610368575b600080fd5b6007545b6040519081526020015b60405180910390f35b61032961034a366004611f77565b6001600160a01b03166000908152600a602052604090206001015490565b600654610329565b61032961037e366004611f77565b61065b565b61032960095481565b600c5461039f906001600160a01b031681565b6040516001600160a01b039091168152602001610333565b6103ca6103c5366004611f9b565b6106cf565b005b6103ca6103da366004611f9b565b6106dc565b600354610329565b6103ca6103f5366004611f9b565b610a90565b6103ca610a9d565b61032960085481565b6103ca610419366004611f9b565b610ea2565b61032960035481565b610329610435366004611f77565b6001600160a01b03166000908152600a602052604090205490565b61046361045e366004611f77565b610eaf565b60408051928352602083019190915201610333565b600f5461039f906001600160a01b031681565b600854610329565b6103ca6104a1366004611f9b565b610ef0565b6103ca6104b4366004611f9b565b610efd565b60105461039f906001600160a01b031681565b6103296104da366004611f77565b610f0a565b6103ca6104ed366004611f77565b6113c6565b6103ca610500366004611f77565b6113f0565b61032960025481565b6103ca61144c565b600454610329565b61032960015481565b6103ca610535366004611f9b565b6117f0565b61032960075481565b6103ca610551366004611f77565b6117fd565b61032960055481565b600554610329565b600d5461039f906001600160a01b031681565b6103ca610588366004611f9b565b611827565b6103ca61059b366004611f9b565b611834565b60005461039f906001600160a01b031681565b6103ca6105c1366004611f77565b611b98565b6103ca6105d4366004611f9b565b611bc2565b6103ca6105e7366004611f9b565b611bcf565b6103ca6105fa366004611f9b565b611bdc565b6103ca611be9565b6103ca610615366004611f77565b611d46565b610329600b5481565b600e5461039f906001600160a01b031681565b61032960065481565b61032960045481565b6103ca610656366004611f77565b611d70565b6009546001600160a01b0382166000908152600a6020526040812060010154909142916106889190611fca565b1161069557506000919050565b6009546001600160a01b0383166000908152600a602052604090206001015442916106bf91611fca565b6106c99190611fdd565b92915050565b6106d7611d9a565b600555565b600b54336000908152600a60205260409020600201546106fc9190611fca565b4210156107465760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064015b60405180910390fd5b336000908152600a60205260409020548111156107af5760405162461bcd60e51b815260206004820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f75206861766044820152606560f81b606482015260840161073d565b600d546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156107f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081b9190611ff0565b8110156108905760405162461bcd60e51b815260206004820152603760248201527f43616e2774207769746864726177206d6f726520746f6b656e73207468616e2060448201527f74686520636f6c6c61746572616c20796f752068617665000000000000000000606482015260840161073d565b600061089b33610f0a565b336000908152600a60205260408120805492935084929091906108bf908490611fdd565b9091555050336000908152600a6020526040812042600180830191909155600390910183905560025490546108f49085612009565b6108fe9190612028565b600d54604051632770a7eb60e21b8152336004820152602481018690529192506001600160a01b031690639dc29fac90604401600060405180830381600087803b15801561094b57600080fd5b505af115801561095f573d6000803e3d6000fd5b5050600c546000546040805163fbfa77cf60e01b815290516001600160a01b0393841695506323b872dd9450919092169163fbfa77cf9160048083019260209291908290030181865afa1580156109ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109de919061204a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af1158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a559190612067565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b610a98611d9a565b600255565b600b54336000908152600a6020526040902060020154610abd9190611fca565b421015610b025760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b604482015260640161073d565b610b406040518060400160405280601081526020017f436c61696d696e67207265776172647300000000000000000000000000000000815250611e71565b336000818152600a60205260408120600301549091610b5e90610f0a565b610b689190611fca565b9050610ba96040518060400160405280600b81526020017f726577617264733a20257300000000000000000000000000000000000000000081525082611eb7565b604080518082018252601e81527f7072652d636c61696d696e672062616c616e6365207661756c743a2025730000602080830191909152600c54600054845163fbfa77cf60e01b81529451610cc4956001600160a01b03938416946370a08231949093169263fbfa77cf926004808401938290030181865afa158015610c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c57919061204a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610c9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbf9190611ff0565b611eb7565b60408051808201909152601181527f455243323020616464726573733a2025730000000000000000000000000000006020820152600c54610d0e91906001600160a01b0316611f00565b60008111610d5e5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f207265776172647300000000000000000000000000604482015260640161073d565b336000908152600a602090815260408083206003810184905542600190910155600c549254815163fbfa77cf60e01b815291516001600160a01b03948516946323b872dd9492169263fbfa77cf9260048083019391928290030181865afa158015610dcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df1919061204a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af1158015610e44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e689190612067565b5060405181815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9906020015b60405180910390a250565b610eaa611d9a565b600655565b6001600160a01b0381166000908152600a60205260408082205433835290822060030154909190610edf84610f0a565b610ee99190611fca565b9050915091565b610ef8611d9a565b600455565b610f05611d9a565b600b55565b6000610f4a6040518060400160405280601381526020017f43616c63756c6174696e67207265776172647300000000000000000000000000815250611e71565b610f87604051806060016040528060258152602001612130602591396001600160a01b0384166000908152600a6020526040902060010154611eb7565b610fc66040518060400160405280601381526020017f626c6f636b2e74696d657374616d703a2025730000000000000000000000000081525042611eb7565b61102d6040518060400160405280601e81526020017f7374616b6572735b5f7374616b65725d2e6465706f73697465643a2025730000815250600a6000856001600160a01b03166001600160a01b0316815260200190815260200160002060000154611eb7565b61106e6040518060400160405280601281526020017f72657761726473506572486f75723a2025730000000000000000000000000000815250600754611eb7565b6110ea6040518060c0016040528060818152602001612155608191396007546001600160a01b0385166000908152600a6020526040902080546001909101546298968092610e109290916110c29042611fdd565b6110cc9190612009565b6110d69190612009565b6110e09190612028565b610cbf9190612028565b6007546001600160a01b0383166000908152600a60205260408120805460019091015491926298968092610e1092906111239042611fdd565b61112d9190612009565b6111379190612009565b6111419190612028565b61114b9190612028565b905061118c6040518060400160405280600a81526020017f7265776172643a2025730000000000000000000000000000000000000000000081525082611eb7565b600e546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa1580156111d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fb9190611ff0565b111561125c576004546003546112119083612009565b61121b9190612028565b905061125c6040518060400160405280601981526020017f72657761726420616674657220666f756e646572733a2025730000000000000081525082611eb7565b600f546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa1580156112a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cb9190611ff0565b11156106c957600f546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113409190611ff0565b9050600581111561134f575060055b60065461135d826005612009565b60055461136a9190611fca565b6113749084612009565b61137e9190612028565b91506113bf6040518060400160405280601581526020017f726577617264206166746572206b4e46543a202573000000000000000000000081525083611eb7565b5092915050565b6113ce611d9a565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b6113f8611d9a565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b600b54336000908152600a602052604090206002015461146c9190611fca565b4210156114b15760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b604482015260640161073d565b336000908152600a602052604090205461150d5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f73697400000000000000000000000000604482015260640161073d565b336000818152600a6020526040812060030154909161152b90610f0a565b6115359190611fca565b336000908152600a602052604081208054828255600190910182905591925061155e8284611fca565b600d546040516370a0823160e01b81523360048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa1580156115a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cb9190611ff0565b8110156116405760405162461bcd60e51b815260206004820152603760248201527f43616e2774207769746864726177206d6f726520746f6b656e73207468616e2060448201527f74686520636f6c6c61746572616c20796f752068617665000000000000000000606482015260840161073d565b6000600254600154836116539190612009565b61165d9190612028565b600d54604051632770a7eb60e21b8152336004820152602481018590529192506001600160a01b031690639dc29fac90604401600060405180830381600087803b1580156116aa57600080fd5b505af11580156116be573d6000803e3d6000fd5b5050600c546000546040805163fbfa77cf60e01b815290516001600160a01b0393841695506323b872dd9450919092169163fbfa77cf9160048083019260209291908290030181865afa158015611719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173d919061204a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af1158015611790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b49190612067565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250505050565b6117f8611d9a565b600855565b611805611d9a565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b61182f611d9a565b600155565b6008548110156118ac5760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420736d616c6c6572207468616e206d696e696d696d756d20646560448201527f706f736974000000000000000000000000000000000000000000000000000000606482015260840161073d565b600c546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156118f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119189190611ff0565b10156119665760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e000000604482015260640161073d565b336000908152600a6020526040812054900361199757336000908152600a60205260408120828155600301556119f4565b60006119a233610f0a565b336000908152600a60205260408120600301805492935083929091906119c9908490611fca565b9091555050336000908152600a6020526040812080548492906119ed908490611fca565b9091555050505b336000818152600a602090815260408083204260018201819055600290910155600c549254815163fbfa77cf60e01b815291516001600160a01b03948516956323b872dd95909492169263fbfa77cf9260048083019391928290030181865afa158015611a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a89919061204a565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018490526064016020604051808303816000875af1158015611add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b019190612067565b50600d546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b158015611b4e57600080fd5b505af1158015611b62573d6000803e3d6000fd5b50506040518381523392507febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a9150602001610e97565b611ba0611d9a565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b611bca611d9a565b600955565b611bd7611d9a565b600355565b611be4611d9a565b600755565b336000908152600a6020526040902054611c455760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f73697400000000000000000000000000604482015260640161073d565b611c4e3361065b565b15611ca65760405162461bcd60e51b815260206004820152602260248201527f547269656420746f20636f6d706f756e64207265776172647320746f6f20736f60448201526137b760f11b606482015260840161073d565b336000818152600a60205260408120600301549091611cc490610f0a565b611cce9190611fca565b336000908152600a602052604081206003810182905580549293508392909190611cf9908490611fca565b9091555050336000818152600a60205260409081902042600190910155517f169f1815ebdea059aac3bb00ec9a9594c7a5ffcb64a17e8392b5d84909a1455690610e979084815260200190565b611d4e611d9a565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b611d78611d9a565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611deb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0f919061204a565b6001600160a01b0316336001600160a01b031614611e6f5760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161073d565b565b611eb481604051602401611e8591906120cf565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611f41565b50565b611efc8282604051602401611ecd9291906120e2565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052611f41565b5050565b611efc8282604051602401611f16929190612104565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b0381168114611eb457600080fd5b600060208284031215611f8957600080fd5b8135611f9481611f62565b9392505050565b600060208284031215611fad57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106c9576106c9611fb4565b818103818111156106c9576106c9611fb4565b60006020828403121561200257600080fd5b5051919050565b600081600019048311821515161561202357612023611fb4565b500290565b60008261204557634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561205c57600080fd5b8151611f9481611f62565b60006020828403121561207957600080fd5b81518015158114611f9457600080fd5b6000815180845260005b818110156120af57602081850181015186830182015201612093565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611f946020830184612089565b6040815260006120f56040830185612089565b90508260208301529392505050565b6040815260006121176040830185612089565b90506001600160a01b0383166020830152939250505056fe7374616b6572735b5f7374616b65725d2e74696d654f664c6173745570646174653a20257328282828626c6f636b2e74696d657374616d70202d207374616b6572735b5f7374616b65725d2e74696d654f664c61737455706461746529202a207374616b6572735b5f7374616b65725d2e6465706f736974656429202a2072657761726473506572486f757229202f203336303029202f2031305f3030305f3030303a202573a164736f6c6343000810000a";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _konduxERC721Founders: PromiseOrValue<string>,
    _konduxERC721kNFT: PromiseOrValue<string>,
    _helixERC20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _authority,
      _konduxERC20,
      _treasury,
      _konduxERC721Founders,
      _konduxERC721kNFT,
      _helixERC20,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _konduxERC721Founders: PromiseOrValue<string>,
    _konduxERC721kNFT: PromiseOrValue<string>,
    _helixERC20: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _konduxERC20,
      _treasury,
      _konduxERC721Founders,
      _konduxERC721kNFT,
      _helixERC20,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
