/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Compound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Reward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundFreq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "compoundRewardsTimer",
    outputs: [
      {
        internalType: "uint256",
        name: "_timer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerHour",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_compoundFreq",
        type: "uint256",
      },
    ],
    name: "setCompFreq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
    ],
    name: "setKonduxERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minStake",
        type: "uint256",
      },
    ],
    name: "setMinStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerHour",
        type: "uint256",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timelock",
        type: "uint256",
      },
    ],
    name: "setTimeLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261011d60015562989680600255610e10600355611c206005553480156200002a57600080fd5b5060405162001888380380620018888339810160408190526200004d91620001fc565b826001600160a01b038116620000aa5760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f206164647265737360448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b038216620001545760405162461bcd60e51b815260206004820152601f60248201527f4b6f6e6475782045524332302061646472657373206973206e6f7420736574006044820152606401620000a1565b6001600160a01b038116620001ac5760405162461bcd60e51b815260206004820152601b60248201527f54726561737572792061646472657373206973206e6f742073657400000000006044820152606401620000a1565b600680546001600160a01b039384166001600160a01b031991821617909155600780549290931691161790555062000246565b80516001600160a01b0381168114620001f757600080fd5b919050565b6000806000606084860312156200021257600080fd5b6200021d84620001df565b92506200022d60208501620001df565b91506200023d60408501620001df565b90509250925092565b61163280620002566000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063853828b6116100d8578063bf7e214f1161008c578063cf9d0b5f11610066578063cf9d0b5f146102fe578063d33219b414610306578063f0f442601461030f57600080fd5b8063bf7e214f146102c5578063c11479ab146102d8578063c7a29c6f146102eb57600080fd5b80638e7271fa116100bd5780638e7271fa1461029657806394a689911461029f578063b6b55f25146102b257600080fd5b8063853828b61461027b5780638c80fd901461028357600080fd5b8063375b3c0a1161013a57806361d027b31161011457806361d027b31461024257806364ab8675146102555780637a9e5e4b1461026857600080fd5b8063375b3c0a146101fe5780635287ce12146102075780635bcb318a1461022f57600080fd5b80632604b7041161016b5780632604b704146101b65780632e1a7d4d146101e1578063372500ab146101f657600080fd5b806312e0a053146101875780631a121d54146101ad575b600080fd5b61019a6101953660046113f2565b610322565b6040519081526020015b60405180910390f35b61019a60035481565b6006546101c9906001600160a01b031681565b6040516001600160a01b0390911681526020016101a4565b6101f46101ef366004611416565b610396565b005b6101f46105df565b61019a60025481565b61021a6102153660046113f2565b610802565b604080519283526020830191909152016101a4565b6101f461023d366004611416565b610843565b6007546101c9906001600160a01b031681565b61019a6102633660046113f2565b610850565b6101f46102763660046113f2565b610a8f565b6101f4610af8565b6101f4610291366004611416565b610d3a565b61019a60015481565b6101f46102ad3660046113f2565b610d47565b6101f46102c0366004611416565b610d7e565b6000546101c9906001600160a01b031681565b6101f46102e6366004611416565b61107e565b6101f46102f9366004611416565b61108b565b6101f4611098565b61019a60055481565b6101f461031d3660046113f2565b6111f5565b6003546001600160a01b0382166000908152600460205260408120600101549091429161034f9190611445565b1161035c57506000919050565b6003546001600160a01b038316600090815260046020526040902060010154429161038691611445565b6103909190611458565b92915050565b600554336000908152600460205260409020600201546103b69190611445565b4210156104005760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064015b60405180910390fd5b336000908152600460205260409020548111156104695760405162461bcd60e51b815260206004820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f75206861766044820152606560f81b60648201526084016103f7565b600061047433610850565b33600090815260046020526040812080549293508492909190610498908490611458565b90915550503360009081526004602081815260408084204260018201556003018590556006549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e919061146b565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018590526064016020604051808303816000875af1158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a59190611488565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b600554336000908152600460205260409020600201546105ff9190611445565b4210156106445760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064016103f7565b33600081815260046020526040812060030154909161066290610850565b61066c9190611445565b9050600081116106be5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f20726577617264730000000000000000000000000060448201526064016103f7565b33600090815260046020818152604080842060038101859055426001909101556006549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610751919061146b565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af11580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190611488565b5060405181815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9906020015b60405180910390a250565b6001600160a01b038116600090815260046020526040808220543383529082206003015490919061083284610850565b61083c9190611445565b9050915091565b61084b61122c565b600555565b60006108906040518060400160405280601381526020017f43616c63756c6174696e67207265776172647300000000000000000000000000815250611303565b6108cd604051806060016040528060258152602001611580602591396001600160a01b03841660009081526004602052604090206001015461135e565b61090c6040518060400160405280601381526020017f626c6f636b2e74696d657374616d703a202573000000000000000000000000008152504261135e565b6109736040518060400160405280601e81526020017f7374616b6572735b5f7374616b65725d2e6465706f73697465643a202573000081525060046000856001600160a01b03166001600160a01b031681526020019081526020016000206000015461135e565b6109b46040518060400160405280601281526020017f72657761726473506572486f75723a202573000000000000000000000000000081525060015461135e565b610a326040518060c00160405280608181526020016115a560819139600180546001600160a01b038616600090815260046020526040902080549201546298968092610e109291610a059042611458565b610a0f91906114aa565b610a1991906114aa565b610a2391906114c9565b610a2d91906114c9565b61135e565b600180546001600160a01b038416600090815260046020526040902080549201546298968092610e109291610a679042611458565b610a7191906114aa565b610a7b91906114aa565b610a8591906114c9565b61039091906114c9565b610a9761122c565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b60055433600090815260046020526040902060020154610b189190611445565b421015610b5d5760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064016103f7565b33600090815260046020526040902054610bb95760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f7369740000000000000000000000000060448201526064016103f7565b336000818152600460205260408120600301549091610bd790610850565b610be19190611445565b33600090815260046020526040812080548282556001909101829055919250610c0a8284611445565b6006546000546040805163fbfa77cf60e01b815290519394506001600160a01b03928316936323b872dd939092169163fbfa77cf916004808201926020929091908290030181865afa158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c88919061146b565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af1158015610cdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cff9190611488565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b610d4261122c565b600255565b610d4f61122c565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600254811015610df65760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420736d616c6c6572207468616e206d696e696d696d756d20646560448201527f706f73697400000000000000000000000000000000000000000000000000000060648201526084016103f7565b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6291906114eb565b1015610eb05760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e00000060448201526064016103f7565b336000908152600460205260408120549003610ee15733600090815260046020526040812082815560030155610f3e565b6000610eec33610850565b33600090815260046020526040812060030180549293508392909190610f13908490611445565b90915550503360009081526004602052604081208054849290610f37908490611445565b9091555050505b33600081815260046020818152604080842042600182018190556002909101556006549354815163fbfa77cf60e01b815291516001600160a01b03958616966323b872dd96909592169363fbfa77cf9380840193919291908290030181865afa158015610faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd3919061146b565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018490526064016020604051808303816000875af1158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b9190611488565b5060405181815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020016107f7565b61108661122c565b600355565b61109361122c565b600155565b336000908152600460205260409020546110f45760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f7369740000000000000000000000000060448201526064016103f7565b6110fd33610322565b156111555760405162461bcd60e51b815260206004820152602260248201527f547269656420746f20636f6d706f756e64207265776172647320746f6f20736f60448201526137b760f11b60648201526084016103f7565b33600081815260046020526040812060030154909161117390610850565b61117d9190611445565b33600090815260046020526040812060038101829055805492935083929091906111a8908490611445565b9091555050336000818152600460205260409081902042600190910155517f169f1815ebdea059aac3bb00ec9a9594c7a5ffcb64a17e8392b5d84909a14556906107f79084815260200190565b6111fd61122c565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a1919061146b565b6001600160a01b0316336001600160a01b0316146113015760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103f7565b565b61135b81604051602401611317919061154a565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663104c13eb60e21b1790526113bc565b50565b6113b8828260405160240161137492919061155d565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16632d839cb360e21b1790526113bc565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038116811461135b57600080fd5b60006020828403121561140457600080fd5b813561140f816113dd565b9392505050565b60006020828403121561142857600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103905761039061142f565b818103818111156103905761039061142f565b60006020828403121561147d57600080fd5b815161140f816113dd565b60006020828403121561149a57600080fd5b8151801515811461140f57600080fd5b60008160001904831182151516156114c4576114c461142f565b500290565b6000826114e657634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156114fd57600080fd5b5051919050565b6000815180845260005b8181101561152a5760208185018101518683018201520161150e565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061140f6020830184611504565b6040815260006115706040830185611504565b9050826020830152939250505056fe7374616b6572735b5f7374616b65725d2e74696d654f664c6173745570646174653a20257328282828626c6f636b2e74696d657374616d70202d207374616b6572735b5f7374616b65725d2e74696d654f664c61737455706461746529202a207374616b6572735b5f7374616b65725d2e6465706f736974656429202a2072657761726473506572486f757229202f203336303029202f2031305f3030305f3030303a202573a164736f6c6343000810000a";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _authority,
      _konduxERC20,
      _treasury,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _konduxERC20,
      _treasury,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
