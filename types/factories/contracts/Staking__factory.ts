/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC721Founders",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC721kNFT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Compound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Reward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundFreq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "compoundRewardsTimer",
    outputs: [
      {
        internalType: "uint256",
        name: "_timer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC721Founders",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC721kNFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerHour",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_compoundFreq",
        type: "uint256",
      },
    ],
    name: "setCompFreq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
    ],
    name: "setKonduxERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC721Founders",
        type: "address",
      },
    ],
    name: "setKonduxERC721Founders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC721kNFT",
        type: "address",
      },
    ],
    name: "setKonduxERC721kNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minStake",
        type: "uint256",
      },
    ],
    name: "setMinStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerHour",
        type: "uint256",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timelock",
        type: "uint256",
      },
    ],
    name: "setTimeLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261011d6001556298968060025562015180600355620151806005553480156200002c57600080fd5b5060405162001e1138038062001e118339810160408190526200004f916200021e565b846001600160a01b038116620000ac5760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f206164647265737360448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b038416620001565760405162461bcd60e51b815260206004820152601f60248201527f4b6f6e6475782045524332302061646472657373206973206e6f7420736574006044820152606401620000a3565b6001600160a01b038316620001ae5760405162461bcd60e51b815260206004820152601b60248201527f54726561737572792061646472657373206973206e6f742073657400000000006044820152606401620000a3565b600680546001600160a01b03199081166001600160a01b0396871617909155600780548216938616939093179092556008805483169185169190911790556009805490911691909216179055506200028e565b80516001600160a01b03811681146200021957600080fd5b919050565b600080600080600060a086880312156200023757600080fd5b620002428662000201565b9450620002526020870162000201565b9350620002626040870162000201565b9250620002726060870162000201565b9150620002826080870162000201565b90509295509295909350565b611b73806200029e6000396000f3fe608060405234801561001057600080fd5b50600436106101ae5760003560e01c8063853828b6116100ee578063bf811fbc11610097578063cf9d0b5f11610071578063cf9d0b5f14610363578063d33219b41461036b578063d55111c514610374578063f0f442601461038757600080fd5b8063bf811fbc1461032a578063c11479ab1461033d578063c7a29c6f1461035057600080fd5b806394a68991116100c857806394a68991146102f1578063b6b55f2514610304578063bf7e214f1461031757600080fd5b8063853828b6146102cd5780638c80fd90146102d55780638e7271fa146102e857600080fd5b80635287ce121161015b57806361d027b31161013557806361d027b31461028157806364ab86751461029457806378e2816b146102a75780637a9e5e4b146102ba57600080fd5b80635287ce12146102335780635385689c1461025b5780635bcb318a1461026e57600080fd5b80632e1a7d4d1161018c5780632e1a7d4d1461020d578063372500ab14610222578063375b3c0a1461022a57600080fd5b806312e0a053146101b35780631a121d54146101d95780632604b704146101e2575b600080fd5b6101c66101c1366004611908565b61039a565b6040519081526020015b60405180910390f35b6101c660035481565b6006546101f5906001600160a01b031681565b6040516001600160a01b0390911681526020016101d0565b61022061021b36600461192c565b61040e565b005b610220610657565b6101c660025481565b610246610241366004611908565b610a5c565b604080519283526020830191909152016101d0565b6008546101f5906001600160a01b031681565b61022061027c36600461192c565b610a9d565b6009546101f5906001600160a01b031681565b6101c66102a2366004611908565b610aaa565b6102206102b5366004611908565b610f5d565b6102206102c8366004611908565b610f87565b610220610fe3565b6102206102e336600461192c565b611225565b6101c660015481565b6102206102ff366004611908565b611232565b61022061031236600461192c565b61125c565b6000546101f5906001600160a01b031681565b610220610338366004611908565b61155c565b61022061034b36600461192c565b611586565b61022061035e36600461192c565b611593565b6102206115a0565b6101c660055481565b6007546101f5906001600160a01b031681565b610220610395366004611908565b6116fd565b6003546001600160a01b038216600090815260046020526040812060010154909142916103c7919061195b565b116103d457506000919050565b6003546001600160a01b03831660009081526004602052604090206001015442916103fe9161195b565b610408919061196e565b92915050565b6005543360009081526004602052604090206002015461042e919061195b565b4210156104785760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064015b60405180910390fd5b336000908152600460205260409020548111156104e15760405162461bcd60e51b815260206004820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f75206861766044820152606560f81b606482015260840161046f565b60006104ec33610aaa565b3360009081526004602052604081208054929350849290919061051090849061196e565b90915550503360009081526004602081815260408084204260018201556003018590556006549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190611981565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018590526064016020604051808303816000875af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d919061199e565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b60055433600090815260046020526040902060020154610677919061195b565b4210156106bc5760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b604482015260640161046f565b6106fa6040518060400160405280601081526020017f436c61696d696e67207265776172647300000000000000000000000000000000815250611727565b33600081815260046020526040812060030154909161071890610aaa565b610722919061195b565b90506107636040518060400160405280600b81526020017f726577617264733a2025730000000000000000000000000000000000000000008152508261176d565b604080518082018252601e81527f7072652d636c61696d696e672062616c616e6365207661756c743a2025730000602080830191909152600654600054845163fbfa77cf60e01b8152945161087e956001600160a01b03938416946370a08231949093169263fbfa77cf926004808401938290030181865afa1580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108119190611981565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610855573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087991906119c0565b61176d565b60408051808201909152601181527f455243323020616464726573733a20257300000000000000000000000000000060208201526006546108c891906001600160a01b03166117b6565b600081116109185760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f207265776172647300000000000000000000000000604482015260640161046f565b33600090815260046020818152604080842060038101859055426001909101556006549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab9190611981565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af11580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a22919061199e565b5060405181815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9906020015b60405180910390a250565b6001600160a01b0381166000908152600460205260408082205433835290822060030154909190610a8c84610aaa565b610a96919061195b565b9050915091565b610aa56117fb565b600555565b6000610aea6040518060400160405280601381526020017f43616c63756c6174696e67207265776172647300000000000000000000000000815250611727565b610b27604051806060016040528060258152602001611ac1602591396001600160a01b03841660009081526004602052604090206001015461176d565b610b666040518060400160405280601381526020017f626c6f636b2e74696d657374616d703a202573000000000000000000000000008152504261176d565b610bcd6040518060400160405280601e81526020017f7374616b6572735b5f7374616b65725d2e6465706f73697465643a202573000081525060046000856001600160a01b03166001600160a01b031681526020019081526020016000206000015461176d565b610c0e6040518060400160405280601281526020017f72657761726473506572486f75723a202573000000000000000000000000000081525060015461176d565b610c876040518060c0016040528060818152602001611ae660819139600180546001600160a01b038616600090815260046020526040902080549201546298968092610e109291610c5f904261196e565b610c6991906119d9565b610c7391906119d9565b610c7d91906119f8565b61087991906119f8565b600180546001600160a01b0384166000908152600460205260408120805493015490926298968092610e1092909190610cc0904261196e565b610cca91906119d9565b610cd491906119d9565b610cde91906119f8565b610ce891906119f8565b9050610d296040518060400160405280600a81526020017f7265776172643a202573000000000000000000000000000000000000000000008152508261176d565b6007546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa158015610d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9891906119c0565b1115610df6576064610dab82606e6119d9565b610db591906119f8565b9050610df66040518060400160405280601981526020017f72657761726420616674657220666f756e646572733a202573000000000000008152508261176d565b6008546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa158015610e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6591906119c0565b1115610408576008546040516370a0823160e01b81526001600160a01b03858116600483015260009216906370a0823190602401602060405180830381865afa158015610eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eda91906119c0565b90506005811115610ee9575060055b6064610ef68260056119d9565b610f0190606461195b565b610f0b90846119d9565b610f1591906119f8565b9150610f566040518060400160405280601581526020017f726577617264206166746572206b4e46543a20257300000000000000000000008152508361176d565b5092915050565b610f656117fb565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b610f8f6117fb565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b60055433600090815260046020526040902060020154611003919061195b565b4210156110485760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b604482015260640161046f565b336000908152600460205260409020546110a45760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f73697400000000000000000000000000604482015260640161046f565b3360008181526004602052604081206003015490916110c290610aaa565b6110cc919061195b565b336000908152600460205260408120805482825560019091018290559192506110f5828461195b565b6006546000546040805163fbfa77cf60e01b815290519394506001600160a01b03928316936323b872dd939092169163fbfa77cf916004808201926020929091908290030181865afa15801561114f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111739190611981565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af11580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea919061199e565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b61122d6117fb565b600255565b61123a6117fb565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6002548110156112d45760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420736d616c6c6572207468616e206d696e696d696d756d20646560448201527f706f736974000000000000000000000000000000000000000000000000000000606482015260840161046f565b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561131c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134091906119c0565b101561138e5760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e000000604482015260640161046f565b3360009081526004602052604081205490036113bf573360009081526004602052604081208281556003015561141c565b60006113ca33610aaa565b336000908152600460205260408120600301805492935083929091906113f190849061195b565b9091555050336000908152600460205260408120805484929061141590849061195b565b9091555050505b33600081815260046020818152604080842042600182018190556002909101556006549354815163fbfa77cf60e01b815291516001600160a01b03958616966323b872dd96909592169363fbfa77cf9380840193919291908290030181865afa15801561148d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b19190611981565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018490526064016020604051808303816000875af1158015611505573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611529919061199e565b5060405181815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a90602001610a51565b6115646117fb565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b61158e6117fb565b600355565b61159b6117fb565b600155565b336000908152600460205260409020546115fc5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f73697400000000000000000000000000604482015260640161046f565b6116053361039a565b1561165d5760405162461bcd60e51b815260206004820152602260248201527f547269656420746f20636f6d706f756e64207265776172647320746f6f20736f60448201526137b760f11b606482015260840161046f565b33600081815260046020526040812060030154909161167b90610aaa565b611685919061195b565b33600090815260046020526040812060038101829055805492935083929091906116b090849061195b565b9091555050336000818152600460205260409081902042600190910155517f169f1815ebdea059aac3bb00ec9a9594c7a5ffcb64a17e8392b5d84909a1455690610a519084815260200190565b6117056117fb565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b61176a8160405160240161173b9190611a60565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526118d2565b50565b6117b28282604051602401611783929190611a73565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526118d2565b5050565b6117b282826040516024016117cc929190611a95565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526118d2565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561184c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118709190611981565b6001600160a01b0316336001600160a01b0316146118d05760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015260640161046f565b565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160a01b038116811461176a57600080fd5b60006020828403121561191a57600080fd5b8135611925816118f3565b9392505050565b60006020828403121561193e57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561040857610408611945565b8181038181111561040857610408611945565b60006020828403121561199357600080fd5b8151611925816118f3565b6000602082840312156119b057600080fd5b8151801515811461192557600080fd5b6000602082840312156119d257600080fd5b5051919050565b60008160001904831182151516156119f3576119f3611945565b500290565b600082611a1557634e487b7160e01b600052601260045260246000fd5b500490565b6000815180845260005b81811015611a4057602081850181015186830182015201611a24565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006119256020830184611a1a565b604081526000611a866040830185611a1a565b90508260208301529392505050565b604081526000611aa86040830185611a1a565b90506001600160a01b0383166020830152939250505056fe7374616b6572735b5f7374616b65725d2e74696d654f664c6173745570646174653a20257328282828626c6f636b2e74696d657374616d70202d207374616b6572735b5f7374616b65725d2e74696d654f664c61737455706461746529202a207374616b6572735b5f7374616b65725d2e6465706f736974656429202a2072657761726473506572486f757229202f203336303029202f2031305f3030305f3030303a202573a164736f6c6343000810000a";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _konduxERC721Founders: PromiseOrValue<string>,
    _konduxERC721kNFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _authority,
      _konduxERC20,
      _treasury,
      _konduxERC721Founders,
      _konduxERC721kNFT,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    _konduxERC721Founders: PromiseOrValue<string>,
    _konduxERC721kNFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _konduxERC20,
      _treasury,
      _konduxERC721Founders,
      _konduxERC721kNFT,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
