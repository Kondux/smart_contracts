/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Compound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Reward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compoundFreq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "compoundRewardsTimer",
    outputs: [
      {
        internalType: "uint256",
        name: "_timer",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_stake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsPerHour",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_compoundFreq",
        type: "uint256",
      },
    ],
    name: "setCompFreq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_konduxERC20",
        type: "address",
      },
    ],
    name: "setKonduxERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minStake",
        type: "uint256",
      },
    ],
    name: "setMinStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsPerHour",
        type: "uint256",
      },
    ],
    name: "setRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_timelock",
        type: "uint256",
      },
    ],
    name: "setTimeLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timelock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261011d60015562989680600255603c60035560786005553480156200002857600080fd5b50604051620014b0380380620014b08339810160408190526200004b91620001fa565b826001600160a01b038116620000a85760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f206164647265737360448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b038216620001525760405162461bcd60e51b815260206004820152601f60248201527f4b6f6e6475782045524332302061646472657373206973206e6f74207365740060448201526064016200009f565b6001600160a01b038116620001aa5760405162461bcd60e51b815260206004820152601b60248201527f54726561737572792061646472657373206973206e6f7420736574000000000060448201526064016200009f565b600680546001600160a01b039384166001600160a01b031991821617909155600780549290931691161790555062000244565b80516001600160a01b0381168114620001f557600080fd5b919050565b6000806000606084860312156200021057600080fd5b6200021b84620001dd565b92506200022b60208501620001dd565b91506200023b60408501620001dd565b90509250925092565b61125c80620002546000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063853828b6116100d8578063bf7e214f1161008c578063cf9d0b5f11610066578063cf9d0b5f146102fe578063d33219b414610306578063f0f442601461030f57600080fd5b8063bf7e214f146102c5578063c11479ab146102d8578063c7a29c6f146102eb57600080fd5b80638e7271fa116100bd5780638e7271fa1461029657806394a689911461029f578063b6b55f25146102b257600080fd5b8063853828b61461027b5780638c80fd901461028357600080fd5b8063375b3c0a1161013a57806361d027b31161011457806361d027b31461024257806364ab8675146102555780637a9e5e4b1461026857600080fd5b8063375b3c0a146101fe5780635287ce12146102075780635bcb318a1461022f57600080fd5b80632604b7041161016b5780632604b704146101b65780632e1a7d4d146101e1578063372500ab146101f657600080fd5b806312e0a053146101875780631a121d54146101ad575b600080fd5b61019a61019536600461113d565b610322565b6040519081526020015b60405180910390f35b61019a60035481565b6006546101c9906001600160a01b031681565b6040516001600160a01b0390911681526020016101a4565b6101f46101ef366004611161565b610396565b005b6101f46105df565b61019a60025481565b61021a61021536600461113d565b610802565b604080519283526020830191909152016101a4565b6101f461023d366004611161565b610843565b6007546101c9906001600160a01b031681565b61019a61026336600461113d565b610850565b6101f461027636600461113d565b6108b1565b6101f461091a565b6101f4610291366004611161565b610b5c565b61019a60015481565b6101f46102ad36600461113d565b610b69565b6101f46102c0366004611161565b610ba0565b6000546101c9906001600160a01b031681565b6101f46102e6366004611161565b610ea0565b6101f46102f9366004611161565b610ead565b6101f4610eba565b61019a60055481565b6101f461031d36600461113d565b611017565b6003546001600160a01b0382166000908152600460205260408120600101549091429161034f9190611190565b1161035c57506000919050565b6003546001600160a01b038316600090815260046020526040902060010154429161038691611190565b61039091906111a3565b92915050565b600554336000908152600460205260409020600201546103b69190611190565b4210156104005760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064015b60405180910390fd5b336000908152600460205260409020548111156104695760405162461bcd60e51b815260206004820152602160248201527f43616e2774207769746864726177206d6f7265207468616e20796f75206861766044820152606560f81b60648201526084016103f7565b600061047433610850565b336000908152600460205260408120805492935084929091906104989084906111a3565b90915550503360009081526004602081815260408084204260018201556003018590556006549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e91906111b6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018590526064016020604051808303816000875af1158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a591906111d3565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b600554336000908152600460205260409020600201546105ff9190611190565b4210156106445760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064016103f7565b33600081815260046020526040812060030154909161066290610850565b61066c9190611190565b9050600081116106be5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f20726577617264730000000000000000000000000060448201526064016103f7565b33600090815260046020818152604080842060038101859055426001909101556006549354815163fbfa77cf60e01b815291516001600160a01b03958616956323b872dd9592169363fbfa77cf9380840193919291908290030181865afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075191906111b6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af11580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c891906111d3565b5060405181815233907f619caafabdd75649b302ba8419e48cccf64f37f1983ac4727cfb38b57703ffc9906020015b60405180910390a250565b6001600160a01b038116600090815260046020526040808220543383529082206003015490919061083284610850565b61083c9190611190565b9050915091565b61084b61104e565b600555565b600180546001600160a01b0383166000908152600460205260408120805493015490926298968092610e109290919061088990426111a3565b61089391906111f5565b61089d91906111f5565b6108a79190611214565b6103909190611214565b6108b961104e565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b6005543360009081526004602052604090206002015461093a9190611190565b42101561097f5760405162461bcd60e51b8152602060048201526013602482015272151a5b595b1bd8dac81b9bdd081c185cdcd959606a1b60448201526064016103f7565b336000908152600460205260409020546109db5760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f7369740000000000000000000000000060448201526064016103f7565b3360008181526004602052604081206003015490916109f990610850565b610a039190611190565b33600090815260046020526040812080548282556001909101829055919250610a2c8284611190565b6006546000546040805163fbfa77cf60e01b815290519394506001600160a01b03928316936323b872dd939092169163fbfa77cf916004808201926020929091908290030181865afa158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa91906111b6565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018490526064016020604051808303816000875af1158015610afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2191906111d3565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b610b6461104e565b600255565b610b7161104e565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600254811015610c185760405162461bcd60e51b815260206004820152602560248201527f416d6f756e7420736d616c6c6572207468616e206d696e696d696d756d20646560448201527f706f73697400000000000000000000000000000000000000000000000000000060648201526084016103f7565b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c849190611236565b1015610cd25760405162461bcd60e51b815260206004820152601d60248201527f43616e2774207374616b65206d6f7265207468616e20796f75206f776e00000060448201526064016103f7565b336000908152600460205260408120549003610d035733600090815260046020526040812082815560030155610d60565b6000610d0e33610850565b33600090815260046020526040812060030180549293508392909190610d35908490611190565b90915550503360009081526004602052604081208054849290610d59908490611190565b9091555050505b33600081815260046020818152604080842042600182018190556002909101556006549354815163fbfa77cf60e01b815291516001600160a01b03958616966323b872dd96909592169363fbfa77cf9380840193919291908290030181865afa158015610dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df591906111b6565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018490526064016020604051808303816000875af1158015610e49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6d91906111d3565b5060405181815233907febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a906020016107f7565b610ea861104e565b600355565b610eb561104e565b600155565b33600090815260046020526040902054610f165760405162461bcd60e51b815260206004820152601360248201527f596f752068617665206e6f206465706f7369740000000000000000000000000060448201526064016103f7565b610f1f33610322565b15610f775760405162461bcd60e51b815260206004820152602260248201527f547269656420746f20636f6d706f756e64207265776172647320746f6f20736f60448201526137b760f11b60648201526084016103f7565b336000818152600460205260408120600301549091610f9590610850565b610f9f9190611190565b3360009081526004602052604081206003810182905580549293508392909190610fca908490611190565b9091555050336000818152600460205260409081902042600190910155517f169f1815ebdea059aac3bb00ec9a9594c7a5ffcb64a17e8392b5d84909a14556906107f79084815260200190565b61101f61104e565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa15801561109f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c391906111b6565b6001600160a01b0316336001600160a01b0316146111235760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016103f7565b565b6001600160a01b038116811461113a57600080fd5b50565b60006020828403121561114f57600080fd5b813561115a81611125565b9392505050565b60006020828403121561117357600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103905761039061117a565b818103818111156103905761039061117a565b6000602082840312156111c857600080fd5b815161115a81611125565b6000602082840312156111e557600080fd5b8151801515811461115a57600080fd5b600081600019048311821515161561120f5761120f61117a565b500290565b60008261123157634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561124857600080fd5b505191905056fea164736f6c6343000810000a";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _authority,
      _konduxERC20,
      _treasury,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    _konduxERC20: PromiseOrValue<string>,
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _konduxERC20,
      _treasury,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
