/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MinterFounders,
  MinterFoundersInterface,
} from "../../../contracts/Minter_Founders.sol/MinterFounders";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
      {
        internalType: "address",
        name: "_konduxFounders",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "konduxFounders",
    outputs: [
      {
        internalType: "contract IKonduxFounders",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedOG",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedPublic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedWL1",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedWL2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pausedWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePublic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceWL1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceWL2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rootOG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rootWL1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rootWL2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPausedOG",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPausedPublic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPausedWL1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPausedWL2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPausedWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPriceOG",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPricePublic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPriceWL1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPriceWL2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "setRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_rootOG",
        type: "bytes32",
      },
    ],
    name: "setRootOG",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_rootWL1",
        type: "bytes32",
      },
    ],
    name: "setRootWL1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_rootWL2",
        type: "bytes32",
      },
    ],
    name: "setRootWL2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMintOG",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMintWL1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMintWL2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620015903803806200159083398101604081905262000034916200017f565b826001600160a01b038116620000915760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f206164647265737360448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1506001600160a01b0382166200013b5760405162461bcd60e51b815260206004820152601960248201527f4b6f6e6475782061646472657373206973206e6f742073657400000000000000604482015260640162000088565b6001600160a01b039182166080521660a05250600a805464ffffffffff19169055620001c9565b80516001600160a01b03811681146200017a57600080fd5b919050565b6000806000606084860312156200019557600080fd5b620001a08462000162565b9250620001b06020850162000162565b9150620001c06040850162000162565b90509250925092565b60805160a05161137762000219600039600081816103c501528181610784015281816108a101528181610ac901528181610c5f0152610ed1015260008181610668015261110a01526113776000f3fe60806040526004361061026a5760003560e01c806391b7f5ed11610153578063c703d2e0116100cb578063f72ec8291161007f578063f93d8eb511610064578063f93d8eb514610636578063fa3aa50914610656578063fc34fac81461068a57600080fd5b8063f72ec829146105fc578063f923fcb31461061657600080fd5b8063dab5f340116100b0578063dab5f340146105b0578063e55e1ca4146105d0578063ebf0c717146105e657600080fd5b8063c703d2e014610579578063cf094cfe1461058f57600080fd5b8063a4283d1811610122578063bc86b34311610107578063bc86b34314610526578063bf1ce28914610539578063bf7e214f1461055957600080fd5b8063a4283d18146104e7578063b3f093df1461050657600080fd5b806391b7f5ed1461047b5780639739cf811461049b57806398754ca1146104b1578063a035b1fe146104d157600080fd5b80634530a832116101e6578063674bf7c3116101b5578063780febd51161019a578063780febd5146104285780637a9e5e4b1461043b5780638867eb641461045b57600080fd5b8063674bf7c3146103ff578063734ab4321461041557600080fd5b80634530a8321461035357806357ae51fb14610373578063604eaa101461039357806361d027b3146103b357600080fd5b806326092b831161023d5780633336913b116102225780633336913b1461032a578063372f657c146103405780633c36d7d61461035357600080fd5b806326092b831461030c578063299de4721461031457600080fd5b80630d9ecf331461026f578063102e766d1461029157806312d71894146102ba57806324bb7c26146102da575b600080fd5b34801561027b57600080fd5b5061028f61028a366004611212565b6106aa565b005b34801561029d57600080fd5b506102a760055481565b6040519081526020015b60405180910390f35b3480156102c657600080fd5b5061028f6102d5366004611234565b6106cc565b3480156102e657600080fd5b50600a546102fc90640100000000900460ff1681565b60405190151581526020016102b1565b6102a76106d9565b34801561032057600080fd5b506102a760025481565b34801561033657600080fd5b506102a760045481565b6102a761034e36600461124d565b610803565b34801561035f57600080fd5b5061028f61036e366004611234565b6109f0565b34801561037f57600080fd5b5061028f61038e366004611212565b6109fd565b34801561039f57600080fd5b5061028f6103ae366004611234565b610a18565b3480156103bf57600080fd5b506103e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102b1565b34801561040b57600080fd5b506102a760035481565b6102a761042336600461124d565b610a25565b6102a761043636600461124d565b610bbc565b34801561044757600080fd5b5061028f6104563660046112da565b610d52565b34801561046757600080fd5b5061028f610476366004611234565b610dc6565b34801561048757600080fd5b5061028f610496366004611234565b610dd3565b3480156104a757600080fd5b506102a760075481565b3480156104bd57600080fd5b5061028f6104cc366004611212565b610de0565b3480156104dd57600080fd5b506102a760015481565b3480156104f357600080fd5b50600a546102fc90610100900460ff1681565b34801561051257600080fd5b5061028f610521366004611212565b610e08565b6102a761053436600461124d565b610e2c565b34801561054557600080fd5b5061028f610554366004611234565b610fc4565b34801561056557600080fd5b506000546103e7906001600160a01b031681565b34801561058557600080fd5b506102a760095481565b34801561059b57600080fd5b50600a546102fc906301000000900460ff1681565b3480156105bc57600080fd5b5061028f6105cb366004611234565b610fd1565b3480156105dc57600080fd5b506102a760085481565b3480156105f257600080fd5b506102a760065481565b34801561060857600080fd5b50600a546102fc9060ff1681565b34801561062257600080fd5b5061028f610631366004611234565b610fde565b34801561064257600080fd5b50600a546102fc9062010000900460ff1681565b34801561066257600080fd5b506103e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561069657600080fd5b5061028f6106a5366004611212565b610feb565b6106b2611011565b600a80549115156101000261ff0019909216919091179055565b6106d4611011565b600255565b600a54600090640100000000900460ff161561073c5760405162461bcd60e51b815260206004820152601860248201527f5075626c6963206d696e74696e6720697320706175736564000000000000000060448201526064015b60405180910390fd5b6005543410156107825760405162461bcd60e51b81526020600482015260116024820152702737ba1032b737bab3b43a1032ba3432b960791b6044820152606401610733565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398ea5fca346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107dd57600080fd5b505af11580156107f1573d6000803e3d6000fd5b50505050506107fe6110e8565b905090565b600a5460009060ff16156108595760405162461bcd60e51b815260206004820152601b60248201527f57686974656c697374206d696e74696e672069732070617573656400000000006044820152606401610733565b60015434101561089f5760405162461bcd60e51b81526020600482015260116024820152702737ba1032b737bab3b43a1032ba3432b960791b6044820152606401610733565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398ea5fca346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff193360601b16602082015260009350603401915061093b9050565b60405160208183030381529060405280519060200120905061099484848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600654915084905061117d565b6109e05760405162461bcd60e51b815260206004820152600f60248201527f496e636f72726563742070726f6f6600000000000000000000000000000000006044820152606401610733565b6109e86110e8565b949350505050565b6109f8611011565b600455565b610a05611011565b600a805460ff1916911515919091179055565b610a20611011565b600955565b600a5460009062010000900460ff1615610a815760405162461bcd60e51b815260206004820152601560248201527f574c31206d696e74696e672069732070617573656400000000000000000000006044820152606401610733565b600354341015610ac75760405162461bcd60e51b81526020600482015260116024820152702737ba1032b737bab3b43a1032ba3432b960791b6044820152606401610733565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398ea5fca346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610b2257600080fd5b505af1158015610b36573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff193360601b166020820152600093506034019150610b639050565b60405160208183030381529060405280519060200120905061099484848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600854915084905061117d565b600a54600090610100900460ff1615610c175760405162461bcd60e51b815260206004820152601460248201527f4f47206d696e74696e67206973207061757365640000000000000000000000006044820152606401610733565b600254341015610c5d5760405162461bcd60e51b81526020600482015260116024820152702737ba1032b737bab3b43a1032ba3432b960791b6044820152606401610733565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398ea5fca346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610cb857600080fd5b505af1158015610ccc573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff193360601b166020820152600093506034019150610cf99050565b60405160208183030381529060405280519060200120905061099484848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600754915084905061117d565b610d5a611011565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b610dce611011565b600855565b610ddb611011565b600155565b610de8611011565b600a80549115156401000000000264ff0000000019909216919091179055565b610e10611011565b600a8054911515620100000262ff000019909216919091179055565b600a546000906301000000900460ff1615610e895760405162461bcd60e51b815260206004820152601560248201527f574c32206d696e74696e672069732070617573656400000000000000000000006044820152606401610733565b600454341015610ecf5760405162461bcd60e51b81526020600482015260116024820152702737ba1032b737bab3b43a1032ba3432b960791b6044820152606401610733565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398ea5fca346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610f2a57600080fd5b505af1158015610f3e573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff193360601b166020820152600093506034019150610f6b9050565b60405160208183030381529060405280519060200120905061099484848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600954915084905061117d565b610fcc611011565b600755565b610fd9611011565b600655565b610fe6611011565b600355565b610ff3611011565b600a805491151563010000000263ff00000019909216919091179055565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611062573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108691906112f7565b6001600160a01b0316336001600160a01b0316146110e65760405162461bcd60e51b815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610733565b565b604051631bfc324f60e11b815233600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906337f8649e906024016020604051808303816000875af1158015611153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111779190611314565b92915050565b60008261118a8584611193565b14949350505050565b600081815b84518110156111d8576111c4828683815181106111b7576111b761132d565b60200260200101516111e0565b9150806111d081611343565b915050611198565b509392505050565b60008183106111fc57600082815260208490526040902061120b565b60008381526020839052604090205b9392505050565b60006020828403121561122457600080fd5b8135801515811461120b57600080fd5b60006020828403121561124657600080fd5b5035919050565b6000806020838503121561126057600080fd5b823567ffffffffffffffff8082111561127857600080fd5b818501915085601f83011261128c57600080fd5b81358181111561129b57600080fd5b8660208260051b85010111156112b057600080fd5b60209290920196919550909350505050565b6001600160a01b03811681146112d757600080fd5b50565b6000602082840312156112ec57600080fd5b813561120b816112c2565b60006020828403121561130957600080fd5b815161120b816112c2565b60006020828403121561132657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161136357634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000810000a";

type MinterFoundersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinterFoundersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinterFounders__factory extends ContractFactory {
  constructor(...args: MinterFoundersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: PromiseOrValue<string>,
    _konduxFounders: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MinterFounders> {
    return super.deploy(
      _authority,
      _konduxFounders,
      _vault,
      overrides || {}
    ) as Promise<MinterFounders>;
  }
  override getDeployTransaction(
    _authority: PromiseOrValue<string>,
    _konduxFounders: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _authority,
      _konduxFounders,
      _vault,
      overrides || {}
    );
  }
  override attach(address: string): MinterFounders {
    return super.attach(address) as MinterFounders;
  }
  override connect(signer: Signer): MinterFounders__factory {
    return super.connect(signer) as MinterFounders__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinterFoundersInterface {
    return new utils.Interface(_abi) as MinterFoundersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinterFounders {
    return new Contract(address, _abi, signerOrProvider) as MinterFounders;
  }
}
