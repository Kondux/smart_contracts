/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Helix, HelixInterface } from "../../contracts/Helix";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_ticker",
        type: "string",
      },
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
    ],
    name: "setStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract IStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040527f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66006553480156200003557600080fd5b506040516200133e3803806200133e8339810160408190526200005891620001f6565b808383600362000069838262000312565b50600462000078828262000312565b5050506001600160a01b038116620000d65760405162461bcd60e51b815260206004820181905260248201527f417574686f726974792063616e6e6f74206265207a65726f2061646472657373604482015260640160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150505050620003de565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015957600080fd5b81516001600160401b038082111562000176576200017662000131565b604051601f8301601f19908116603f01168101908282118183101715620001a157620001a162000131565b81604052838152602092508683858801011115620001be57600080fd5b600091505b83821015620001e25785820183015181830184015290820190620001c3565b600093810190920192909252949350505050565b6000806000606084860312156200020c57600080fd5b83516001600160401b03808211156200022457600080fd5b620002328783880162000147565b945060208601519150808211156200024957600080fd5b50620002588682870162000147565b604086015190935090506001600160a01b03811681146200027857600080fd5b809150509250925092565b600181811c908216806200029857607f821691505b602082108103620002b957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030d57600081815260208120601f850160051c81016020861015620002e85750805b601f850160051c820191505b818110156200030957828155600101620002f4565b5050505b505050565b81516001600160401b038111156200032e576200032e62000131565b62000346816200033f845462000283565b84620002bf565b602080601f8311600181146200037e5760008415620003655750858301515b600019600386901b1c1916600185901b17855562000309565b600085815260208120601f198616915b82811015620003af578886015182559484019460019091019084016200038e565b5085821015620003ce5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610f5080620003ee6000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80637a9e5e4b116100b2578063a457c2d711610081578063bf7e214f11610066578063bf7e214f14610293578063d5391393146102a6578063dd62ed3e146102af57600080fd5b8063a457c2d71461026d578063a9059cbb1461028057600080fd5b80637a9e5e4b1461022c5780638ff390991461023f57806395d89b41146102525780639dc29fac1461025a57600080fd5b8063313ce5671161010957806340c10f19116100ee57806340c10f19146101c35780634cf088d9146101d857806370a082311461020357600080fd5b8063313ce567146101a157806339509351146101b057600080fd5b806306fdde031461013b578063095ea7b31461015957806318160ddd1461017c57806323b872dd1461018e575b600080fd5b6101436102e8565b6040516101509190610d85565b60405180910390f35b61016c610167366004610de8565b61037a565b6040519015158152602001610150565b6002545b604051908152602001610150565b61016c61019c366004610e14565b610394565b60405160128152602001610150565b61016c6101be366004610de8565b6103b8565b6101d66101d1366004610de8565b6103f7565b005b6007546101eb906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b610180610211366004610e55565b6001600160a01b031660009081526020819052604090205490565b6101d661023a366004610e55565b610412565b6101d661024d366004610e55565b61047b565b6101436104b2565b6101d6610268366004610de8565b6104c1565b61016c61027b366004610de8565b6104d7565b61016c61028e366004610de8565b610586565b6005546101eb906001600160a01b031681565b61018060065481565b6101806102bd366004610e79565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102f790610eb2565b80601f016020809104026020016040519081016040528092919081815260200182805461032390610eb2565b80156103705780601f1061034557610100808354040283529160200191610370565b820191906000526020600020905b81548152906001019060200180831161035357829003601f168201915b5050505050905090565b600033610388818585610594565b60019150505b92915050565b6000336103a28582856106b8565b6103ad85858561074a565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061038890829086906103f2908790610eec565b610594565b60065461040381610928565b61040d83836109d3565b505050565b61041a610a9e565b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b610483610a9e565b6007805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060600480546102f790610eb2565b6006546104cd81610928565b61040d8383610b66565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105795760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103ad8286868403610594565b60003361038881858561074a565b6001600160a01b0383166105f65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610570565b6001600160a01b0382166106575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610570565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461074457818110156107375760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610570565b6107448484848403610594565b50505050565b6001600160a01b0383166107c65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610570565b6001600160a01b0382166108285760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610570565b610833838383610ca4565b6001600160a01b038316600090815260208190526040902054818110156108c25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610570565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610744565b600554604051634c9ba32160e11b815233600482015282916001600160a01b031690639937464290602401602060405180830381865afa158015610970573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109949190610f0d565b146109d05760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610570565b50565b6001600160a01b038216610a295760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610570565b610a3560008383610ca4565b8060026000828254610a479190610eec565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600560009054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b159190610f26565b6001600160a01b0316336001600160a01b031614610b645760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610570565b565b6001600160a01b038216610bc65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610570565b610bd282600083610ca4565b6001600160a01b03821660009081526020819052604090205481811015610c465760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610570565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b03831615801590610cc457506001600160a01b03821615155b1561040d576007546040516326d352ab60e11b81526001600160a01b0384811660048301526000921690634da6a55690602401602060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d389190610f0d565b1161040d5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79205374616b6572732063616e207265636569766520746f6b656e73006044820152606401610570565b600060208083528351808285015260005b81811015610db257858101830151858201604001528201610d96565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146109d057600080fd5b60008060408385031215610dfb57600080fd5b8235610e0681610dd3565b946020939093013593505050565b600080600060608486031215610e2957600080fd5b8335610e3481610dd3565b92506020840135610e4481610dd3565b929592945050506040919091013590565b600060208284031215610e6757600080fd5b8135610e7281610dd3565b9392505050565b60008060408385031215610e8c57600080fd5b8235610e9781610dd3565b91506020830135610ea781610dd3565b809150509250929050565b600181811c90821680610ec657607f821691505b602082108103610ee657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561038e57634e487b7160e01b600052601160045260246000fd5b600060208284031215610f1f57600080fd5b5051919050565b600060208284031215610f3857600080fd5b8151610e7281610dd356fea164736f6c6343000811000a";

type HelixConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelixConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Helix__factory extends ContractFactory {
  constructor(...args: HelixConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _ticker: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Helix> {
    return super.deploy(
      _name,
      _ticker,
      _authority,
      overrides || {}
    ) as Promise<Helix>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _ticker: PromiseOrValue<string>,
    _authority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _ticker,
      _authority,
      overrides || {}
    );
  }
  override attach(address: string): Helix {
    return super.attach(address) as Helix;
  }
  override connect(signer: Signer): Helix__factory {
    return super.connect(signer) as Helix__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelixInterface {
    return new utils.Interface(_abi) as HelixInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Helix {
    return new Contract(address, _abi, signerOrProvider) as Helix;
  }
}
