/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "AcceptAsk",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "AcceptBid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    name: "CancelAsk",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    name: "CancelBid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "CreateAsk",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "CreateBid",
    type: "event",
  },
  {
    inputs: [],
    name: "HUNDRED_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_ASK_DOES_NOT_EXIST",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_ASK_INSUFFICIENT_VALUE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_ASK_IS_RESERVED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_ASK_SELLER_NOT_OWNER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_BID_TOO_LOW",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_CANT_ACCEPT_OWN_ASK",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_INSUFFICIENT_ETHER",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_NFT_NOT_SENT",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_NOT_A_CREATOR_OF_ASK",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_NOT_A_CREATOR_OF_BID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_NOT_OWNER_OF_TOKEN_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_OWNER_OF_TOKEN_ID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INFTContract[]",
        name: "nft",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenID",
        type: "uint256[]",
      },
    ],
    name: "acceptAsk",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INFTContract[]",
        name: "nft",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenID",
        type: "uint256[]",
      },
    ],
    name: "acceptBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "asks",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bids",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INFTContract[]",
        name: "nft",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenID",
        type: "uint256[]",
      },
    ],
    name: "cancelAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INFTContract[]",
        name: "nft",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenID",
        type: "uint256[]",
      },
    ],
    name: "cancelBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "changeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INFTContract[]",
        name: "nft",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenID",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "price",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
    ],
    name: "createAsk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INFTContract[]",
        name: "nft",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenID",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "price",
        type: "uint256[]",
      },
    ],
    name: "createBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "escrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526101f46001553480156200001757600080fd5b5060405162002b1638038062002b168339810160408190526200003a9162000098565b600080546001600160a01b0319166001600160a01b038316908117909155604051908152819081907f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a1505050620000ca565b600060208284031215620000ab57600080fd5b81516001600160a01b0381168114620000c357600080fd5b9392505050565b612a3c80620000da6000396000f3fe6080604052600436106101ac5760003560e01c80636f92eb3d116100ec578063d9cfeedf1161008a578063e2ea8b5f11610064578063e2ea8b5f14610636578063e9f343e01461064b578063f778550e1461066b578063faf068881461067e57600080fd5b8063d9cfeedf1461054f578063ddca3f4314610598578063e22d4f7d146105ae57600080fd5b8063a613b6a9116100c6578063a613b6a914610499578063a6774b7e146104b9578063a9fdb8a714610502578063bf7e214f1461051757600080fd5b80636f92eb3d146104105780637a9e5e4b14610459578063835a55ff1461047957600080fd5b80633b3facda116101595780634a30e50f116101335780634a30e50f1461035657806357d3c7c31461039f5780636a1db1bf146103da5780636ed93dd0146103fa57600080fd5b80633b3facda146103195780633bd36a821461032c5780633ccfd60b1461034157600080fd5b806327d837491161018a57806327d83749146102cd5780632bce9c56146102ef578063355823c31461030457600080fd5b806301495c1c146101b157806309e970951461022e57806313ca384a14610284575b600080fd5b3480156101bd57600080fd5b506102046101cc366004612509565b60036020908152600092835260408084209091529082529020805460019091015460ff82169161010090046001600160a01b03169083565b6040805193151584526001600160a01b039092166020840152908201526060015b60405180910390f35b34801561023a57600080fd5b506102776040518060400160405280601981526020017f4d61726b6574706c6163653a3a4e4654206e6f742073656e740000000000000081525081565b6040516102259190612582565b34801561029057600080fd5b506102776040518060400160405280601f81526020017f4d61726b6574706c6163653a3a61736b20646f6573206e6f742065786973740081525081565b3480156102d957600080fd5b506102ed6102e83660046125e1565b610693565b005b3480156102fb57600080fd5b50610277610a75565b34801561031057600080fd5b50610277610a91565b6102ed6103273660046125e1565b610aad565b34801561033857600080fd5b5061027761135a565b34801561034d57600080fd5b506102ed611376565b34801561036257600080fd5b506102776040518060400160405280602081526020017f4d61726b6574706c6163653a3a63616e7420616363657074206f776e2061736b81525081565b3480156103ab57600080fd5b506103cc6103ba36600461264d565b60046020526000908152604090205481565b604051908152602001610225565b3480156103e657600080fd5b506102ed6103f536600461266a565b611398565b34801561040657600080fd5b506103cc61271081565b34801561041c57600080fd5b506102776040518060400160405280601881526020017f4d61726b6574706c6163653a3a62696420746f6f206c6f77000000000000000081525081565b34801561046557600080fd5b506102ed61047436600461264d565b6113d0565b34801561048557600080fd5b506102ed610494366004612683565b61142c565b3480156104a557600080fd5b506102ed6104b43660046125e1565b61173f565b3480156104c557600080fd5b506102776040518060400160405280601e81526020017f4d61726b6574706c6163653a3a6f776e6572206f6620746f6b656e204944000081525081565b34801561050e57600080fd5b506102776118e7565b34801561052357600080fd5b50600054610537906001600160a01b031681565b6040516001600160a01b039091168152602001610225565b34801561055b57600080fd5b506102776040518060400160405280601c81526020017f4d61726b6574706c6163653a3a61736b2069732072657365727665640000000081525081565b3480156105a457600080fd5b506103cc60015481565b3480156105ba57600080fd5b506106096105c9366004612509565b6002602081815260009384526040808520909152918352912080546001820154919092015460ff8316926001600160a01b03610100909104811692911684565b6040805194151585526001600160a01b039384166020860152840191909152166060820152608001610225565b34801561064257600080fd5b50610277611903565b34801561065757600080fd5b506102ed6106663660046125e1565b61191f565b6102ed610679366004612747565b611b28565b34801561068a57600080fd5b50610277611ef7565b6000805b84811015610a515760006106f5338686858181106106b7576106b76127e1565b905060200201358989868181106106d0576106d06127e1565b90506020020160208101906106e5919061264d565b6001600160a01b03169190611f13565b11604051806060016040528060258152602001612a0b60259139906107365760405162461bcd60e51b815260040161072d9190612582565b60405180910390fd5b50600086868381811061074b5761074b6127e1565b9050602002016020810190610760919061264d565b6001600160a01b038116600090815260036020526040812091925086868581811061078d5761078d6127e1565b90506020020135815260200190815260200160002060010154836107b1919061280d565b92508484838181106107c5576107c56127e1565b90506020020135816001600160a01b03167fc0b27866212a08f28967a7caefcb1c7a132d34b2b54849710c88677c70d6aa0260036000856001600160a01b03166001600160a01b031681526020019081526020016000206000898988818110610830576108306127e1565b9050602002013581526020019081526020016000206001015460405161085891815260200190565b60405180910390a36001600160a01b038116600090815260036020526040812061092290339083898988818110610891576108916127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b03168888878181106108cf576108cf6127e1565b60408051600081526020808201909252910292909201359190508c8c898181106108fb576108fb6127e1565b9050602002016020810190610910919061264d565b6001600160a01b0316939291906120a9565b9050806040518060400160405280601981526020017f4d61726b6574706c6163653a3a4e4654206e6f742073656e7400000000000000815250906109795760405162461bcd60e51b815260040161072d9190612582565b506001600160a01b0382166000908152600260205260408120908787868181106109a5576109a56127e1565b60209081029290920135835250818101929092526040908101600090812080546001600160a81b03191681556001810182905560020180546001600160a01b03191690556001600160a01b03851681526003909252812090878786818110610a0f57610a0f6127e1565b60209081029290920135835250810191909152604001600090812080546001600160a81b03191681556001015550819050610a4981612825565b915050610697565b506000610a5d826121f3565b33600090815260046020526040902055505050505050565b6040518060600160405280602481526020016129ba6024913981565b6040518060600160405280602581526020016129736025913981565b6000805b84811015611317576000868683818110610acd57610acd6127e1565b9050602002016020810190610ae2919061264d565b6001600160a01b0381166000908152600260205260408120919250868685818110610b0f57610b0f6127e1565b90506020020135815260200190815260200160002060000160009054906101000a900460ff166040518060400160405280601f81526020017f4d61726b6574706c6163653a3a61736b20646f6573206e6f742065786973740081525090610b895760405162461bcd60e51b815260040161072d9190612582565b506001600160a01b03811660009081526002602052604081203391878786818110610bb657610bb66127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b03166001600160a01b031614156040518060400160405280602081526020017f4d61726b6574706c6163653a3a63616e7420616363657074206f776e2061736b81525090610c415760405162461bcd60e51b815260040161072d9190612582565b506001600160a01b038116600090815260026020526040812081878786818110610c6d57610c6d6127e1565b60209081029290920135835250810191909152604001600020600201546001600160a01b031614610d50576001600160a01b03811660009081526002602052604081203391878786818110610cc457610cc46127e1565b90506020020135815260200190815260200160002060020160009054906101000a90046001600160a01b03166001600160a01b0316146040518060400160405280601c81526020017f4d61726b6574706c6163653a3a61736b2069732072657365727665640000000081525090610d4e5760405162461bcd60e51b815260040161072d9190612582565b505b6001600160a01b0381166000908152600260205260408120610dd69082888887818110610d7f57610d7f6127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b0316878786818110610dbd57610dbd6127e1565b905060200201358a8a878181106106d0576106d06127e1565b116040518060600160405280602281526020016129986022913990610e0e5760405162461bcd60e51b815260040161072d9190612582565b506001600160a01b038116600090815260026020526040812090868685818110610e3a57610e3a6127e1565b9050602002013581526020019081526020016000206001015483610e5e919061280d565b6001600160a01b0382166000908152600260205260408120919450610eae9190878786818110610e9057610e906127e1565b905060200201358152602001908152602001600020600101546121f3565b6001600160a01b03821660009081526002602052604081206004919081898988818110610edd57610edd6127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020019081526020016000206000828254610f38919061280d565b90915550506001600160a01b03811660009081526003602052604081203391878786818110610f6957610f696127e1565b602090810292909201358352508101919091526040016000205461010090046001600160a01b031614156110d1576001600160a01b038116600090815260036020526040812090868685818110610fc257610fc26127e1565b905060200201358152602001908152602001600020600101546004600060036000856001600160a01b03166001600160a01b031681526020019081526020016000206000898988818110611018576110186127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020019081526020016000206000828254611073919061280d565b90915550506001600160a01b0381166000908152600360205260408120908686858181106110a3576110a36127e1565b60209081029290920135835250810191909152604001600090812080546001600160a81b0319168155600101555b6001600160a01b0381166000908152600260205260408120908686858181106110fc576110fc6127e1565b60209081029290920135835250810191909152604001600020600201546001600160a01b0316858584818110611134576111346127e1565b90506020020135826001600160a01b03167f505811c636cbeacd8a187edfdea379418da40826998469f636191ebfdf04d59560026000866001600160a01b03166001600160a01b0316815260200190815260200160002060008a8a8981811061119f5761119f6127e1565b905060200201358152602001908152602001600020600101546040516111c791815260200190565b60405180910390a46001600160a01b038116600090815260026020526040812061123d90828888878181106111fe576111fe6127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b0316338888878181106108cf576108cf6127e1565b9050806040518060400160405280601981526020017f4d61726b6574706c6163653a3a4e4654206e6f742073656e7400000000000000815250906112945760405162461bcd60e51b815260040161072d9190612582565b506001600160a01b0382166000908152600260205260408120908787868181106112c0576112c06127e1565b60209081029290920135835250810191909152604001600090812080546001600160a81b0319168155600181019190915560020180546001600160a01b03191690555081905061130f81612825565b915050610ab1565b503481146040518060600160405280602d81526020016129de602d9139906113525760405162461bcd60e51b815260040161072d9190612582565b505050505050565b6040518060600160405280602281526020016129986022913981565b3360008181526004602052604081208054919055906113959082612205565b50565b6113a0612323565b61271081106113cb5760405162461bcd60e51b8152602060048201526000602482015260440161072d565b600155565b6113d8612323565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b60005b878110156117345760006114683389898581811061144f5761144f6127e1565b905060200201358c8c868181106106d0576106d06127e1565b11604051806060016040528060258152602001612a0b60259139906114a05760405162461bcd60e51b815260040161072d9190612582565b506127108585838181106114b6576114b66127e1565b905060200201351161150a5760405162461bcd60e51b815260206004820152600d60248201527f707269636520746f6f206c6f7700000000000000000000000000000000000000604482015260640161072d565b6040805160808101825260018152336020820152908101868684818110611533576115336127e1565b905060200201358152602001848484818110611551576115516127e1565b9050602002016020810190611566919061264d565b6001600160a01b03169052600260008b8b85818110611587576115876127e1565b905060200201602081019061159c919061264d565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008989858181106115d0576115d06127e1565b6020908102929092013583525081810192909252604090810160002083518154938501516001600160a81b031990941690151574ffffffffffffffffffffffffffffffffffffffff001916176101006001600160a01b0394851602178155908301516001820155606090920151600290920180546001600160a01b0319169290911691909117905582828281811061166a5761166a6127e1565b905060200201602081019061167f919061264d565b6001600160a01b031687878381811061169a5761169a6127e1565b905060200201358a8a848181106116b3576116b36127e1565b90506020020160208101906116c8919061264d565b6001600160a01b03167f5e2cbd378e0283fc6b10ae55622f8789a8c7a0bc98da4a34b9d4bc0408501277888886818110611704576117046127e1565b9050602002013560405161171a91815260200190565b60405180910390a48061172c81612825565b91505061142f565b505050505050505050565b60005b838110156118e057600085858381811061175e5761175e6127e1565b9050602002016020810190611773919061264d565b6001600160a01b03811660009081526002602052604081209192503391908686868181106117a3576117a36127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b03166001600160a01b03161460405180606001604052806025815260200161297360259139906118105760405162461bcd60e51b815260040161072d9190612582565b506001600160a01b03811660009081526002602052604081209085858581811061183c5761183c6127e1565b60209081029290920135835250810191909152604001600090812080546001600160a81b0319168155600181019190915560020180546001600160a01b0319169055838383818110611890576118906127e1565b90506020020135816001600160a01b03167fdbf4e0b783843a3574c3a128e0bb915b440f16a6476f034ffb3efcebc641205a60405160405180910390a350806118d881612825565b915050611742565b5050505050565b604051806060016040528060258152602001612a0b6025913981565b6040518060600160405280602d81526020016129de602d913981565b60005b838110156118e057600085858381811061193e5761193e6127e1565b9050602002016020810190611953919061264d565b6001600160a01b0381166000908152600360205260408120919250339190868686818110611983576119836127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b03166001600160a01b03161460405180606001604052806025815260200161294e60259139906119f05760405162461bcd60e51b815260040161072d9190612582565b506001600160a01b038116600090815260036020526040812090858585818110611a1c57611a1c6127e1565b9050602002013581526020019081526020016000206001015460046000336001600160a01b03166001600160a01b031681526020019081526020016000206000828254611a69919061280d565b90915550506001600160a01b038116600090815260036020526040812090858585818110611a9957611a996127e1565b60209081029290920135835250810191909152604001600090812080546001600160a81b031916815560010155838383818110611ad857611ad86127e1565b90506020020135816001600160a01b03167f12606bee7a7a46f74b6b0466368de6d182b9bade27d591b3537fd0f6040c282560405160405180910390a35080611b2081612825565b915050611922565b6000805b86811015611eb2576000888883818110611b4857611b486127e1565b9050602002016020810190611b5d919061264d565b6001600160a01b0381166000908152600360205260408120919250888885818110611b8a57611b8a6127e1565b9050602002013581526020019081526020016000206001015434116040518060400160405280601881526020017f4d61726b6574706c6163653a3a62696420746f6f206c6f77000000000000000081525090611bf95760405162461bcd60e51b815260040161072d9190612582565b506001600160a01b038116600090815260036020526040812090888885818110611c2557611c256127e1565b602090810292909201358352508101919091526040016000205460ff1615611d29576001600160a01b038116600090815260036020526040812090888885818110611c7257611c726127e1565b905060200201358152602001908152602001600020600101546004600060036000856001600160a01b03166001600160a01b0316815260200190815260200160002060008b8b88818110611cc857611cc86127e1565b90506020020135815260200190815260200160002060000160019054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020019081526020016000206000828254611d23919061280d565b90915550505b6040805160608101825260018152336020820152908101868685818110611d5257611d526127e1565b9050602002013581525060036000836001600160a01b03166001600160a01b031681526020019081526020016000206000898986818110611d9557611d956127e1565b6020908102929092013583525081810192909252604090810160002083518154938501516001600160a81b031990941690151574ffffffffffffffffffffffffffffffffffffffff001916176101006001600160a01b03909416939093029290921782559190910151600190910155868683818110611e1657611e166127e1565b90506020020135816001600160a01b03167f4cd248834f389c3e09a9812f94252fb6383516efd8f4853e8181b828d4bb3a82878786818110611e5a57611e5a6127e1565b90506020020135604051611e7091815260200190565b60405180910390a3848483818110611e8a57611e8a6127e1565b9050602002013583611e9c919061280d565b9250508080611eaa90612825565b915050611b2c565b503481146040518060600160405280602481526020016129ba6024913990611eed5760405162461bcd60e51b815260040161072d9190612582565b5050505050505050565b60405180606001604052806025815260200161294e6025913981565b6040516331a9108f60e11b8152600481018290526000906001600160a01b03851690636352211e9060240160206040518083038186803b158015611f5657600080fd5b505afa925050508015611f86575060408051601f3d908101601f19168201909252611f8391810190612840565b60015b612078573d808015611fb4576040519150601f19603f3d011682016040523d82523d6000602084013e611fb9565b606091505b50604051627eeac760e11b81526001600160a01b0385811660048301526024820185905286169062fdd58e9060440160206040518083038186803b15801561200057600080fd5b505afa925050508015612030575060408051601f3d908101601f1916820190925261202d9181019061285d565b60015b61206f573d80801561205e576040519150601f19603f3d011682016040523d82523d6000602084013e612063565b606091505b506000925050506120a2565b91506120a29050565b836001600160a01b0316816001600160a01b0316141561209c5760019150506120a2565b60009150505b9392505050565b604051635c46a7ef60e11b81526000906001600160a01b0387169063b88d4fde906120de908890889088908890600401612876565b600060405180830381600087803b1580156120f857600080fd5b505af1925050508015612109575060015b6121e6573d808015612137576040519150601f19603f3d011682016040523d82523d6000602084013e61213c565b606091505b50604051637921219560e11b81526001600160a01b0388169063f242432a90612172908990899089906001908a906004016128b2565b600060405180830381600087803b15801561218c57600080fd5b505af192505050801561219d575060015b6121dc573d8080156121cb576040519150601f19603f3d011682016040523d82523d6000602084013e6121d0565b606091505b506000925050506121ea565b60019150506121ea565b5060015b95945050505050565b60006121fe826123da565b5090919050565b804710156122555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161072d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146122a2576040519150601f19603f3d011682016040523d82523d6000602084013e6122a7565b606091505b505090508061231e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161072d565b505050565b60008054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b815260040160206040518083038186803b15801561236f57600080fd5b505afa158015612383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a79190612840565b6001600160a01b0316336001600160a01b0316146123d85760405163075fd2b160e01b815260040160405180910390fd5b565b600080612710600154846123ee91906128f5565b6123f89190612914565b90508281106124235760405162461bcd60e51b8152602060048201526000602482015260440161072d565b60008054906101000a90046001600160a01b03166001600160a01b031663fbfa77cf6040518163ffffffff1660e01b815260040160206040518083038186803b15801561246f57600080fd5b505afa158015612483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a79190612840565b6001600160a01b03166108fc829081150290604051600060405180830381858888f193505050501580156124df573d6000803e3d6000fd5b5060006124ec8285612936565b949350505050565b6001600160a01b038116811461139557600080fd5b6000806040838503121561251c57600080fd5b8235612527816124f4565b946020939093013593505050565b6000815180845260005b8181101561255b5760208185018101518683018201520161253f565b8181111561256d576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006120a26020830184612535565b60008083601f8401126125a757600080fd5b50813567ffffffffffffffff8111156125bf57600080fd5b6020830191508360208260051b85010111156125da57600080fd5b9250929050565b600080600080604085870312156125f757600080fd5b843567ffffffffffffffff8082111561260f57600080fd5b61261b88838901612595565b9096509450602087013591508082111561263457600080fd5b5061264187828801612595565b95989497509550505050565b60006020828403121561265f57600080fd5b81356120a2816124f4565b60006020828403121561267c57600080fd5b5035919050565b6000806000806000806000806080898b03121561269f57600080fd5b883567ffffffffffffffff808211156126b757600080fd5b6126c38c838d01612595565b909a50985060208b01359150808211156126dc57600080fd5b6126e88c838d01612595565b909850965060408b013591508082111561270157600080fd5b61270d8c838d01612595565b909650945060608b013591508082111561272657600080fd5b506127338b828c01612595565b999c989b5096995094979396929594505050565b6000806000806000806060878903121561276057600080fd5b863567ffffffffffffffff8082111561277857600080fd5b6127848a838b01612595565b9098509650602089013591508082111561279d57600080fd5b6127a98a838b01612595565b909650945060408901359150808211156127c257600080fd5b506127cf89828a01612595565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612820576128206127f7565b500190565b6000600019821415612839576128396127f7565b5060010190565b60006020828403121561285257600080fd5b81516120a2816124f4565b60006020828403121561286f57600080fd5b5051919050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526128a86080830184612535565b9695505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526128ea60a0830184612535565b979650505050505050565b600081600019048311821515161561290f5761290f6127f7565b500290565b60008261293157634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612948576129486127f7565b50039056fe4d61726b6574706c6163653a3a6e6f7420612063726561746f72206f6620746865206269644d61726b6574706c6163653a3a6e6f7420612063726561746f72206f66207468652061736b4d61726b6574706c6163653a3a61736b2063726561746f72206e6f74206f776e65724d61726b6574706c6163653a3a696e73756666696369656e742065746865722073656e744d61726b6574706c6163653a3a61736b20707269636520686967686572207468616e2073656e742076616c75654d61726b6574706c6163653a3a6e6f7420616e206f776e6572206f6620746f6b656e204944a164736f6c6343000809000a";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Marketplace> {
    return super.deploy(_authority, overrides || {}) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_authority, overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
