/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Kondux,
  KonduxInterface,
} from "../../../contracts/Kondux_NFT.sol/Kondux";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_authority",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAuthority",
        name: "authority",
        type: "address",
      },
    ],
    name: "AuthorityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint96",
        name: "denominator",
        type: "uint96",
      },
    ],
    name: "DenominatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
    ],
    name: "DnaChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract IAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_denominator",
        type: "uint96",
      },
    ],
    name: "changeDenominator",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "denominator",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "indexDna",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAuthority",
        name: "_newAuthority",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dna",
        type: "uint256",
      },
    ],
    name: "setDna",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setTokenRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002b0838038062002b0883398101604081905262000034916200023d565b80838381600290805190602001906200004f929190620000ca565b50805162000065906003906020840190620000ca565b5050600c80546001600160a81b0319166101006001600160a01b038516908102919091179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad915060200160405180910390a15050505062000307565b828054620000d890620002ca565b90600052602060002090601f016020900481019282620000fc576000855562000147565b82601f106200011757805160ff191683800117855562000147565b8280016001018555821562000147579182015b82811115620001475782518255916020019190600101906200012a565b506200015592915062000159565b5090565b5b808211156200015557600081556001016200015a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019857600080fd5b81516001600160401b0380821115620001b557620001b562000170565b604051601f8301601f19908116603f01168101908282118183101715620001e057620001e062000170565b81604052838152602092508683858801011115620001fd57600080fd5b600091505b8382101562000221578582018301518183018401529082019062000202565b83821115620002335760008385830101525b9695505050505050565b6000806000606084860312156200025357600080fd5b83516001600160401b03808211156200026b57600080fd5b620002798783880162000186565b945060208601519150808211156200029057600080fd5b506200029f8682870162000186565b604086015190935090506001600160a01b0381168114620002bf57600080fd5b809150509250925092565b600181811c90821680620002df57607f821691505b602082108114156200030157634e487b7160e01b600052602260045260246000fd5b50919050565b6127f180620003176000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80635944c7531161010f57806396ce0795116100a2578063b88d4fde11610071578063b88d4fde14610449578063bf7e214f1461045c578063c87b56dd14610474578063e985e9c51461048757600080fd5b806396ce0795146103e5578063a144819414610410578063a22cb46514610423578063ab51e23a1461043657600080fd5b806370a08231116100de57806370a08231146103af5780637a9e5e4b146103c25780638456cb59146103d557806395d89b41146103dd57600080fd5b80635944c753146103765780635c975abb146103895780636352211e146103945780636c0360eb146103a757600080fd5b806323b872dd1161018757806342842e0e1161015657806342842e0e1461032a57806342966c681461033d5780634f6ccce71461035057806355f804b31461036357600080fd5b806323b872dd146102ca5780632a55205a146102dd5780632f745c591461030f5780633f4ba83a1461032257600080fd5b8063081812fc116101c3578063081812fc1461025a578063095ea7b31461028557806318160ddd146102985780631c9ad5b1146102aa57600080fd5b806301ffc9a7146101f557806304634d8d1461021d578063067b61f21461023257806306fdde0314610245575b600080fd5b610208610203366004612173565b6104c3565b60405190151581526020015b60405180910390f35b61023061022b3660046121c3565b6104d4565b005b6102306102403660046121f8565b6104ea565b61024d6104fc565b6040516102149190612272565b61026d610268366004612285565b61058e565b6040516001600160a01b039091168152602001610214565b61023061029336600461229e565b610628565b600a545b604051908152602001610214565b61029c6102b8366004612285565b600f6020526000908152604090205481565b6102306102d83660046122ca565b61073e565b6102f06102eb3660046121f8565b6107c6565b604080516001600160a01b039093168352602083019190915201610214565b61029c61031d36600461229e565b610872565b61023061091a565b6102306103383660046122ca565b61092c565b61023061034b366004612285565b610947565b61029c61035e366004612285565b6109ce565b61024d610371366004612397565b610a72565b6102306103843660046123e0565b610b5b565b600c5460ff16610208565b61026d6103a2366004612285565b610b6e565b61024d610bf9565b61029c6103bd36600461241e565b610c87565b6102306103d036600461241e565b610d21565b610230610d9c565b61024d610dac565b600e546103f8906001600160601b031681565b6040516001600160601b039091168152602001610214565b61023061041e36600461229e565b610dbb565b61023061043136600461243b565b610df2565b6103f8610444366004612479565b610dfd565b610230610457366004612494565b610e6e565b600c5461026d9061010090046001600160a01b031681565b61024d610482366004612285565b610efc565b610208610495366004612514565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006104ce82610fe5565b92915050565b6104dc610ff0565b6104e68282611098565b5050565b6104f2610ff0565b6104e68282611195565b60606002805461050b90612542565b80601f016020809104026020016040519081016040528092919081815260200182805461053790612542565b80156105845780601f1061055957610100808354040283529160200191610584565b820191906000526020600020905b81548152906001019060200180831161056757829003601f168201915b5050505050905090565b6000818152600460205260408120546001600160a01b031661060c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061063382610b6e565b9050806001600160a01b0316836001600160a01b031614156106a15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610603565b336001600160a01b03821614806106bd57506106bd8133610495565b61072f5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610603565b61073983836111ec565b505050565b610749335b8261125a565b6107bb5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610603565b610739838383611351565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b031692820192909252829161083b5750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101516000906127109061085a906001600160601b031687612593565b61086491906125c8565b915196919550909350505050565b600061087d83610c87565b82106108f15760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610603565b506001600160a01b03919091166000908152600860209081526040808320938352929052205490565b610922610ff0565b61092a611510565b565b61073983838360405180602001604052806000815250610e6e565b61095033610743565b6109c25760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610603565b6109cb816115ac565b50565b60006109d9600a5490565b8210610a4d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610603565b600a8281548110610a6057610a606125dc565b90600052602060002001549050919050565b6060610a7c610ff0565b8151610a8f90600d9060208501906120c4565b507f5411e8ebf1636d9e83d5fc4900bf80cbac82e8790da2a4c94db4895e889eedf6600d604051610ac091906125f2565b60405180910390a1600d8054610ad590612542565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0190612542565b8015610b4e5780601f10610b2357610100808354040283529160200191610b4e565b820191906000526020600020905b815481529060010190602001808311610b3157829003601f168201915b505050505090505b919050565b610b63610ff0565b6107398383836115c6565b6000818152600460205260408120546001600160a01b0316806104ce5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610603565b600d8054610c0690612542565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3290612542565b8015610c7f5780601f10610c5457610100808354040283529160200191610c7f565b820191906000526020600020905b815481529060010190602001808311610c6257829003601f168201915b505050505081565b60006001600160a01b038216610d055760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610603565b506001600160a01b031660009081526005602052604090205490565b610d29610ff0565b600c80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b038416908102919091179091556040519081527f2f658b440c35314f52658ea8a740e05b284cdc84dc9ae01e891f21b8933e7cad9060200160405180910390a150565b610da4610ff0565b61092a6116d4565b60606003805461050b90612542565b610dc3610ff0565b6000610dce60105490565b9050610dda8183611195565b610de8601080546001019055565b610739838261174f565b6104e6338383611769565b6000610e07610ff0565b600e80546bffffffffffffffffffffffff19166001600160601b0384169081179091556040519081527f601b85aa9305dbcfbfc81aa2d4b5126c1ce24afdd1bad47d6880e5b6df081f579060200160405180910390a15050600e546001600160601b031690565b610e78338361125a565b610eea5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610603565b610ef684848484611838565b50505050565b6000818152600460205260409020546060906001600160a01b0316610f895760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610603565b6000600d8054610f9890612542565b905011610fb457604051806020016040528060008152506104ce565b600d610fbf836118b6565b604051602001610fd0929190612677565b60405160208183030381529060405292915050565b60006104ce826119cc565b600c60019054906101000a90046001600160a01b03166001600160a01b0316630c340a246040518163ffffffff1660e01b8152600401602060405180830381865afa158015611043573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106791906126fa565b6001600160a01b0316336001600160a01b03161461092a5760405163075fd2b160e01b815260040160405180910390fd5b6127106001600160601b03821611156111065760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608401610603565b6001600160a01b03821661115c5760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401610603565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600055565b61119d610ff0565b6000828152600f602090815260409182902083905581518481529081018390527f4e26044f7fb3724a9375deb74974fdc2f4e07f265efce87f93cfced354258487910160405180910390a15050565b600081815260066020526040902080546001600160a01b0319166001600160a01b038416908117909155819061122182610b6e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600460205260408120546001600160a01b03166112d35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610603565b60006112de83610b6e565b9050806001600160a01b0316846001600160a01b031614806113195750836001600160a01b031661130e8461058e565b6001600160a01b0316145b8061134957506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661136482610b6e565b6001600160a01b0316146113e05760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610603565b6001600160a01b0382166114425760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610603565b61144d8383836119f1565b6114586000826111ec565b6001600160a01b0383166000908152600560205260408120805460019290611481908490612717565b90915550506001600160a01b03821660009081526005602052604081208054600192906114af90849061272e565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600c5460ff166115625760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610603565b600c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6115b581611a42565b600090815260016020526040812055565b6127106001600160601b03821611156116345760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608401610603565b6001600160a01b03821661168a5760405162461bcd60e51b815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d657465727300000000006044820152606401610603565b6040805180820182526001600160a01b0393841681526001600160601b0392831660208083019182526000968752600190529190942093519051909116600160a01b029116179055565b600c5460ff161561171a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610603565b600c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861158f3390565b6104e6828260405180602001604052806000815250611a4b565b816001600160a01b0316836001600160a01b031614156117cb5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610603565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611843848484611351565b61184f84848484611ac9565b610ef65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610603565b6060816118da5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561190457806118ee81612746565b91506118fd9050600a836125c8565b91506118de565b60008167ffffffffffffffff81111561191f5761191f61230b565b6040519080825280601f01601f191660200182016040528015611949576020820181803683370190505b5090505b84156113495761195e600183612717565b915061196b600a86612761565b61197690603061272e565b60f81b81838151811061198b5761198b6125dc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506119c5600a866125c8565b945061194d565b60006001600160e01b0319821663780e9d6360e01b14806104ce57506104ce82611c12565b600c5460ff1615611a375760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610603565b610739838383611c52565b6115b581611d0a565b611a558383611db1565b611a626000848484611ac9565b6107395760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610603565b60006001600160a01b0384163b15611c0757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611b0d903390899088908890600401612775565b6020604051808303816000875af1925050508015611b48575060408051601f3d908101601f19168201909252611b45918101906127b1565b60015b611bed573d808015611b76576040519150601f19603f3d011682016040523d82523d6000602084013e611b7b565b606091505b508051611be55760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610603565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611349565b506001949350505050565b60006001600160e01b031982166380ac58cd60e01b1480611c4357506001600160e01b03198216635b5e139f60e01b145b806104ce57506104ce82611eff565b6001600160a01b038316611cad57611ca881600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b611cd0565b816001600160a01b0316836001600160a01b031614611cd057611cd08382611f34565b6001600160a01b038216611ce75761073981611fd1565b826001600160a01b0316826001600160a01b031614610739576107398282612080565b6000611d1582610b6e565b9050611d23816000846119f1565b611d2e6000836111ec565b6001600160a01b0381166000908152600560205260408120805460019290611d57908490612717565b909155505060008281526004602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b038216611e075760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610603565b6000818152600460205260409020546001600160a01b031615611e6c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610603565b611e78600083836119f1565b6001600160a01b0382166000908152600560205260408120805460019290611ea190849061272e565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160e01b0319821663152a902d60e11b14806104ce57506301ffc9a760e01b6001600160e01b03198316146104ce565b60006001611f4184610c87565b611f4b9190612717565b600083815260096020526040902054909150808214611f9e576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a54600090611fe390600190612717565b6000838152600b6020526040812054600a805493945090928490811061200b5761200b6125dc565b9060005260206000200154905080600a838154811061202c5761202c6125dc565b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a805480612064576120646127ce565b6001900381819060005260206000200160009055905550505050565b600061208b83610c87565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b8280546120d090612542565b90600052602060002090601f0160209004810192826120f25760008555612138565b82601f1061210b57805160ff1916838001178555612138565b82800160010185558215612138579182015b8281111561213857825182559160200191906001019061211d565b50612144929150612148565b5090565b5b808211156121445760008155600101612149565b6001600160e01b0319811681146109cb57600080fd5b60006020828403121561218557600080fd5b81356121908161215d565b9392505050565b6001600160a01b03811681146109cb57600080fd5b80356001600160601b0381168114610b5657600080fd5b600080604083850312156121d657600080fd5b82356121e181612197565b91506121ef602084016121ac565b90509250929050565b6000806040838503121561220b57600080fd5b50508035926020909101359150565b60005b8381101561223557818101518382015260200161221d565b83811115610ef65750506000910152565b6000815180845261225e81602086016020860161221a565b601f01601f19169290920160200192915050565b6020815260006121906020830184612246565b60006020828403121561229757600080fd5b5035919050565b600080604083850312156122b157600080fd5b82356122bc81612197565b946020939093013593505050565b6000806000606084860312156122df57600080fd5b83356122ea81612197565b925060208401356122fa81612197565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561233c5761233c61230b565b604051601f8501601f19908116603f011681019082821181831017156123645761236461230b565b8160405280935085815286868601111561237d57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156123a957600080fd5b813567ffffffffffffffff8111156123c057600080fd5b8201601f810184136123d157600080fd5b61134984823560208401612321565b6000806000606084860312156123f557600080fd5b83359250602084013561240781612197565b9150612415604085016121ac565b90509250925092565b60006020828403121561243057600080fd5b813561219081612197565b6000806040838503121561244e57600080fd5b823561245981612197565b91506020830135801515811461246e57600080fd5b809150509250929050565b60006020828403121561248b57600080fd5b612190826121ac565b600080600080608085870312156124aa57600080fd5b84356124b581612197565b935060208501356124c581612197565b925060408501359150606085013567ffffffffffffffff8111156124e857600080fd5b8501601f810187136124f957600080fd5b61250887823560208401612321565b91505092959194509250565b6000806040838503121561252757600080fd5b823561253281612197565b9150602083013561246e81612197565b600181811c9082168061255657607f821691505b6020821081141561257757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156125ad576125ad61257d565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826125d7576125d76125b2565b500490565b634e487b7160e01b600052603260045260246000fd5b600060208083526000845461260681612542565b80848701526040600180841660008114612627576001811461263b57612669565b60ff19851689840152606089019550612669565b896000528660002060005b858110156126615781548b8201860152908301908801612646565b8a0184019650505b509398975050505050505050565b600080845461268581612542565b6001828116801561269d57600181146126ae576126dd565b60ff198416875282870194506126dd565b8860005260208060002060005b858110156126d45781548a8201529084019082016126bb565b50505082870194505b5050505083516126f181836020880161221a565b01949350505050565b60006020828403121561270c57600080fd5b815161219081612197565b6000828210156127295761272961257d565b500390565b600082198211156127415761274161257d565b500190565b600060001982141561275a5761275a61257d565b5060010190565b600082612770576127706125b2565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526127a76080830184612246565b9695505050505050565b6000602082840312156127c357600080fd5b81516121908161215d565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080c000a";

type KonduxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KonduxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Kondux__factory extends ContractFactory {
  constructor(...args: KonduxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Kondux> {
    return super.deploy(
      _name,
      _symbol,
      _authority,
      overrides || {}
    ) as Promise<Kondux>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _authority: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _authority,
      overrides || {}
    );
  }
  override attach(address: string): Kondux {
    return super.attach(address) as Kondux;
  }
  override connect(signer: Signer): Kondux__factory {
    return super.connect(signer) as Kondux__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KonduxInterface {
    return new utils.Interface(_abi) as KonduxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Kondux {
    return new Contract(address, _abi, signerOrProvider) as Kondux;
  }
}
