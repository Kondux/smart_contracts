/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Kondux,
  KonduxInterface,
} from "../../../contracts/Kondux_NFT.sol/Kondux";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "BaseURIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint96",
        name: "denominator",
        type: "uint96",
      },
    ],
    name: "DenominatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
    ],
    name: "DnaChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_denominator",
        type: "uint96",
      },
    ],
    name: "changeDenominator",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "denominator",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "indexDna",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dna",
        type: "uint256",
      },
    ],
    name: "setDna",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeNumerator",
        type: "uint96",
      },
    ],
    name: "setTokenRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002df838038062002df8833981016040819052620000349162000250565b8151829082906200004d906002906020850190620000dd565b50805162000063906003906020840190620000dd565b5050600c805460ff19169055506200007b3362000083565b5050620002f7565b600c80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000eb90620002ba565b90600052602060002090601f0160209004810192826200010f57600085556200015a565b82601f106200012a57805160ff19168380011785556200015a565b828001600101855582156200015a579182015b828111156200015a5782518255916020019190600101906200013d565b50620001689291506200016c565b5090565b5b808211156200016857600081556001016200016d565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ab57600080fd5b81516001600160401b0380821115620001c857620001c862000183565b604051601f8301601f19908116603f01168101908282118183101715620001f357620001f362000183565b816040528381526020925086838588010111156200021057600080fd5b600091505b8382101562000234578582018301518183018401529082019062000215565b83821115620002465760008385830101525b9695505050505050565b600080604083850312156200026457600080fd5b82516001600160401b03808211156200027c57600080fd5b6200028a8683870162000199565b93506020850151915080821115620002a157600080fd5b50620002b08582860162000199565b9150509250929050565b600181811c90821680620002cf57607f821691505b60208210811415620002f157634e487b7160e01b600052602260045260246000fd5b50919050565b612af180620003076000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80635944c7531161012a57806395d89b41116100bd578063ab51e23a1161008c578063c87b56dd11610071578063c87b56dd14610482578063e985e9c514610495578063f2fde38b146104d157600080fd5b8063ab51e23a1461045c578063b88d4fde1461046f57600080fd5b806395d89b411461040357806396ce07951461040b578063a144819414610436578063a22cb4651461044957600080fd5b806370a08231116100f957806370a08231146103ca578063715018a6146103dd5780638456cb59146103e55780638da5cb5b146103ed57600080fd5b80635944c753146103915780635c975abb146103a45780636352211e146103af5780636c0360eb146103c257600080fd5b806323b872dd116101a257806342842e0e1161017157806342842e0e1461034557806342966c68146103585780634f6ccce71461036b57806355f804b31461037e57600080fd5b806323b872dd146102e55780632a55205a146102f85780632f745c591461032a5780633f4ba83a1461033d57600080fd5b8063081812fc116101de578063081812fc14610275578063095ea7b3146102a057806318160ddd146102b35780631c9ad5b1146102c557600080fd5b806301ffc9a71461021057806304634d8d14610238578063067b61f21461024d57806306fdde0314610260575b600080fd5b61022361021e366004612485565b6104e4565b60405190151581526020015b60405180910390f35b61024b6102463660046124d7565b6104f5565b005b61024b61025b36600461250a565b610556565b6102686105ae565b60405161022f9190612584565b610288610283366004612597565b610640565b6040516001600160a01b03909116815260200161022f565b61024b6102ae3660046125b0565b6106d5565b600a545b60405190815260200161022f565b6102b76102d3366004612597565b600f6020526000908152604090205481565b61024b6102f33660046125da565b6107eb565b61030b61030636600461250a565b610873565b604080516001600160a01b03909316835260208301919091520161022f565b6102b76103383660046125b0565b61091f565b61024b6109c7565b61024b6103533660046125da565b610a1f565b61024b610366366004612597565b610a3a565b6102b7610379366004612597565b610ac1565b61026861038c3660046126a2565b610b65565b61024b61039f3660046126eb565b610c95565b600c5460ff16610223565b6102886103bd366004612597565b610cee565b610268610d79565b6102b76103d8366004612727565b610e07565b61024b610ea1565b61024b610ef9565b600c5461010090046001600160a01b0316610288565b610268610f4f565b600e5461041e906001600160601b031681565b6040516001600160601b03909116815260200161022f565b61024b6104443660046125b0565b610f5e565b61024b610457366004612742565b610fdb565b61041e61046a36600461277e565b610fe6565b61024b61047d366004612799565b61109e565b610268610490366004612597565b61112c565b6102236104a3366004612815565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61024b6104df366004612727565b611215565b60006104ef826112e8565b92915050565b600c546001600160a01b036101009091041633146105485760405162461bcd60e51b81526020600482018190526024820152600080516020612ac583398151915260448201526064015b60405180910390fd5b61055282826112f3565b5050565b600c546001600160a01b036101009091041633146105a45760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b61055282826113f0565b6060600280546105bd9061283f565b80601f01602080910402602001604051908101604052809291908181526020018280546105e99061283f565b80156106365780601f1061060b57610100808354040283529160200191610636565b820191906000526020600020905b81548152906001019060200180831161061957829003601f168201915b5050505050905090565b6000818152600460205260408120546001600160a01b03166106b95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161053f565b506000908152600660205260409020546001600160a01b031690565b60006106e082610cee565b9050806001600160a01b0316836001600160a01b0316141561074e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161053f565b336001600160a01b038216148061076a575061076a81336104a3565b6107dc5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161053f565b6107e6838361148d565b505050565b6107f6335b826114fb565b6108685760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161053f565b6107e68383836115f2565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916108e85750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610907906001600160601b031687612890565b61091191906128c5565b915196919550909350505050565b600061092a83610e07565b821061099e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161053f565b506001600160a01b03919091166000908152600860209081526040808320938352929052205490565b600c546001600160a01b03610100909104163314610a155760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b610a1d6117b1565b565b6107e68383836040518060200160405280600081525061109e565b610a43336107f0565b610ab55760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656400000000000000000000000000000000606482015260840161053f565b610abe8161184d565b50565b6000610acc600a5490565b8210610b405760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161053f565b600a8281548110610b5357610b536128d9565b90600052602060002001549050919050565b600c546060906001600160a01b03610100909104163314610bb65760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b8151610bc990600d9060208501906123d6565b507f5411e8ebf1636d9e83d5fc4900bf80cbac82e8790da2a4c94db4895e889eedf6600d604051610bfa91906128ef565b60405180910390a1600d8054610c0f9061283f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3b9061283f565b8015610c885780601f10610c5d57610100808354040283529160200191610c88565b820191906000526020600020905b815481529060010190602001808311610c6b57829003601f168201915b505050505090505b919050565b600c546001600160a01b03610100909104163314610ce35760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b6107e6838383611867565b6000818152600460205260408120546001600160a01b0316806104ef5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161053f565b600d8054610d869061283f565b80601f0160208091040260200160405190810160405280929190818152602001828054610db29061283f565b8015610dff5780601f10610dd457610100808354040283529160200191610dff565b820191906000526020600020905b815481529060010190602001808311610de257829003601f168201915b505050505081565b60006001600160a01b038216610e855760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161053f565b506001600160a01b031660009081526005602052604090205490565b600c546001600160a01b03610100909104163314610eef5760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b610a1d6000611975565b600c546001600160a01b03610100909104163314610f475760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b610a1d6119e6565b6060600380546105bd9061283f565b600c546001600160a01b03610100909104163314610fac5760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b6000610fb760105490565b9050610fc381836113f0565b610fd1601080546001019055565b6107e68382611a61565b610552338383611a7b565b600c546000906001600160a01b036101009091041633146110375760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b600e80546bffffffffffffffffffffffff19166001600160601b0384169081179091556040519081527f601b85aa9305dbcfbfc81aa2d4b5126c1ce24afdd1bad47d6880e5b6df081f579060200160405180910390a15050600e546001600160601b031690565b6110a833836114fb565b61111a5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161053f565b61112684848484611b4a565b50505050565b6000818152600460205260409020546060906001600160a01b03166111b95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161053f565b6000600d80546111c89061283f565b9050116111e457604051806020016040528060008152506104ef565b600d6111ef83611bc8565b604051602001611200929190612974565b60405160208183030381529060405292915050565b600c546001600160a01b036101009091041633146112635760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b6001600160a01b0381166112df5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161053f565b610abe81611975565b60006104ef82611cde565b6127106001600160601b03821611156113615760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b606482015260840161053f565b6001600160a01b0382166113b75760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c696420726563656976657200000000000000604482015260640161053f565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600055565b600c546001600160a01b0361010090910416331461143e5760405162461bcd60e51b81526020600482018190526024820152600080516020612ac5833981519152604482015260640161053f565b6000828152600f602090815260409182902083905581518481529081018390527f4e26044f7fb3724a9375deb74974fdc2f4e07f265efce87f93cfced354258487910160405180910390a15050565b600081815260066020526040902080546001600160a01b0319166001600160a01b03841690811790915581906114c282610cee565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600460205260408120546001600160a01b03166115745760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161053f565b600061157f83610cee565b9050806001600160a01b0316846001600160a01b031614806115ba5750836001600160a01b03166115af84610640565b6001600160a01b0316145b806115ea57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661160582610cee565b6001600160a01b0316146116815760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161053f565b6001600160a01b0382166116e35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161053f565b6116ee838383611d03565b6116f960008261148d565b6001600160a01b03831660009081526005602052604081208054600192906117229084906129f7565b90915550506001600160a01b0382166000908152600560205260408120805460019290611750908490612a0e565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600c5460ff166118035760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161053f565b600c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61185681611d54565b600090815260016020526040812055565b6127106001600160601b03821611156118d55760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b606482015260840161053f565b6001600160a01b03821661192b5760405162461bcd60e51b815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d65746572730000000000604482015260640161053f565b6040805180820182526001600160a01b0393841681526001600160601b0392831660208083019182526000968752600190529190942093519051909116600160a01b029116179055565b600c80546001600160a01b038381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff85161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600c5460ff1615611a2c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161053f565b600c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118303390565b610552828260405180602001604052806000815250611d5d565b816001600160a01b0316836001600160a01b03161415611add5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161053f565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611b558484846115f2565b611b6184848484611ddb565b6111265760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161053f565b606081611bec5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c165780611c0081612a26565b9150611c0f9050600a836128c5565b9150611bf0565b60008167ffffffffffffffff811115611c3157611c31612616565b6040519080825280601f01601f191660200182016040528015611c5b576020820181803683370190505b5090505b84156115ea57611c706001836129f7565b9150611c7d600a86612a41565b611c88906030612a0e565b60f81b818381518110611c9d57611c9d6128d9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611cd7600a866128c5565b9450611c5f565b60006001600160e01b0319821663780e9d6360e01b14806104ef57506104ef82611f24565b600c5460ff1615611d495760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161053f565b6107e6838383611f64565b6118568161201c565b611d6783836120c3565b611d746000848484611ddb565b6107e65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161053f565b60006001600160a01b0384163b15611f1957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e1f903390899088908890600401612a55565b6020604051808303816000875af1925050508015611e5a575060408051601f3d908101601f19168201909252611e5791810190612a91565b60015b611eff573d808015611e88576040519150601f19603f3d011682016040523d82523d6000602084013e611e8d565b606091505b508051611ef75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161053f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506115ea565b506001949350505050565b60006001600160e01b031982166380ac58cd60e01b1480611f5557506001600160e01b03198216635b5e139f60e01b145b806104ef57506104ef82612211565b6001600160a01b038316611fbf57611fba81600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b611fe2565b816001600160a01b0316836001600160a01b031614611fe257611fe28382612246565b6001600160a01b038216611ff9576107e6816122e3565b826001600160a01b0316826001600160a01b0316146107e6576107e68282612392565b600061202782610cee565b905061203581600084611d03565b61204060008361148d565b6001600160a01b03811660009081526005602052604081208054600192906120699084906129f7565b909155505060008281526004602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166121195760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161053f565b6000818152600460205260409020546001600160a01b03161561217e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161053f565b61218a60008383611d03565b6001600160a01b03821660009081526005602052604081208054600192906121b3908490612a0e565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160e01b0319821663152a902d60e11b14806104ef57506301ffc9a760e01b6001600160e01b03198316146104ef565b6000600161225384610e07565b61225d91906129f7565b6000838152600960205260409020549091508082146122b0576001600160a01b03841660009081526008602090815260408083208584528252808320548484528184208190558352600990915290208190555b5060009182526009602090815260408084208490556001600160a01b039094168352600881528383209183525290812055565b600a546000906122f5906001906129f7565b6000838152600b6020526040812054600a805493945090928490811061231d5761231d6128d9565b9060005260206000200154905080600a838154811061233e5761233e6128d9565b6000918252602080832090910192909255828152600b9091526040808220849055858252812055600a80548061237657612376612aae565b6001900381819060005260206000200160009055905550505050565b600061239d83610e07565b6001600160a01b039093166000908152600860209081526040808320868452825280832085905593825260099052919091209190915550565b8280546123e29061283f565b90600052602060002090601f016020900481019282612404576000855561244a565b82601f1061241d57805160ff191683800117855561244a565b8280016001018555821561244a579182015b8281111561244a57825182559160200191906001019061242f565b5061245692915061245a565b5090565b5b80821115612456576000815560010161245b565b6001600160e01b031981168114610abe57600080fd5b60006020828403121561249757600080fd5b81356124a28161246f565b9392505050565b80356001600160a01b0381168114610c9057600080fd5b80356001600160601b0381168114610c9057600080fd5b600080604083850312156124ea57600080fd5b6124f3836124a9565b9150612501602084016124c0565b90509250929050565b6000806040838503121561251d57600080fd5b50508035926020909101359150565b60005b8381101561254757818101518382015260200161252f565b838111156111265750506000910152565b6000815180845261257081602086016020860161252c565b601f01601f19169290920160200192915050565b6020815260006124a26020830184612558565b6000602082840312156125a957600080fd5b5035919050565b600080604083850312156125c357600080fd5b6125cc836124a9565b946020939093013593505050565b6000806000606084860312156125ef57600080fd5b6125f8846124a9565b9250612606602085016124a9565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561264757612647612616565b604051601f8501601f19908116603f0116810190828211818310171561266f5761266f612616565b8160405280935085815286868601111561268857600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156126b457600080fd5b813567ffffffffffffffff8111156126cb57600080fd5b8201601f810184136126dc57600080fd5b6115ea8482356020840161262c565b60008060006060848603121561270057600080fd5b83359250612710602085016124a9565b915061271e604085016124c0565b90509250925092565b60006020828403121561273957600080fd5b6124a2826124a9565b6000806040838503121561275557600080fd5b61275e836124a9565b91506020830135801515811461277357600080fd5b809150509250929050565b60006020828403121561279057600080fd5b6124a2826124c0565b600080600080608085870312156127af57600080fd5b6127b8856124a9565b93506127c6602086016124a9565b925060408501359150606085013567ffffffffffffffff8111156127e957600080fd5b8501601f810187136127fa57600080fd5b6128098782356020840161262c565b91505092959194509250565b6000806040838503121561282857600080fd5b612831836124a9565b9150612501602084016124a9565b600181811c9082168061285357607f821691505b6020821081141561287457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156128aa576128aa61287a565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826128d4576128d46128af565b500490565b634e487b7160e01b600052603260045260246000fd5b60006020808352600084546129038161283f565b80848701526040600180841660008114612924576001811461293857612966565b60ff19851689840152606089019550612966565b896000528660002060005b8581101561295e5781548b8201860152908301908801612943565b8a0184019650505b509398975050505050505050565b60008084546129828161283f565b6001828116801561299a57600181146129ab576129da565b60ff198416875282870194506129da565b8860005260208060002060005b858110156129d15781548a8201529084019082016129b8565b50505082870194505b5050505083516129ee81836020880161252c565b01949350505050565b600082821015612a0957612a0961287a565b500390565b60008219821115612a2157612a2161287a565b500190565b6000600019821415612a3a57612a3a61287a565b5060010190565b600082612a5057612a506128af565b500690565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612a876080830184612558565b9695505050505050565b600060208284031215612aa357600080fd5b81516124a28161246f565b634e487b7160e01b600052603160045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c634300080c000a";

type KonduxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KonduxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Kondux__factory extends ContractFactory {
  constructor(...args: KonduxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Kondux> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Kondux>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): Kondux {
    return super.attach(address) as Kondux;
  }
  override connect(signer: Signer): Kondux__factory {
    return super.connect(signer) as Kondux__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KonduxInterface {
    return new utils.Interface(_abi) as KonduxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Kondux {
    return new Contract(address, _abi, signerOrProvider) as Kondux;
  }
}
