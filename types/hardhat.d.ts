/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2981__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Burnable__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721Royalty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Royalty__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Authority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Authority__factory>;
    getContractFactory(
      name: "MarketplaceFeeCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MarketplaceFeeCollector__factory>;
    getContractFactory(
      name: "Helix",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Helix__factory>;
    getContractFactory(
      name: "IAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAuthority__factory>;
    getContractFactory(
      name: "IHelix",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHelix__factory>;
    getContractFactory(
      name: "IKondux",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKondux__factory>;
    getContractFactory(
      name: "IKonduxERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKonduxERC20__factory>;
    getContractFactory(
      name: "IKonduxFounders",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKonduxFounders__factory>;
    getContractFactory(
      name: "IMarketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarketplace__factory>;
    getContractFactory(
      name: "INFTContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INFTContract__factory>;
    getContractFactory(
      name: "IStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaking__factory>;
    getContractFactory(
      name: "ITreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasury__factory>;
    getContractFactory(
      name: "KonduxFounders",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KonduxFounders__factory>;
    getContractFactory(
      name: "Kondux",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Kondux__factory>;
    getContractFactory(
      name: "Marketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Marketplace__factory>;
    getContractFactory(
      name: "MinterFounders",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterFounders__factory>;
    getContractFactory(
      name: "MinterPublic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MinterPublic__factory>;
    getContractFactory(
      name: "Staking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Staking__factory>;
    getContractFactory(
      name: "KonduxERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KonduxERC1155__factory>;
    getContractFactory(
      name: "KonduxERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KonduxERC20__factory>;
    getContractFactory(
      name: "KonduxERC721Founders",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KonduxERC721Founders__factory>;
    getContractFactory(
      name: "KonduxERC721kNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KonduxERC721kNFT__factory>;
    getContractFactory(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Treasury__factory>;
    getContractFactory(
      name: "AccessControlled",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlled__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC2981",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2981>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Burnable>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721Royalty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Royalty>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Authority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Authority>;
    getContractAt(
      name: "MarketplaceFeeCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MarketplaceFeeCollector>;
    getContractAt(
      name: "Helix",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Helix>;
    getContractAt(
      name: "IAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAuthority>;
    getContractAt(
      name: "IHelix",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHelix>;
    getContractAt(
      name: "IKondux",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKondux>;
    getContractAt(
      name: "IKonduxERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKonduxERC20>;
    getContractAt(
      name: "IKonduxFounders",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKonduxFounders>;
    getContractAt(
      name: "IMarketplace",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarketplace>;
    getContractAt(
      name: "INFTContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INFTContract>;
    getContractAt(
      name: "IStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaking>;
    getContractAt(
      name: "ITreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasury>;
    getContractAt(
      name: "KonduxFounders",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KonduxFounders>;
    getContractAt(
      name: "Kondux",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Kondux>;
    getContractAt(
      name: "Marketplace",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Marketplace>;
    getContractAt(
      name: "MinterFounders",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterFounders>;
    getContractAt(
      name: "MinterPublic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MinterPublic>;
    getContractAt(
      name: "Staking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Staking>;
    getContractAt(
      name: "KonduxERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KonduxERC1155>;
    getContractAt(
      name: "KonduxERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KonduxERC20>;
    getContractAt(
      name: "KonduxERC721Founders",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KonduxERC721Founders>;
    getContractAt(
      name: "KonduxERC721kNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KonduxERC721kNFT>;
    getContractAt(
      name: "Treasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Treasury>;
    getContractAt(
      name: "AccessControlled",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlled>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
