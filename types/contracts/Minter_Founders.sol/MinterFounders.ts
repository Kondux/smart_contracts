/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface MinterFoundersInterface extends utils.Interface {
  functions: {
    "authority()": FunctionFragment;
    "founders020Claimed(address)": FunctionFragment;
    "founders025Claimed(address)": FunctionFragment;
    "freeFoundersClaimed(address)": FunctionFragment;
    "freeKNFTClaimed(address)": FunctionFragment;
    "kondux()": FunctionFragment;
    "konduxFounders()": FunctionFragment;
    "pausedFounders020()": FunctionFragment;
    "pausedFounders025()": FunctionFragment;
    "pausedFreeFounders()": FunctionFragment;
    "pausedFreeKNFT()": FunctionFragment;
    "pausedWhitelist()": FunctionFragment;
    "priceFounders020()": FunctionFragment;
    "priceFounders025()": FunctionFragment;
    "priceFreeFounders()": FunctionFragment;
    "priceFreeKNFT()": FunctionFragment;
    "rootFounders020()": FunctionFragment;
    "rootFounders025()": FunctionFragment;
    "rootFreeFounders()": FunctionFragment;
    "rootFreeKNFT()": FunctionFragment;
    "setAuthority(address)": FunctionFragment;
    "setKonduxFounders(address)": FunctionFragment;
    "setPausedFounders020(bool)": FunctionFragment;
    "setPausedFounders025(bool)": FunctionFragment;
    "setPausedFreeFounders(bool)": FunctionFragment;
    "setPausedFreeKNFT(bool)": FunctionFragment;
    "setPriceFounders020(uint256)": FunctionFragment;
    "setPriceFounders025(uint256)": FunctionFragment;
    "setPriceFreeFounders(uint256)": FunctionFragment;
    "setPriceFreeKNFT(uint256)": FunctionFragment;
    "setRootFounders020(bytes32)": FunctionFragment;
    "setRootFounders025(bytes32)": FunctionFragment;
    "setRootFreeFounders(bytes32)": FunctionFragment;
    "setRootFreeKNFT(bytes32)": FunctionFragment;
    "setTreasury(address)": FunctionFragment;
    "treasury()": FunctionFragment;
    "whitelistMintFounders020(bytes32[])": FunctionFragment;
    "whitelistMintFounders025(bytes32[])": FunctionFragment;
    "whitelistMintFreeFounders(bytes32[])": FunctionFragment;
    "whitelistMintFreeKNFT(bytes32[])": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "authority"
      | "founders020Claimed"
      | "founders025Claimed"
      | "freeFoundersClaimed"
      | "freeKNFTClaimed"
      | "kondux"
      | "konduxFounders"
      | "pausedFounders020"
      | "pausedFounders025"
      | "pausedFreeFounders"
      | "pausedFreeKNFT"
      | "pausedWhitelist"
      | "priceFounders020"
      | "priceFounders025"
      | "priceFreeFounders"
      | "priceFreeKNFT"
      | "rootFounders020"
      | "rootFounders025"
      | "rootFreeFounders"
      | "rootFreeKNFT"
      | "setAuthority"
      | "setKonduxFounders"
      | "setPausedFounders020"
      | "setPausedFounders025"
      | "setPausedFreeFounders"
      | "setPausedFreeKNFT"
      | "setPriceFounders020"
      | "setPriceFounders025"
      | "setPriceFreeFounders"
      | "setPriceFreeKNFT"
      | "setRootFounders020"
      | "setRootFounders025"
      | "setRootFreeFounders"
      | "setRootFreeKNFT"
      | "setTreasury"
      | "treasury"
      | "whitelistMintFounders020"
      | "whitelistMintFounders025"
      | "whitelistMintFreeFounders"
      | "whitelistMintFreeKNFT"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "authority", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "founders020Claimed",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "founders025Claimed",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "freeFoundersClaimed",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "freeKNFTClaimed",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "kondux", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "konduxFounders",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pausedFounders020",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pausedFounders025",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pausedFreeFounders",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pausedFreeKNFT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pausedWhitelist",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFounders020",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFounders025",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFreeFounders",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFreeKNFT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rootFounders020",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rootFounders025",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rootFreeFounders",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "rootFreeKNFT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setAuthority",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setKonduxFounders",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPausedFounders020",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPausedFounders025",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPausedFreeFounders",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPausedFreeKNFT",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPriceFounders020",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPriceFounders025",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPriceFreeFounders",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setPriceFreeKNFT",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setRootFounders020",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "setRootFounders025",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "setRootFreeFounders",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "setRootFreeKNFT",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "setTreasury",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(functionFragment: "treasury", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "whitelistMintFounders020",
    values: [PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistMintFounders025",
    values: [PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistMintFreeFounders",
    values: [PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistMintFreeKNFT",
    values: [PromiseOrValue<BytesLike>[]]
  ): string;

  decodeFunctionResult(functionFragment: "authority", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "founders020Claimed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "founders025Claimed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "freeFoundersClaimed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "freeKNFTClaimed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "kondux", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "konduxFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pausedFounders020",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pausedFounders025",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pausedFreeFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pausedFreeKNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pausedWhitelist",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "priceFounders020",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "priceFounders025",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "priceFreeFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "priceFreeKNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rootFounders020",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rootFounders025",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rootFreeFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "rootFreeKNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAuthority",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setKonduxFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPausedFounders020",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPausedFounders025",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPausedFreeFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPausedFreeKNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPriceFounders020",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPriceFounders025",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPriceFreeFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPriceFreeKNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRootFounders020",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRootFounders025",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRootFreeFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setRootFreeKNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTreasury",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "treasury", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "whitelistMintFounders020",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistMintFounders025",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistMintFreeFounders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistMintFreeKNFT",
    data: BytesLike
  ): Result;

  events: {
    "AuthorityUpdated(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AuthorityUpdated"): EventFragment;
}

export interface AuthorityUpdatedEventObject {
  authority: string;
}
export type AuthorityUpdatedEvent = TypedEvent<
  [string],
  AuthorityUpdatedEventObject
>;

export type AuthorityUpdatedEventFilter =
  TypedEventFilter<AuthorityUpdatedEvent>;

export interface MinterFounders extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MinterFoundersInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    authority(overrides?: CallOverrides): Promise<[string]>;

    founders020Claimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    founders025Claimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    freeFoundersClaimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    freeKNFTClaimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    kondux(overrides?: CallOverrides): Promise<[string]>;

    konduxFounders(overrides?: CallOverrides): Promise<[string]>;

    pausedFounders020(overrides?: CallOverrides): Promise<[boolean]>;

    pausedFounders025(overrides?: CallOverrides): Promise<[boolean]>;

    pausedFreeFounders(overrides?: CallOverrides): Promise<[boolean]>;

    pausedFreeKNFT(overrides?: CallOverrides): Promise<[boolean]>;

    pausedWhitelist(overrides?: CallOverrides): Promise<[boolean]>;

    priceFounders020(overrides?: CallOverrides): Promise<[BigNumber]>;

    priceFounders025(overrides?: CallOverrides): Promise<[BigNumber]>;

    priceFreeFounders(overrides?: CallOverrides): Promise<[BigNumber]>;

    priceFreeKNFT(overrides?: CallOverrides): Promise<[BigNumber]>;

    rootFounders020(overrides?: CallOverrides): Promise<[string]>;

    rootFounders025(overrides?: CallOverrides): Promise<[string]>;

    rootFreeFounders(overrides?: CallOverrides): Promise<[string]>;

    rootFreeKNFT(overrides?: CallOverrides): Promise<[string]>;

    setAuthority(
      _newAuthority: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setKonduxFounders(
      _konduxFounders: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPausedFounders020(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPausedFounders025(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPausedFreeFounders(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPausedFreeKNFT(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPriceFounders020(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPriceFounders025(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPriceFreeFounders(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setPriceFreeKNFT(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setRootFounders020(
      _rootFounders020: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setRootFounders025(
      _rootFounders025: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setRootFreeFounders(
      _rootFreeFounders: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setRootFreeKNFT(
      _rootFreeKNFT: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setTreasury(
      _treasury: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    treasury(overrides?: CallOverrides): Promise<[string]>;

    whitelistMintFounders020(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    whitelistMintFounders025(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    whitelistMintFreeFounders(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    whitelistMintFreeKNFT(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  authority(overrides?: CallOverrides): Promise<string>;

  founders020Claimed(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  founders025Claimed(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  freeFoundersClaimed(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  freeKNFTClaimed(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  kondux(overrides?: CallOverrides): Promise<string>;

  konduxFounders(overrides?: CallOverrides): Promise<string>;

  pausedFounders020(overrides?: CallOverrides): Promise<boolean>;

  pausedFounders025(overrides?: CallOverrides): Promise<boolean>;

  pausedFreeFounders(overrides?: CallOverrides): Promise<boolean>;

  pausedFreeKNFT(overrides?: CallOverrides): Promise<boolean>;

  pausedWhitelist(overrides?: CallOverrides): Promise<boolean>;

  priceFounders020(overrides?: CallOverrides): Promise<BigNumber>;

  priceFounders025(overrides?: CallOverrides): Promise<BigNumber>;

  priceFreeFounders(overrides?: CallOverrides): Promise<BigNumber>;

  priceFreeKNFT(overrides?: CallOverrides): Promise<BigNumber>;

  rootFounders020(overrides?: CallOverrides): Promise<string>;

  rootFounders025(overrides?: CallOverrides): Promise<string>;

  rootFreeFounders(overrides?: CallOverrides): Promise<string>;

  rootFreeKNFT(overrides?: CallOverrides): Promise<string>;

  setAuthority(
    _newAuthority: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setKonduxFounders(
    _konduxFounders: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPausedFounders020(
    _paused: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPausedFounders025(
    _paused: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPausedFreeFounders(
    _paused: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPausedFreeKNFT(
    _paused: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPriceFounders020(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPriceFounders025(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPriceFreeFounders(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setPriceFreeKNFT(
    _price: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setRootFounders020(
    _rootFounders020: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setRootFounders025(
    _rootFounders025: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setRootFreeFounders(
    _rootFreeFounders: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setRootFreeKNFT(
    _rootFreeKNFT: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setTreasury(
    _treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  treasury(overrides?: CallOverrides): Promise<string>;

  whitelistMintFounders020(
    _merkleProof: PromiseOrValue<BytesLike>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  whitelistMintFounders025(
    _merkleProof: PromiseOrValue<BytesLike>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  whitelistMintFreeFounders(
    _merkleProof: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  whitelistMintFreeKNFT(
    _merkleProof: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    authority(overrides?: CallOverrides): Promise<string>;

    founders020Claimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    founders025Claimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    freeFoundersClaimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    freeKNFTClaimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    kondux(overrides?: CallOverrides): Promise<string>;

    konduxFounders(overrides?: CallOverrides): Promise<string>;

    pausedFounders020(overrides?: CallOverrides): Promise<boolean>;

    pausedFounders025(overrides?: CallOverrides): Promise<boolean>;

    pausedFreeFounders(overrides?: CallOverrides): Promise<boolean>;

    pausedFreeKNFT(overrides?: CallOverrides): Promise<boolean>;

    pausedWhitelist(overrides?: CallOverrides): Promise<boolean>;

    priceFounders020(overrides?: CallOverrides): Promise<BigNumber>;

    priceFounders025(overrides?: CallOverrides): Promise<BigNumber>;

    priceFreeFounders(overrides?: CallOverrides): Promise<BigNumber>;

    priceFreeKNFT(overrides?: CallOverrides): Promise<BigNumber>;

    rootFounders020(overrides?: CallOverrides): Promise<string>;

    rootFounders025(overrides?: CallOverrides): Promise<string>;

    rootFreeFounders(overrides?: CallOverrides): Promise<string>;

    rootFreeKNFT(overrides?: CallOverrides): Promise<string>;

    setAuthority(
      _newAuthority: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setKonduxFounders(
      _konduxFounders: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPausedFounders020(
      _paused: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPausedFounders025(
      _paused: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPausedFreeFounders(
      _paused: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPausedFreeKNFT(
      _paused: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPriceFounders020(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPriceFounders025(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPriceFreeFounders(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setPriceFreeKNFT(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setRootFounders020(
      _rootFounders020: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    setRootFounders025(
      _rootFounders025: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    setRootFreeFounders(
      _rootFreeFounders: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    setRootFreeKNFT(
      _rootFreeKNFT: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    setTreasury(
      _treasury: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    treasury(overrides?: CallOverrides): Promise<string>;

    whitelistMintFounders020(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    whitelistMintFounders025(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    whitelistMintFreeFounders(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    whitelistMintFreeKNFT(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "AuthorityUpdated(address)"(authority?: null): AuthorityUpdatedEventFilter;
    AuthorityUpdated(authority?: null): AuthorityUpdatedEventFilter;
  };

  estimateGas: {
    authority(overrides?: CallOverrides): Promise<BigNumber>;

    founders020Claimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    founders025Claimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    freeFoundersClaimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    freeKNFTClaimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kondux(overrides?: CallOverrides): Promise<BigNumber>;

    konduxFounders(overrides?: CallOverrides): Promise<BigNumber>;

    pausedFounders020(overrides?: CallOverrides): Promise<BigNumber>;

    pausedFounders025(overrides?: CallOverrides): Promise<BigNumber>;

    pausedFreeFounders(overrides?: CallOverrides): Promise<BigNumber>;

    pausedFreeKNFT(overrides?: CallOverrides): Promise<BigNumber>;

    pausedWhitelist(overrides?: CallOverrides): Promise<BigNumber>;

    priceFounders020(overrides?: CallOverrides): Promise<BigNumber>;

    priceFounders025(overrides?: CallOverrides): Promise<BigNumber>;

    priceFreeFounders(overrides?: CallOverrides): Promise<BigNumber>;

    priceFreeKNFT(overrides?: CallOverrides): Promise<BigNumber>;

    rootFounders020(overrides?: CallOverrides): Promise<BigNumber>;

    rootFounders025(overrides?: CallOverrides): Promise<BigNumber>;

    rootFreeFounders(overrides?: CallOverrides): Promise<BigNumber>;

    rootFreeKNFT(overrides?: CallOverrides): Promise<BigNumber>;

    setAuthority(
      _newAuthority: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setKonduxFounders(
      _konduxFounders: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPausedFounders020(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPausedFounders025(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPausedFreeFounders(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPausedFreeKNFT(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPriceFounders020(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPriceFounders025(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPriceFreeFounders(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setPriceFreeKNFT(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setRootFounders020(
      _rootFounders020: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setRootFounders025(
      _rootFounders025: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setRootFreeFounders(
      _rootFreeFounders: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setRootFreeKNFT(
      _rootFreeKNFT: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setTreasury(
      _treasury: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    treasury(overrides?: CallOverrides): Promise<BigNumber>;

    whitelistMintFounders020(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    whitelistMintFounders025(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    whitelistMintFreeFounders(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    whitelistMintFreeKNFT(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    authority(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    founders020Claimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    founders025Claimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    freeFoundersClaimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    freeKNFTClaimed(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kondux(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    konduxFounders(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pausedFounders020(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pausedFounders025(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pausedFreeFounders(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pausedFreeKNFT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pausedWhitelist(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFounders020(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFounders025(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFreeFounders(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFreeKNFT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rootFounders020(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rootFounders025(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rootFreeFounders(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    rootFreeKNFT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setAuthority(
      _newAuthority: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setKonduxFounders(
      _konduxFounders: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPausedFounders020(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPausedFounders025(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPausedFreeFounders(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPausedFreeKNFT(
      _paused: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPriceFounders020(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPriceFounders025(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPriceFreeFounders(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setPriceFreeKNFT(
      _price: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setRootFounders020(
      _rootFounders020: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setRootFounders025(
      _rootFounders025: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setRootFreeFounders(
      _rootFreeFounders: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setRootFreeKNFT(
      _rootFreeKNFT: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setTreasury(
      _treasury: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    treasury(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    whitelistMintFounders020(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    whitelistMintFounders025(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    whitelistMintFreeFounders(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    whitelistMintFreeKNFT(
      _merkleProof: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
